/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package co.stackpointer.cier.modelo.fachada;

import co.stackpointer.cier.modelo.EntidadesConsultas.ConsultaAmbitoRiesgosNaturales;
import co.stackpointer.cier.modelo.entidad.sistema.Parametro;
import co.stackpointer.cier.modelo.filtro.ambito.FiltroAmbitoAccesibilidad;
import co.stackpointer.cier.modelo.filtro.ambito.FiltroAmbito;
import co.stackpointer.cier.modelo.filtro.ambito.FiltroAmbitoAccesibilidadInterna;
import co.stackpointer.cier.modelo.filtro.ambito.FiltroAmbitoAmbiente;
import co.stackpointer.cier.modelo.filtro.ambito.FiltroAmbitoAmpliacion;
import co.stackpointer.cier.modelo.filtro.ambito.FiltroAmbitoComplementarios;
import co.stackpointer.cier.modelo.filtro.ambito.FiltroAmbitoConfort;
import co.stackpointer.cier.modelo.filtro.ambito.FiltroAmbitoControlVigilancia;
import co.stackpointer.cier.modelo.filtro.ambito.FiltroAmbitoEdificio;
import co.stackpointer.cier.modelo.filtro.ambito.FiltroAmbitoEspacio;
import co.stackpointer.cier.modelo.filtro.ambito.FiltroAmbitoEspacioConsolidado;
import co.stackpointer.cier.modelo.filtro.ambito.FiltroAmbitoGeneralidad;
import co.stackpointer.cier.modelo.filtro.ambito.FiltroAmbitoMigracion;
import co.stackpointer.cier.modelo.filtro.ambito.FiltroAmbitoPropiedad;
import co.stackpointer.cier.modelo.filtro.ambito.FiltroAmbitoRedistribucion;
import co.stackpointer.cier.modelo.filtro.ambito.FiltroAmbitoRiesgoAntropico;
import co.stackpointer.cier.modelo.filtro.ambito.FiltroAmbitoRiesgoNatural;
import co.stackpointer.cier.modelo.filtro.ambito.FiltroAmbitoSeguridad;
import co.stackpointer.cier.modelo.filtro.ambito.FiltroAmbitoServicio;
import co.stackpointer.cier.modelo.filtro.ambito.FiltroAmbitoServicioConsolidado;
import co.stackpointer.cier.modelo.filtro.ambito.FiltroAmbitoSostenibilidad;
import co.stackpointer.cier.modelo.tipo.Cumplimiento;
import co.stackpointer.cier.modelo.tipo.ParamBaseDatos;
import co.stackpointer.cier.modelo.tipo.ParamIndicador;
import co.stackpointer.cier.modelo.tipo.ParamNivelConsul;
import co.stackpointer.cier.modelo.tipo.ParamSistema;
import co.stackpointer.cier.modelo.entidad.indicador.UnidadFuncional;
import co.stackpointer.cier.modelo.utilidad.UtilCadena;
import co.stackpointer.cier.modelo.utilidad.UtilProperties;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.Types;
import java.util.ArrayList;
import java.util.List;
import javax.ejb.EJB;
import javax.ejb.Stateless;
import javax.inject.Inject;
import javax.naming.Context;
import javax.naming.InitialContext;
import javax.persistence.NoResultException;
import javax.persistence.Query;
import javax.persistence.TypedQuery;
import javax.sql.DataSource;

/**
 *
 * @author user
 */
@Stateless
public class ConsultaAmbitoFacade implements ConsultaAmbitoFacadeLocal {

    @Inject
    private TenantPersistenceManager tpm;
    @EJB
    private ParametrosFacadeLocal facParam;

    private String getSQLNivelAgrupamiento(FiltroAmbito filtro) {
        if (filtro.getAgrupamiento() <= ParamNivelConsul.CINCO.getNivel()) {
            return "id_nivel" + filtro.getAgrupamiento();
        } else if (filtro.isAgrupamientoEstablecimiento()) {
            return "id_establecimiento";
        } else if (filtro.isAgrupamientoSede()) {
            return "id_sede";
        } else if (filtro.isAgrupamientoPredio()) {
            return "id_predio";
        } else {
            return null;
        }
    }

    private String getSQLFiltrosAtributos(FiltroAmbito filtro) {
        StringBuilder sql = new StringBuilder();
        sql.append(" inner join ind_auxiliar_consultas n2 ");

        if (ParamBaseDatos.ORACLE.equals(UtilProperties.getDbMotor())) {
            sql.append(" on n2.id_predio = t2.id_predio and n2.periodo = t2.periodo and n2.id_tnt = t2.id_tnt");
        } else {
            sql.append(" on n2.id_predio = aux.id_predio and n2.periodo = aux.periodo and n2.id_tnt = aux.id_tnt");
        }

        if (filtro.getCodZona() != null) {
            sql.append(" and n2.codigo_zona = ?cod_zona");
        }
        if (filtro.getCodSector() != null) {
            sql.append(" and n2.codigo_sector = ?cod_sector");
        }
        return sql.toString();
    }

    private String agregarCondicionConfort(String subquery, Integer condicion) {
        if (condicion != null) {
            if (ParamBaseDatos.ORACLE.equals(UtilProperties.getDbMotor())) {
                subquery = subquery.replaceAll("--filtro", "");
            } else {
                subquery = subquery.replaceAll("--filtro_simular", "");
            }

            subquery = subquery.replaceAll("cond_", condicion.toString());
        }
        return subquery;
    }

    private String getSQLConsultarIndicadorAlmacenado() {
        tpm.getEm().clear();
        Parametro parametro = facParam.consultarParametro(ParamSistema.SQL_CONSULTAR_INDICADOR_ALMACENADO.name());
        return parametro != null ? parametro.getValor() : null;
    }

    private String consultarCodInstrumentoPorPeriodo(Integer periodo) {
        try {
            tpm.getEm().clear();
            String sql = "select distinct i.cod_instrumento"
                    + " from dig_instrumentos i"
                    + " inner join ind_auxiliar_indicador aux on aux.id_dig_instrumento = i.id and aux.id_predio = i.id_predio and aux.id_tnt = i.id_tnt"
                    + " where aux.id_tnt =?id_tnt and aux.periodo = ?periodo";
            Query query = tpm.getEm().createNativeQuery(sql);
            query.setParameter("id_tnt", tpm.getCurrentTenant());
            query.setParameter("periodo", periodo);
            return (String) query.getSingleResult();
        } catch (NoResultException e) {
            return null;
        }
    }

    private String consultarFormulaSQLIndicador(ParamIndicador indicador, Long nivel, String codInstrumento, Integer periodo) {
        try {
            tpm.getEm().clear();
            TypedQuery<String> query = tpm.getEm().createNamedQuery("DefinicionIndicador.consultarFormulaSQL", String.class);
            query.setParameter("codIndicador", indicador.name());
            query.setParameter("nivelAgrupamiento", nivel);
            query.setParameter("codInstrumento", codInstrumento);
            String formula = query.getSingleResult();
            formula = formula.replaceAll("\\?periodo", String.valueOf(periodo));
            String tenant = String.valueOf(tpm.getCurrentTenant());
            formula = formula.replaceAll("\\?tenant", tenant);
            return formula;
        } catch (NoResultException e) {
            return null;
        }
    }

    private String consultarFormulaSQLIndicador(ParamIndicador indicador, ParamNivelConsul nivelAgrupamiento, String codInstrumento, Integer periodo) {
        return consultarFormulaSQLIndicador(indicador, nivelAgrupamiento.getNivel(), codInstrumento, periodo);
    }

    @Override
    public List<Object[]> consultarGeneralidades(FiltroAmbitoGeneralidad filtro) {
        if (filtro.isConsultaDeTiempoReal()) {
            return this.consultarGeneralidadesTiempoReal(filtro);
        } else {
            return consultarGeneralidadesIndicadores(filtro);
        }
    }

    private List<Object[]> consultarGeneralidadesIndicadores(FiltroAmbitoGeneralidad filtro) {
        StringBuilder sql = new StringBuilder();

// consulta por nivel de agrupamiento superior a predio
// SELECT
        sql.append(" select distinct");
        if (filtro.isAgrupamientoPredio()) {
            //sql.append(" n.nombre_nivel1, n.nombre_nivel2, n.nombre_nivel3, n.nombre_nivel4, n.nombre_nivel5");
            sql.append(" n.codigo_nivel1,n.nombre_nivel1");
            sql.append(",n.codigo_nivel2,n.nombre_nivel2");
            sql.append(",n.codigo_nivel3,n.nombre_nivel3");
            sql.append(",n.codigo_nivel4,n.nombre_nivel4");
            sql.append(",n.codigo_nivel5,n.nombre_nivel5");
            sql.append(" ,n.codigo_establecimiento, n.nombre_establecimiento");
            sql.append(" ,n.codigo_sede, n.nombre_sede");
            sql.append(" ,n.codigo_predio, n.nombre_predio");
            //otros
            sql.append(" ,n.direccion_predio, n.nombre_zona");
            sql.append(" ,n.nombre_sector, n.nombre_clima");
            //etnias
            sql.append(" ,etnias.valor");
            // numero de jornadas educativas por predio
            sql.append(" ,num_jor.valor");
            //total de estudiantes por predio  
            sql.append(" ,tot_estud.valor");
            //total area construccion por predio
            sql.append(" ,tot_area.valor");
            //area real del predio
            sql.append(" ,area_predio.valor");
        } else {
            if (filtro.isAgrupamientoNivel0()) {
                sql.append(" n.nombre_nivel0");
            }
            if (filtro.isAgrupamientoNivel1()) {
                //sql.append(" n.nombre_nivel1");
                sql.append(" n.codigo_nivel1,n.nombre_nivel1");
            }
            if (filtro.isAgrupamientoNivel2()) {
                //sql.append(" n.nombre_nivel1, n.nombre_nivel2");
                sql.append(" n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
            }
            if (filtro.isAgrupamientoNivel3()) {
                //sql.append(" n.nombre_nivel1, n.nombre_nivel2, n.nombre_nivel3");
                sql.append(" n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
            }
            if (filtro.isAgrupamientoNivel4()) {
                //sql.append(" n.nombre_nivel1, n.nombre_nivel2, n.nombre_nivel3, n.nombre_nivel4");
                sql.append(" n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
                sql.append(",n.codigo_nivel4,n.nombre_nivel4");
            }
            if (filtro.isAgrupamientoNivel5()) {
                //sql.append(" n.nombre_nivel1, n.nombre_nivel2, n.nombre_nivel3, n.nombre_nivel4, n.nombre_nivel5");
                sql.append(" n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
                sql.append(",n.codigo_nivel4,n.nombre_nivel4");
                sql.append(",n.codigo_nivel5,n.nombre_nivel5");
            }
            if (filtro.isAgrupamientoEstablecimiento()) {
                //sql.append(" n.nombre_nivel1, n.nombre_nivel2, n.nombre_nivel3, n.nombre_nivel4, n.nombre_nivel5");
                sql.append(" n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
                sql.append(",n.codigo_nivel4,n.nombre_nivel4");
                sql.append(",n.codigo_nivel5,n.nombre_nivel5");
                sql.append(" ,n.codigo_establecimiento, n.nombre_establecimiento");
            }
            if (filtro.isAgrupamientoSede()) {
                //sql.append(" n.nombre_nivel1, n.nombre_nivel2, n.nombre_nivel3, n.nombre_nivel4, n.nombre_nivel5");
                sql.append(" n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
                sql.append(",n.codigo_nivel4,n.nombre_nivel4");
                sql.append(",n.codigo_nivel5,n.nombre_nivel5");
                sql.append(" ,n.codigo_establecimiento, n.nombre_establecimiento");
                sql.append(" ,n.codigo_sede, n.nombre_sede");
            }
            // total de estudiantes por predio
            sql.append(" ,tot_estud.valor");
            if (!filtro.isAgrupamientoSede()) {
                //numero de establecimientos   
                if (!filtro.isAgrupamientoEstablecimiento()) {
                    sql.append(" ,tot_estab.valor");
                }
                // numero de sedes
                sql.append(" ,tot_sede.valor");
            }
            //numero de predios
            sql.append(" ,tot_predio.valor");
        }
// FROM 
        sql.append(" from ind_auxiliar_indicador aux");
        sql.append(" inner join ind_auxiliar_consultas n on n.id_predio = aux.id_predio and n.periodo = aux.periodo and n.id_tnt = aux.id_tnt");

        String strSQLNivelAgrupamiento = this.getSQLNivelAgrupamiento(filtro);
        String strSQLConsultarIndicador = this.getSQLConsultarIndicadorAlmacenado();
        //total de estudiantes por predio  
        sql.append(" left join (");
        sql.append(strSQLConsultarIndicador);
        sql.append(" ) tot_estud on tot_estud.id_tnt = aux.id_tnt and tot_estud.periodo = aux.periodo");
        sql.append(String.format(" and tot_estud.cod_indicador = '%s'", ParamIndicador.IND_TOTAL_ESTUDIANTES));
        sql.append(" and tot_estud.nivel_agrupamiento = ?nivel_agrupamiento");
        sql.append(" and tot_estud.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
        if (filtro.isAgrupamientoPredio()) {
            // numero de jornadas educativas por predio
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) num_jor on num_jor.id_tnt = aux.id_tnt and num_jor.periodo = aux.periodo");
            sql.append(String.format(" and num_jor.cod_indicador = '%s'", ParamIndicador.IND_NUMERO_JORNADAS_PREDIO));
            sql.append(" and num_jor.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and num_jor.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            //total area construccion por predio            
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tot_area on tot_area.id_tnt = aux.id_tnt and tot_area.periodo = aux.periodo");
            sql.append(String.format(" and tot_area.cod_indicador = '%s'", ParamIndicador.IND_TOTAL_AREA_CONSTRUCCION_PREDIO));
            sql.append(" and tot_area.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tot_area.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            //area real del predio          
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) area_predio on area_predio.id_tnt = aux.id_tnt and area_predio.periodo = aux.periodo");
            sql.append(String.format(" and area_predio.cod_indicador = '%s'", ParamIndicador.IND_AREA_REAL_PREDIO));
            sql.append(" and area_predio.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and area_predio.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            //etnias del predio
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) etnias on etnias.id_tnt = aux.id_tnt and etnias.periodo = aux.periodo");
            sql.append(String.format(" and etnias.cod_indicador = '%s'", ParamIndicador.IND_ETNIAS_PREDIO));
            sql.append(" and etnias.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and etnias.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
        } else {
            if (!filtro.isAgrupamientoSede()) {
                if (!filtro.isAgrupamientoEstablecimiento()) {
                    //numero de establecimientos    
                    sql.append(" left join (");
                    sql.append(strSQLConsultarIndicador);
                    sql.append(" ) tot_estab on tot_estab.id_tnt = aux.id_tnt and tot_estab.periodo = aux.periodo");
                    sql.append(String.format(" and tot_estab.cod_indicador = '%s'", ParamIndicador.IND_TOTAL_ESTABLECIMIENTOS));
                    sql.append(" and tot_estab.nivel_agrupamiento = ?nivel_agrupamiento");
                    sql.append(" and tot_estab.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
                }
                // numero de sedes
                sql.append(" left join (");
                sql.append(strSQLConsultarIndicador);
                sql.append(" ) tot_sede on tot_sede.id_tnt = aux.id_tnt and tot_sede.periodo = aux.periodo");
                sql.append(String.format(" and tot_sede.cod_indicador = '%s'", ParamIndicador.IND_TOTAL_SEDES));
                sql.append(" and tot_sede.nivel_agrupamiento = ?nivel_agrupamiento");
                sql.append(" and tot_sede.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            }
            //numero de predios
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tot_predio on tot_predio.id_tnt = aux.id_tnt and tot_predio.periodo = aux.periodo");
            sql.append(String.format(" and tot_predio.cod_indicador = '%s'", ParamIndicador.IND_TOTAL_PREDIOS));
            sql.append(" and tot_predio.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tot_predio.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
        }
// WHERE
        sql.append(" where aux.id_tnt = ?id_tnt and aux.periodo = ?periodo");
        if (filtro.isAgrupamientoPredio()) {
            sql.append(" and n.principal_establecimiento = 1");
        }
        if (filtro.getIdNivel0() != null) {
            sql.append(" and n.id_nivel0 = ?id_nivel0");
        }
        if (filtro.getIdNivel1() != null) {
            sql.append(" and n.id_nivel1 = ?id_nivel1");
        }
        if (filtro.getIdNivel2() != null) {
            sql.append(" and n.id_nivel2 = ?id_nivel2");
        }
        if (filtro.getIdNivel3() != null) {
            sql.append(" and n.id_nivel3 = ?id_nivel3");
        }
        if (filtro.getIdNivel4() != null) {
            sql.append(" and n.id_nivel4 = ?id_nivel4");
        }
        if (filtro.getIdNivel5() != null) {
            sql.append(" and n.id_nivel5 = ?id_nivel5");
        }
        if (filtro.getIdEstablecimiento() != null) {
            sql.append(" and n.id_establecimiento = ?id_establecimiento");
        }
        if (filtro.getIdSede() != null) {
            sql.append(" and n.id_sede = ?id_sede");
        }
        if (filtro.getIdPredio() != null) {
            sql.append(" and n.id_predio = ?id_predio");
        }

        Query query = tpm.getEm().createNativeQuery(sql.toString());
        query.setParameter("id_tnt", tpm.getCurrentTenant());
        query.setParameter("periodo", filtro.getPeriodo());
        query.setParameter("idioma", filtro.getIdioma());
        query.setParameter("id_nivel0", filtro.getIdNivel0());
        query.setParameter("nivel_agrupamiento", filtro.getAgrupamiento());
        if (filtro.getIdNivel1() != null) {
            query.setParameter("id_nivel1", filtro.getIdNivel1());
        }
        if (filtro.getIdNivel2() != null) {
            query.setParameter("id_nivel2", filtro.getIdNivel2());
        }
        if (filtro.getIdNivel3() != null) {
            query.setParameter("id_nivel3", filtro.getIdNivel3());
        }
        if (filtro.getIdNivel4() != null) {
            query.setParameter("id_nivel4", filtro.getIdNivel4());
        }
        if (filtro.getIdNivel5() != null) {
            query.setParameter("id_nivel5", filtro.getIdNivel5());
        }
        if (filtro.getIdEstablecimiento() != null) {
            query.setParameter("id_establecimiento", filtro.getIdEstablecimiento());
        }
        if (filtro.getIdSede() != null) {
            query.setParameter("id_sede", filtro.getIdSede());
        }
        if (filtro.getIdPredio() != null) {
            query.setParameter("id_predio", filtro.getIdPredio());
        }
        return query.getResultList();
    }

    private List<Object[]> consultarGeneralidadesTiempoReal(FiltroAmbitoGeneralidad filtro) {
        String codInstrumento = this.consultarCodInstrumentoPorPeriodo(filtro.getPeriodo());
        StringBuilder sql = new StringBuilder();
        StringBuilder agrupamiento = new StringBuilder();
        String funcion = "";
        if (ParamBaseDatos.ORACLE.equals(UtilProperties.getDbMotor())) {
            funcion = "nvl";
        } else {
            funcion = "coalesce";
        }
//SELECT
        sql.append(" select ");
        if (filtro.isAgrupamientoPredio()) {
            //agrupamiento.append(" n.nombre_nivel1, n.nombre_nivel2, n.nombre_nivel3, n.nombre_nivel4, n.nombre_nivel5");
            agrupamiento.append(" n.codigo_nivel1,n.nombre_nivel1");
            agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
            agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
            agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
            agrupamiento.append(",n.codigo_nivel5,n.nombre_nivel5");
            agrupamiento.append(" ,n.codigo_establecimiento, n.nombre_establecimiento");
            agrupamiento.append(" ,n.codigo_sede, n.nombre_sede");
            agrupamiento.append(" ,n.codigo_predio, n.nombre_predio");
            //otros
            agrupamiento.append(" ,n.direccion_predio, n.nombre_zona");
            agrupamiento.append(" ,n.nombre_sector, n.nombre_clima");
            //etnias
            agrupamiento.append(" ,etnias.etnias");
            // nivel de enseñaza
            if (filtro.getCodNivelEnseñaza() != null) {
                agrupamiento.append(" ,niv_ense.nombre");
                agrupamiento.append(" ,niv_ense.total_estudiantes");
            }
            // datos informativos
            sql.append(agrupamiento.toString());

            // indicadores
            // numero de jornadas educativas por predio           
            sql.append(" ,sum(").append(funcion).append("(num_jor.numero_jornadas,0)) numero_jornadas");
            //total de estudiantes por predio              
            sql.append(" ,sum(").append(funcion).append("(total_est.total_estudiantes,0)) total_estudiantes");
            //total area construccion por predio          
            sql.append(" ,sum(").append(funcion).append("(total_area.total_area_construccion,0)) total_area_construccion");
            //area real del predio
            sql.append(" ,sum(").append(funcion).append("(area_predio.area_real_predio,0)) area_real_predio");
        } else {
            if (filtro.isAgrupamientoNivel0()) {
                agrupamiento.append(" n.nombre_nivel0");
            }
            if (filtro.isAgrupamientoNivel1()) {
                //agrupamiento.append(" n.nombre_nivel1");
                agrupamiento.append(" n.codigo_nivel1,n.nombre_nivel1");
            }
            if (filtro.isAgrupamientoNivel2()) {
                //agrupamiento.append(" n.nombre_nivel1, n.nombre_nivel2");
                agrupamiento.append(" n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
            }
            if (filtro.isAgrupamientoNivel3()) {
                //agrupamiento.append(" n.nombre_nivel1, n.nombre_nivel2, n.nombre_nivel3");
                agrupamiento.append(" n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");

            }
            if (filtro.isAgrupamientoNivel4()) {
                //agrupamiento.append(" n.nombre_nivel1, n.nombre_nivel2, n.nombre_nivel3, n.nombre_nivel4");
                agrupamiento.append(" n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
            }
            if (filtro.isAgrupamientoNivel5()) {
                //agrupamiento.append(" n.nombre_nivel1, n.nombre_nivel2, n.nombre_nivel3, n.nombre_nivel4, n.nombre_nivel5");
                agrupamiento.append(" n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
                agrupamiento.append(",n.codigo_nivel5,n.nombre_nivel5");
            }
            if (filtro.isAgrupamientoEstablecimiento()) {
                //agrupamiento.append(" n.nombre_nivel1, n.nombre_nivel2, n.nombre_nivel3, n.nombre_nivel4, n.nombre_nivel5");
                agrupamiento.append(" n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
                agrupamiento.append(",n.codigo_nivel5,n.nombre_nivel5");
                agrupamiento.append(" ,n.codigo_establecimiento, n.nombre_establecimiento");
            }
            if (filtro.isAgrupamientoSede()) {
                //agrupamiento.append(" n.nombre_nivel1, n.nombre_nivel2, n.nombre_nivel3, n.nombre_nivel4, n.nombre_nivel5");
                agrupamiento.append(" n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
                agrupamiento.append(",n.codigo_nivel5,n.nombre_nivel5");
                agrupamiento.append(" ,n.codigo_establecimiento, n.nombre_establecimiento");
                agrupamiento.append(" ,n.codigo_sede, n.nombre_sede");
            }
            // datos informativos
            sql.append(agrupamiento.toString());
            // indicadores
            //total de estudiantes por predio 
            sql.append(" ,sum(").append(funcion).append("(total_est.total_estudiantes,0)) total_estudiantes");
            if (!filtro.isAgrupamientoSede()) {
                if (!filtro.isAgrupamientoEstablecimiento()) {
                    //numero de establecimientos              
                    sql.append(" ,sum(").append(funcion).append("(num_est.total,0)) numero_establecimientos");
                }
                // numero de sedes
                sql.append(" ,sum(").append(funcion).append("(num_sede.total,0)) numero_sedes");
            }
            //numero de predios
            sql.append(" ,sum(").append(funcion).append("(num_predio.total,0)) numero_predios");
        }
// FROM 
        sql.append(" from ind_auxiliar_indicador aux");
        sql.append(" inner join ind_auxiliar_consultas n on n.id_predio = aux.id_predio and n.periodo = aux.periodo and n.id_tnt = aux.id_tnt");

        if (filtro.getCodJornada() != null) {
            sql.append(" inner join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_JORNADAS_PREDIO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) jornada on jornada.id_predio = aux.id_predio");
            sql.append(" and jornada.id_tnt = aux.id_tnt and jornada.periodo = aux.periodo");
        }

        sql.append(" left join (");
        sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_TOTAL_ESTUDIANTES, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
        sql.append(" ) total_est on total_est.id_predio = aux.id_predio");
        sql.append(" and total_est.id_tnt = aux.id_tnt and total_est.periodo = aux.periodo");

        if (filtro.isAgrupamientoPredio()) {
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_NUMERO_JORNADAS_PREDIO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) num_jor on num_jor.id_predio = aux.id_predio");
            sql.append(" and num_jor.id_tnt = aux.id_tnt and num_jor.periodo = aux.periodo");

            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_TOTAL_AREA_CONSTRUCCION_PREDIO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) total_area on total_area.id_predio = aux.id_predio");
            sql.append(" and total_area.id_tnt = aux.id_tnt and total_area.periodo = aux.periodo");

            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_AREA_REAL_PREDIO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) area_predio on area_predio.id_predio = aux.id_predio");
            sql.append(" and area_predio.id_tnt = aux.id_tnt and area_predio.periodo = aux.periodo");

            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ETNIAS_PREDIO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) etnias on etnias.id_predio = aux.id_predio");
            sql.append(" and etnias.id_tnt = aux.id_tnt and etnias.periodo = aux.periodo");

            if (filtro.getCodNivelEnseñaza() != null) {
                sql.append(" inner join (");
                sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_TOTAL_ESTUDIANTE_NIVEL_ENSENAZA_PREDIO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
                sql.append(" ) niv_ense on niv_ense.id_predio = aux.id_predio");
                sql.append(" and niv_ense.id_tnt = aux.id_tnt and niv_ense.periodo = aux.periodo");
            }
        } else {
            if (!filtro.isAgrupamientoSede()) {
                if (!filtro.isAgrupamientoEstablecimiento()) {
                    sql.append(" left join (");
                    sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_TOTAL_ESTABLECIMIENTOS, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
                    sql.append(" ) num_est on num_est.id_predio = aux.id_predio");
                    sql.append(" and num_est.id_tnt = aux.id_tnt and num_est.periodo = aux.periodo");
                }
                // numero de sedes
                sql.append(" left join (");
                sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_TOTAL_SEDES, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
                sql.append(" ) num_sede on num_sede.id_predio = aux.id_predio");
                sql.append(" and num_sede.id_tnt = aux.id_tnt and num_sede.periodo = aux.periodo");
            }
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_TOTAL_PREDIOS, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) num_predio on num_predio.id_predio = aux.id_predio");
            sql.append(" and num_predio.id_tnt = aux.id_tnt and num_predio.periodo = aux.periodo");
        }

// WHERE
        sql.append(" where aux.id_tnt = ?id_tnt and aux.periodo = ?periodo");
        if (filtro.isAgrupamientoPredio()) {
            sql.append(" and n.principal_establecimiento = 1");
        }
        if (filtro.getIdNivel0() != null) {
            sql.append(" and n.id_nivel0 = ?id_nivel0");
        }
        if (filtro.getIdNivel1() != null) {
            sql.append(" and n.id_nivel1 = ?id_nivel1");
        }
        if (filtro.getIdNivel2() != null) {
            sql.append(" and n.id_nivel2 = ?id_nivel2");
        }
        if (filtro.getIdNivel3() != null) {
            sql.append(" and n.id_nivel3 = ?id_nivel3");
        }
        if (filtro.getIdNivel4() != null) {
            sql.append(" and n.id_nivel4 = ?id_nivel4");
        }
        if (filtro.getIdNivel5() != null) {
            sql.append(" and n.id_nivel5 = ?id_nivel5");
        }
        if (filtro.getIdEstablecimiento() != null) {
            sql.append(" and n.id_establecimiento = ?id_establecimiento");
        }
        if (filtro.getIdSede() != null) {
            sql.append(" and n.id_sede = ?id_sede");
        }
        if (filtro.getIdPredio() != null) {
            sql.append(" and n.id_predio = ?id_predio");
        }
        // otros filtros
        if (filtro.getCodZona() != null) {
            sql.append(" and n.codigo_zona = ?cod_zona");
        }
        if (filtro.getCodSector() != null) {
            sql.append(" and n.codigo_sector = ?cod_sector");
        }
        if (filtro.getCodJornada() != null) {
            sql.append(" and jornada.codigo = ?cod_jornada");
        }
        if (filtro.getCodNivelEnseñaza() != null) {
            sql.append(" and niv_ense.codigo = ?cod_nivel_enseñaza");
        }

        // EXCLUYENDO INFORMACIÓN NULA
        if (filtro.isAgrupamientoPredio()) {
            sql.append(" and not (total_est.id_predio is null");
            sql.append(" and num_jor.id_predio is null");
            sql.append(" and total_area.id_predio is null");
            sql.append(" and etnias.id_predio is null)");
        } else {
            if (!filtro.isAgrupamientoSede()) {
                sql.append(" and not (total_est.id_predio is null");
                if (!filtro.isAgrupamientoEstablecimiento()) {
                    sql.append(" and num_est.id_predio is null");
                }
                sql.append(" and num_sede.id_predio is null");
                sql.append(" and num_predio.id_predio is null)");
            }
        }

        // GROUP BY 
        sql.append(" group by ");
        sql.append(agrupamiento.toString());

        String auxSql = sql.toString();
        if (ParamBaseDatos.POSTGRE.equals(UtilProperties.getDbMotor())) {
            auxSql = auxSql.replaceAll("\\?start", "");
            auxSql = auxSql.replaceAll("\\?end", "");
        }


        Query query = tpm.getEm().createNativeQuery(auxSql);
        query.setParameter("id_tnt", tpm.getCurrentTenant());
        query.setParameter("periodo", filtro.getPeriodo());
        query.setParameter("idioma", filtro.getIdioma());
        query.setParameter("id_nivel0", filtro.getIdNivel0());
        if (filtro.getIdNivel1() != null) {
            query.setParameter("id_nivel1", filtro.getIdNivel1());
        }
        if (filtro.getIdNivel2() != null) {
            query.setParameter("id_nivel2", filtro.getIdNivel2());
        }
        if (filtro.getIdNivel3() != null) {
            query.setParameter("id_nivel3", filtro.getIdNivel3());
        }
        if (filtro.getIdNivel4() != null) {
            query.setParameter("id_nivel4", filtro.getIdNivel4());
        }
        if (filtro.getIdNivel5() != null) {
            query.setParameter("id_nivel5", filtro.getIdNivel5());
        }
        if (filtro.getIdEstablecimiento() != null) {
            query.setParameter("id_establecimiento", filtro.getIdEstablecimiento());
        }
        if (filtro.getIdSede() != null) {
            query.setParameter("id_sede", filtro.getIdSede());
        }
        if (filtro.getIdPredio() != null) {
            query.setParameter("id_predio", filtro.getIdPredio());
        }
        // otros filtros
        if (filtro.getCodZona() != null) {
            query.setParameter("cod_zona", filtro.getCodZona());
        }
        if (filtro.getCodSector() != null) {
            query.setParameter("cod_sector", filtro.getCodSector());
        }
        if (filtro.getCodJornada() != null) {
            query.setParameter("cod_jornada", filtro.getCodJornada());
        }
        if (filtro.getCodNivelEnseñaza() != null) {
            query.setParameter("cod_nivel_enseñaza", filtro.getCodNivelEnseñaza());
        }

        return query.getResultList();
    }

    @Override
    public List<ConsultaAmbitoRiesgosNaturales> generarConsultaAmbitoRiesgosNaturales(FiltroAmbitoRiesgoNatural filtro, Long idioma) throws Exception {
        Connection conn = null;
        CallableStatement cs = null;
        List<ConsultaAmbitoRiesgosNaturales> resultados = null;
        try {
            Context ctx = new InitialContext();
            DataSource ds = (DataSource) ctx.lookup("jdbc/DBCierDS");
            conn = ds.getConnection();
            //Si la consulta no es por tiempo real llamamos el siguiente procedimiento almacenado
            if (!filtro.isConsultaDeTiempoReal()) {
                cs = conn.prepareCall(UtilProperties.getProperties().getProperty("ConsultaRiesgosNaturales"));
                cs.setLong(1, filtro.getAgrupamiento());
                cs.setLong(2, tpm.getCurrentTenant());
                cs.setInt(3, filtro.getPeriodo());
                if (filtro.getIdNivel0() != null) {
                    cs.setLong(4, filtro.getIdNivel0());
                } else {
                    cs.setString(4, "");
                }
                if (filtro.getIdNivel1() != null) {
                    cs.setLong(5, filtro.getIdNivel1());
                } else {
                    cs.setString(5, "");
                }
                if (filtro.getIdNivel2() != null) {
                    cs.setLong(6, filtro.getIdNivel2());
                } else {
                    cs.setString(6, "");
                }
                if (filtro.getIdNivel3() != null) {
                    cs.setLong(7, filtro.getIdNivel3());
                } else {
                    cs.setString(7, "");
                }
                if (filtro.getIdNivel4() != null) {
                    cs.setLong(8, filtro.getIdNivel4());
                } else {
                    cs.setString(8, "");
                }
                if (filtro.getIdNivel5() != null) {
                    cs.setLong(9, filtro.getIdNivel5());
                } else {
                    cs.setString(9, "");
                }
                if (filtro.getIdEstablecimiento() != null) {
                    cs.setLong(10, filtro.getIdEstablecimiento());
                } else {
                    cs.setString(10, "");
                }
                if (filtro.getIdSede() != null) {
                    cs.setLong(11, filtro.getIdSede());
                } else {
                    cs.setString(11, "");
                }
                if (filtro.getIdPredio() != null) {
                    cs.setLong(12, filtro.getIdPredio());
                } else {
                    cs.setString(12, "");
                }
                cs.setString(13, ParamSistema.SQL_CONSULTAR_INDICADOR_ALMACENADO.name());
                cs.setString(14, ParamIndicador.IND_RIESGO_NATURAL_TIPO_RIESGO_1.name());
                cs.setString(15, ParamIndicador.IND_RIESGO_NATURAL_CONDICION_RIESGO_1.name());
                cs.setString(16, ParamIndicador.IND_RIESGO_NATURAL_TIPO_RIESGO_2.name());
                cs.setString(17, ParamIndicador.IND_RIESGO_NATURAL_CONDICION_RIESGO_2.name());
                cs.setString(18, ParamIndicador.IND_RIESGO_NATURAL_TIPO_RIESGO_3.name());
                cs.setString(19, ParamIndicador.IND_RIESGO_NATURAL_CONDICION_RIESGO_3.name());
                cs.setString(20, ParamIndicador.IND_RIESGO_NATURAL_CONDICION_RIESGO.name());
                cs.setString(21, ParamIndicador.IND_ACCESIBILIDAD_CONDICION_ACCESIBILIDAD.name());
                cs.setString(22, ParamIndicador.IND_ETNIAS_PREDIO.name());
                cs.setString(23, ParamIndicador.IND_RIESGO_NATURAL_NUMERO_PREDIOS_PRESENTAN_RIESGO.name());
                cs.setString(24, ParamIndicador.IND_TOTAL_PREDIOS.name());
                cs.setString(25, ParamIndicador.IND_RIESGO_NATURAL_POBLACION_AFECTADA.name());
                cs.setString(26, ParamIndicador.IND_TOTAL_POBLACION.name());
                if (idioma != null) {
                    cs.setLong(27, idioma);
                } else {
                    cs.setString(27, "");
                }
                //registramos el parametro de salida
                cs.registerOutParameter(28, Types.NUMERIC, "P_CONSECUTIVO_REPORTE");
                //ejecutamos el reporte
                cs.execute();
                //recuperamos los parametros de salida
                Long consecutivoReporte = cs.getLong(28);
                //ejecutamos la consulta de los datos generados por el reporte
                resultados = consultaRiesgosNaturalesReporte(consecutivoReporte);
            } else {
                //Si la consulta es por tiempo real llamamos el siguiente procedimiento almacenado
                cs = conn.prepareCall(UtilProperties.getProperties().getProperty("ConsultaRiesgosNaturalesTr"));
                cs.setLong(1, filtro.getAgrupamiento());
                if (idioma != null) {
                    cs.setLong(2, idioma);
                } else {
                    cs.setString(2, "");
                }
                cs.setLong(3, tpm.getCurrentTenant());
                cs.setInt(4, filtro.getPeriodo());
                if (filtro.getCodRiesgo() != null) {
                    cs.setString(5, filtro.getCodRiesgo());
                } else {
                    cs.setString(5, "");
                }
                if (filtro.getCodCondicion() != null) {
                    cs.setLong(6, filtro.getCodCondicion());
                } else {
                    cs.setString(6, "");
                }
                if (filtro.getIdPredio() != null) {
                    cs.setLong(7, filtro.getIdPredio());
                } else {
                    cs.setString(7, "");
                }
                if (filtro.getIdNivel0() != null) {
                    cs.setLong(8, filtro.getIdNivel0());
                } else {
                    cs.setString(8, "");
                }
                if (filtro.getIdNivel1() != null) {
                    cs.setLong(9, filtro.getIdNivel1());
                } else {
                    cs.setString(9, "");
                }
                if (filtro.getIdNivel2() != null) {
                    cs.setLong(10, filtro.getIdNivel2());
                } else {
                    cs.setString(10, "");
                }
                if (filtro.getIdNivel3() != null) {
                    cs.setLong(11, filtro.getIdNivel3());
                } else {
                    cs.setString(11, "");
                }
                if (filtro.getIdNivel4() != null) {
                    cs.setLong(12, filtro.getIdNivel4());
                } else {
                    cs.setString(12, "");
                }
                if (filtro.getIdNivel5() != null) {
                    cs.setLong(13, filtro.getIdNivel5());
                } else {
                    cs.setString(13, "");
                }
                if (filtro.getIdEstablecimiento() != null) {
                    cs.setLong(14, filtro.getIdEstablecimiento());
                } else {
                    cs.setString(14, "");
                }
                if (filtro.getIdSede() != null) {
                    cs.setLong(15, filtro.getIdSede());
                } else {
                    cs.setString(15, "");
                }
                if (filtro.getCodZona() != null) {
                    cs.setString(16, filtro.getCodZona());
                } else {
                    cs.setString(16, "");
                }
                if (filtro.getCodSector() != null) {
                    cs.setString(17, filtro.getCodSector());
                } else {
                    cs.setString(17, "");
                }
                cs.setString(18, ParamIndicador.IND_RIESGO_NATURAL_CONDICION_RIESGO.name());
                cs.setString(19, ParamIndicador.IND_RIESGO_NATURAL_TIPO_RIESGO_1.name());
                cs.setString(20, ParamIndicador.IND_RIESGO_NATURAL_TIPO_RIESGO_2.name());
                cs.setString(21, ParamIndicador.IND_RIESGO_NATURAL_TIPO_RIESGO_3.name());
                cs.setString(22, ParamIndicador.IND_ETNIAS_PREDIO.name());
                cs.setString(23, ParamIndicador.IND_ACCESIBILIDAD_CONDICION_ACCESIBILIDAD.name());
                cs.setString(24, ParamIndicador.IND_RIESGO_NATURAL_NUMERO_PREDIOS_PRESENTAN_RIESGO.name());
                cs.setString(25, ParamIndicador.IND_TOTAL_PREDIOS.name());
                cs.setString(26, ParamIndicador.IND_RIESGO_NATURAL_POBLACION_AFECTADA.name());
                cs.setString(27, ParamIndicador.IND_TOTAL_POBLACION.name());
                //registramos el parametro de salida
                cs.registerOutParameter(28, Types.NUMERIC, "P_CONSECUTIVO_REPORTE");
                //ejecutamos el reporte
                cs.execute();
                //recuperamos los parametros de salida
                Long consecutivoReporte = cs.getLong(28);
                //ejecutamos la consulta de los datos generados por el reporte
                resultados = consultaRiesgosNaturalesReporte(consecutivoReporte);
            }
            return resultados;
        } catch (Exception e) {
            System.out.println("Error: " + e);
            throw e;
        } finally {
            if (conn != null) {
                conn.close();
            }
            if (cs != null) {
                cs.close();
            }
        }
    }

    public List<ConsultaAmbitoRiesgosNaturales> consultaRiesgosNaturalesReporte(Long consecutivoReporte) {
        if (consecutivoReporte == null) {
            return null;
        } else {
            List<ConsultaAmbitoRiesgosNaturales> registros = tpm.getEm().createNamedQuery("ConsultaAmbitoRiesgosNaturales.findByConsecutivoReporte")
                    .setParameter("consecutivoReporte", consecutivoReporte)
                    .getResultList();
            return registros;
        }
    }

    @Override
    public List<Object[]> consultarRiesgosNaturales(FiltroAmbitoRiesgoNatural filtro) {
        if (filtro.isConsultaDeTiempoReal()) {
            if (ParamBaseDatos.ORACLE.equals(UtilProperties.getDbMotor())) {
                return this.consultarRiegosNaturalesTiempoRealOracle(filtro);
            } else {
                return this.consultarRiegosNaturalesTiempoRealPostgre(filtro);
            }
        } else {
            return consultarRiegosNaturalesIndicadores(filtro);
        }
    }

    private List<Object[]> consultarRiegosNaturalesTiempoRealPostgre(FiltroAmbitoRiesgoNatural filtro) {
        String codInstrumento = this.consultarCodInstrumentoPorPeriodo(filtro.getPeriodo());
        StringBuilder sql = new StringBuilder();
        StringBuilder agrupamiento = new StringBuilder();
//SELECT
        sql.append(" select ");
        if (filtro.isAgrupamientoPredio()) {
            sql.append(" distinct n.nombre_nivel1, n.nombre_nivel2, n.nombre_nivel3, n.nombre_nivel4, n.nombre_nivel5");
            sql.append(", n.codigo_establecimiento, n.nombre_establecimiento");
            sql.append(", n.codigo_sede, n.nombre_sede");
            sql.append(", n.codigo_predio, n.nombre_predio");

            // *indicadores           

            // Tipo de Riesgo Natural 1
            sql.append(" ,tbl_tipo1.tipo_rn_1");

            // Condicion del Riesgo Natural 1
            sql.append(" ,tbl_tipo1.cond_rn_1");

            // Tipo de Riesgo Natural 2
            sql.append(" ,tbl_tipo2.tipo_rn_2");

            // Condicion del Riesgo Natural 2
            sql.append(" ,tbl_tipo2.cond_rn_2");

            // Tipo de Riesgo Natural 3
            sql.append(" ,tbl_tipo3.tipo_rn_3");

            // Condicion del Riesgo Natural 3
            sql.append(" ,tbl_tipo3.cond_rn_3");

            // Condicion de Riesgo
            sql.append(" ,tbl_cond.condicion_riesgo");

            //*otros
            sql.append(" , n.direccion_predio direccion_predio, n.nombre_zona zona");
            sql.append(" , n.nombre_sector sector, n.nombre_clima clima");
            //etnias
            sql.append(" , etnias.etnias");
            //propiedad del predio
            sql.append(" , n.propiedad_predio");
            //accesibilidad externa
            sql.append(" , tbl_accesibilidad.accesibilidad");
            //Poblacion Afectada
            sql.append(" ,coalesce(tbl_pob_afec.valor,0) poblacion_afectada");
            //Poblacion Total
            sql.append(" ,coalesce(tbl_pob_total.valor,0) poblacion_total");

        } else {
            if (filtro.isAgrupamientoNivel0()) {
                agrupamiento.append(" n.nombre_nivel0");
            }
            if (filtro.isAgrupamientoNivel1()) {
                agrupamiento.append(" n.nombre_nivel1");
            }
            if (filtro.isAgrupamientoNivel2()) {
                agrupamiento.append(" n.nombre_nivel1, n.nombre_nivel2");
            }
            if (filtro.isAgrupamientoNivel3()) {
                agrupamiento.append(" n.nombre_nivel1, n.nombre_nivel2, n.nombre_nivel3");
            }
            if (filtro.isAgrupamientoNivel4()) {
                agrupamiento.append(" n.nombre_nivel1, n.nombre_nivel2, n.nombre_nivel3, n.nombre_nivel4");
            }
            if (filtro.isAgrupamientoNivel5()) {
                agrupamiento.append(" n.nombre_nivel1, n.nombre_nivel2, n.nombre_nivel3, n.nombre_nivel4, n.nombre_nivel5");
            }
            if (filtro.isAgrupamientoEstablecimiento()) {
                agrupamiento.append(" n.nombre_nivel1, n.nombre_nivel2, n.nombre_nivel3, n.nombre_nivel4, n.nombre_nivel5");
                agrupamiento.append(", n.codigo_establecimiento, n.nombre_establecimiento");
            }
            if (filtro.isAgrupamientoSede()) {
                agrupamiento.append(" n.nombre_nivel1, n.nombre_nivel2, n.nombre_nivel3, n.nombre_nivel4, n.nombre_nivel5");
                agrupamiento.append(", n.codigo_establecimiento, n.nombre_establecimiento");
                agrupamiento.append(", n.codigo_sede, n.nombre_sede");
            }

            // select
            sql.append(agrupamiento.toString());

            //No de Predios que presentan Riesgo
            sql.append(" ,count(tbl_tot_pre_rn.id_dig_instrumento) total_predios_con_riesgo");

            //Total Predios 
            sql.append(" ,sum(coalesce(tbl_total_predio.total,0)) total_predios");

            // Porcion por Condicion
            sql.append(" ,coalesce(count(tbl_tot_pre_rn.id_dig_instrumento),0)/case when count(tbl_total_predio.total) = 0 then 1 else count(tbl_total_predio.total) end ::float porcion_condicion");

            //Poblacion Afectada
            sql.append(" ,sum(coalesce(tbl_pob_afec.valor,0)) poblacion_afectada");

            //Poblacion Total
            sql.append(" ,sum(coalesce(tbl_pob_total.valor,0)) poblacion_total");

        }
// FROM 
        sql.append(" from cier.ind_auxiliar_indicador aux");
        sql.append(" inner join cier.ind_auxiliar_consultas n on n.id_predio = aux.id_predio and n.periodo = aux.periodo and n.id_tnt = aux.id_tnt");

        //filtros para riesgoN, por tipo de riesgo y/o condicion
        StringBuilder filtroRN = new StringBuilder();
        if (filtro.getCodRiesgo() != null) {
            filtroRN.append(" and d1.valor in (");
            filtroRN.append(filtro.getCodRiesgo());
            filtroRN.append(")");
        }
        if (filtro.getCodCondicion() != null) {
            filtroRN.append(" and d2.valor = '");
            filtroRN.append(filtro.getCodCondicion());
            filtroRN.append("'");
        }

        if (filtro.isAgrupamientoPredio()) {
            sql.append(" inner join");
            sql.append(" (");
            String subquery_condicion_rn = this.consultarFormulaSQLIndicador(ParamIndicador.IND_RIESGO_NATURAL_CONDICION_RIESGO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());
            subquery_condicion_rn = subquery_condicion_rn.replace("'RN'", "'RN'" + filtroRN.toString());
            sql.append(subquery_condicion_rn);
            sql.append(" ) as tbl_cond");
            sql.append(" on tbl_cond.id_dig_instrumento = aux.id_dig_instrumento and tbl_cond.id_predio = aux.id_predio");
            sql.append(" and tbl_cond.id_tnt = aux.id_tnt and tbl_cond.periodo = aux.periodo");

            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_RIESGO_NATURAL_TIPO_RIESGO_1, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(filtroRN.toString());
            sql.append(" ) as tbl_tipo1 on tbl_tipo1.id_dig_instrumento = aux.id_dig_instrumento and tbl_tipo1.id_predio = aux.id_predio");
            sql.append(" and tbl_tipo1.id_tnt = aux.id_tnt and tbl_tipo1.periodo = aux.periodo");

            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_RIESGO_NATURAL_TIPO_RIESGO_2, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(filtroRN.toString());
            sql.append(" ) as tbl_tipo2 on tbl_tipo2.id_dig_instrumento = aux.id_dig_instrumento and tbl_tipo2.id_predio = aux.id_predio");
            sql.append(" and tbl_tipo2.id_tnt = aux.id_tnt and tbl_tipo2.periodo = aux.periodo");

            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_RIESGO_NATURAL_TIPO_RIESGO_3, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(filtroRN.toString());
            sql.append(" ) as tbl_tipo3 on tbl_tipo3.id_dig_instrumento = aux.id_dig_instrumento and tbl_tipo3.id_predio = aux.id_predio");
            sql.append(" and tbl_tipo3.id_tnt = aux.id_tnt and tbl_tipo3.periodo = aux.periodo");

            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ETNIAS_PREDIO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) as etnias on etnias.id_dig_instrumento = aux.id_dig_instrumento and etnias.id_predio = aux.id_predio");
            sql.append(" and etnias.id_tnt = aux.id_tnt and etnias.periodo = aux.periodo");

            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ACCESIBILIDAD_CONDICION_ACCESIBILIDAD, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) as tbl_accesibilidad");
            sql.append(" on tbl_accesibilidad.id_dig_instrumento = aux.id_dig_instrumento and tbl_accesibilidad.id_predio = aux.id_predio");
            sql.append(" and tbl_accesibilidad.id_tnt = aux.id_tnt and tbl_accesibilidad.periodo = aux.periodo");

        } else {
            sql.append(" left join");
            sql.append(" (");
            String subquery_tot_pred_rn = this.consultarFormulaSQLIndicador(ParamIndicador.IND_RIESGO_NATURAL_NUMERO_PREDIOS_PRESENTAN_RIESGO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());
            subquery_tot_pred_rn = subquery_tot_pred_rn.replace("--filtroRN", filtroRN.toString());
            sql.append(subquery_tot_pred_rn);
            sql.append(" ) tbl_tot_pre_rn on tbl_tot_pre_rn.id_dig_instrumento = aux.id_dig_instrumento and tbl_tot_pre_rn.id_predio = aux.id_predio");
            sql.append(" and tbl_tot_pre_rn.id_tnt = aux.id_tnt and tbl_tot_pre_rn.periodo = aux.periodo");

            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_TOTAL_PREDIOS, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) as tbl_total_predio on tbl_total_predio.id_dig_instrumento = aux.id_dig_instrumento and tbl_total_predio.id_predio = aux.id_predio");
            sql.append(" and tbl_total_predio.id_tnt = aux.id_tnt and tbl_total_predio.periodo = aux.periodo");

        }
        //poblacion afectada
        sql.append(" left join");
        sql.append(" (");
        String subquery_pob_afec = this.consultarFormulaSQLIndicador(ParamIndicador.IND_RIESGO_NATURAL_POBLACION_AFECTADA, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());
        subquery_pob_afec = subquery_pob_afec.replace("--filtroRN", filtroRN.toString());
        sql.append(subquery_pob_afec);
        sql.append(" ) tbl_pob_afec on tbl_pob_afec.id_dig_instrumento = aux.id_dig_instrumento and tbl_pob_afec.id_predio = aux.id_predio");
        sql.append(" and tbl_pob_afec.id_tnt = aux.id_tnt and tbl_pob_afec.periodo = aux.periodo");

        //poblacion total
        sql.append(" left join");
        sql.append(" (");
        sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_TOTAL_POBLACION, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
        sql.append(" ) as tbl_pob_total on tbl_pob_total.id_dig_instrumento = aux.id_dig_instrumento and tbl_pob_total.id_predio = aux.id_predio");
        sql.append(" and tbl_pob_total.id_tnt = aux.id_tnt and tbl_pob_total.periodo = aux.periodo");

// WHERE
        sql.append(" where aux.id_tnt = ?1 and aux.periodo = ?2");
        if (filtro.isAgrupamientoPredio()) {
            sql.append(" and n.principal_establecimiento = 1");
        }
        if (filtro.getIdNivel0() != null) {
            sql.append(" and n.id_nivel0 = ?3");
        }
        if (filtro.getIdNivel1() != null) {
            sql.append(" and n.id_nivel1 = ?4");
        }
        if (filtro.getIdNivel2() != null) {
            sql.append(" and n.id_nivel2 = ?5");
        }
        if (filtro.getIdNivel3() != null) {
            sql.append(" and n.id_nivel3 = ?6");
        }
        if (filtro.getIdNivel4() != null) {
            sql.append(" and n.id_nivel4 = ?7");
        }
        if (filtro.getIdNivel5() != null) {
            sql.append(" and n.id_nivel5 = ?8");
        }
        if (filtro.getIdEstablecimiento() != null) {
            sql.append(" and n.id_establecimiento = ?9");
        }
        if (filtro.getIdSede() != null) {
            sql.append(" and n.id_sede = ?10");
        }
        if (filtro.getIdPredio() != null) {
            sql.append(" and n.id_predio = ?11");
        }
        // otros filtros
        if (filtro.getCodZona() != null) {
            sql.append(" and n.codigo_zona = ?12");
        }
        if (filtro.getCodSector() != null) {
            sql.append(" and n.codigo_sector = ?13");
        }

        // GROUP BY 
        if (!filtro.isAgrupamientoPredio()) {
            sql.append(" group by ");
            sql.append(agrupamiento.toString());
        }

        String auxSql = sql.toString();
        auxSql = auxSql.replaceAll("\\?start", "");
        auxSql = auxSql.replaceAll("\\?end", "");


        Query query = tpm.getEm().createNativeQuery(auxSql);
        query.setParameter(1, tpm.getCurrentTenant());
        query.setParameter(2, filtro.getPeriodo());
        query.setParameter(3, filtro.getIdNivel0());
        if (filtro.getIdNivel1() != null) {
            query.setParameter(4, filtro.getIdNivel1());
        }
        if (filtro.getIdNivel2() != null) {
            query.setParameter(5, filtro.getIdNivel2());
        }
        if (filtro.getIdNivel3() != null) {
            query.setParameter(6, filtro.getIdNivel3());
        }
        if (filtro.getIdNivel4() != null) {
            query.setParameter(7, filtro.getIdNivel4());
        }
        if (filtro.getIdNivel5() != null) {
            query.setParameter(8, filtro.getIdNivel5());
        }
        if (filtro.getIdEstablecimiento() != null) {
            query.setParameter(9, filtro.getIdEstablecimiento());
        }
        if (filtro.getIdSede() != null) {
            query.setParameter(10, filtro.getIdSede());
        }
        if (filtro.getIdPredio() != null) {
            query.setParameter(11, filtro.getIdPredio());
        }
        // otros filtros
        if (filtro.getCodZona() != null) {
            query.setParameter(12, filtro.getCodZona());
        }
        if (filtro.getCodSector() != null) {
            query.setParameter(13, filtro.getCodSector());
        }
        return query.getResultList();
    }

    private List<Object[]> consultarRiegosNaturalesTiempoRealOracle(FiltroAmbitoRiesgoNatural filtro) {
        String codInstrumento = this.consultarCodInstrumentoPorPeriodo(filtro.getPeriodo());
        StringBuilder sql = new StringBuilder();
        StringBuilder agrupamiento = new StringBuilder();
        String funcion = "";
        if (ParamBaseDatos.ORACLE.equals(UtilProperties.getDbMotor())) {
            funcion = "nvl";
        } else {
            funcion = "coalesce";
        }
//SELECT
        sql.append(" select ");
        if (filtro.isAgrupamientoPredio()) {
            //.append(" distinct n.nombre_nivel1, n.nombre_nivel2, n.nombre_nivel3, n.nombre_nivel4, n.nombre_nivel5");
            sql.append(" distinct n.codigo_nivel1,n.nombre_nivel1");
            sql.append(",n.codigo_nivel2,n.nombre_nivel2");
            sql.append(",n.codigo_nivel3,n.nombre_nivel3");
            sql.append(",n.codigo_nivel4,n.nombre_nivel4");
            sql.append(",n.codigo_nivel5,n.nombre_nivel5");
            sql.append(", n.codigo_establecimiento, n.nombre_establecimiento");
            sql.append(", n.codigo_sede, n.nombre_sede");
            sql.append(", n.codigo_predio, n.nombre_predio");

            // *indicadores           

            // Tipo de Riesgo Natural 1
            sql.append(" ,tbl_tipo1.tipo_rn_1");

            // Condicion del Riesgo Natural 1
            sql.append(" ,tbl_tipo1.cond_rn_1");

            // Tipo de Riesgo Natural 2
            sql.append(" ,tbl_tipo2.tipo_rn_2");

            // Condicion del Riesgo Natural 2
            sql.append(" ,tbl_tipo2.cond_rn_2");

            // Tipo de Riesgo Natural 3
            sql.append(" ,tbl_tipo3.tipo_rn_3");

            // Condicion del Riesgo Natural 3
            sql.append(" ,tbl_tipo3.cond_rn_3");

            // Condicion de Riesgo
            sql.append(" ,tbl_cond.condicion_riesgo");

            //*otros
            sql.append(" , n.direccion_predio direccion_predio, n.nombre_zona zona");
            sql.append(" , n.nombre_sector sector, n.nombre_clima clima");
            //etnias
            sql.append(" , etnias.etnias");
            //propiedad del predio
            sql.append(" , n.propiedad_predio");
            //accesibilidad externa
            sql.append(" , tbl_accesibilidad.accesibilidad");
            //Poblacion Afectada
            sql.append(" ,").append(funcion).append("(tbl_pob_afec.valor,0) poblacion_afectada");
            //Poblacion Total
            sql.append(" ,").append(funcion).append("(tbl_pob_total.valor,0) poblacion_total");

        } else {
            if (filtro.isAgrupamientoNivel0()) {
                agrupamiento.append(" n.nombre_nivel0");
            }
            if (filtro.isAgrupamientoNivel1()) {
                //agrupamiento.append(" n.nombre_nivel1");
                agrupamiento.append(" n.codigo_nivel1,n.nombre_nivel1");
            }
            if (filtro.isAgrupamientoNivel2()) {
                //agrupamiento.append(" n.nombre_nivel1, n.nombre_nivel2");
                agrupamiento.append(" n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
            }
            if (filtro.isAgrupamientoNivel3()) {
                //agrupamiento.append(" n.nombre_nivel1, n.nombre_nivel2, n.nombre_nivel3");
                agrupamiento.append(" n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
            }
            if (filtro.isAgrupamientoNivel4()) {
                //agrupamiento.append(" n.nombre_nivel1, n.nombre_nivel2, n.nombre_nivel3, n.nombre_nivel4");
                agrupamiento.append(" n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
            }
            if (filtro.isAgrupamientoNivel5()) {
                //agrupamiento.append(" n.nombre_nivel1, n.nombre_nivel2, n.nombre_nivel3, n.nombre_nivel4, n.nombre_nivel5");
                agrupamiento.append(" n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
                agrupamiento.append(",n.codigo_nivel5,n.nombre_nivel5");
            }
            if (filtro.isAgrupamientoEstablecimiento()) {
                //agrupamiento.append(" n.nombre_nivel1, n.nombre_nivel2, n.nombre_nivel3, n.nombre_nivel4, n.nombre_nivel5");
                agrupamiento.append(" n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
                agrupamiento.append(",n.codigo_nivel5,n.nombre_nivel5");
                agrupamiento.append(", n.codigo_establecimiento, n.nombre_establecimiento");
            }
            if (filtro.isAgrupamientoSede()) {
                //agrupamiento.append(" n.nombre_nivel1, n.nombre_nivel2, n.nombre_nivel3, n.nombre_nivel4, n.nombre_nivel5");
                agrupamiento.append(" n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
                agrupamiento.append(",n.codigo_nivel5,n.nombre_nivel5");
                agrupamiento.append(", n.codigo_establecimiento, n.nombre_establecimiento");
                agrupamiento.append(", n.codigo_sede, n.nombre_sede");
            }

            // select
            sql.append(agrupamiento.toString());

            //No de Predios que presentan Riesgo
            sql.append(" ,count(tbl_tot_pre_rn.id_predio) total_predios_con_riesgo");

            //Total Predios 
            sql.append(" ,sum(").append(funcion).append("(tbl_total_predio.total,0)) total_predios");

            // Porcion por Condicion
            sql.append(" ,").append(funcion).append("(count(tbl_tot_pre_rn.id_predio),0)/case when count(tbl_total_predio.total) = 0 then 1 else count(tbl_total_predio.total) end  porcion_condicion");

            //Poblacion Afectada
            sql.append(" ,sum(").append(funcion).append("(tbl_pob_afec.valor,0)) poblacion_afectada");

            //Poblacion Total
            sql.append(" ,sum(").append(funcion).append("(tbl_pob_total.valor,0)) poblacion_total");

        }
// FROM 
        sql.append(" from ind_auxiliar_indicador aux");
        sql.append(" inner join ind_auxiliar_consultas n on n.id_predio = aux.id_predio and n.periodo = aux.periodo and n.id_tnt = aux.id_tnt");

        //filtros para riesgoN, por tipo de riesgo y/o condicion
        StringBuilder filtroRN = new StringBuilder();
        if (filtro.getCodRiesgo() != null) {
            filtroRN.append(" and (RESP_048_01 in ( ");
            filtroRN.append(filtro.getCodRiesgo());
            filtroRN.append(")");
            filtroRN.append(" or RESP_048_03 in ( ");
            filtroRN.append(filtro.getCodRiesgo());
            filtroRN.append(")");
            filtroRN.append(" or RESP_048_05 in ( ");
            filtroRN.append(filtro.getCodRiesgo());
            filtroRN.append("))");
        }
        if (filtro.getCodCondicion() != null) {
            filtroRN.append(" and (RESP_048_02 = ");
            filtroRN.append(filtro.getCodCondicion());
            filtroRN.append(" or RESP_048_04 = ");
            filtroRN.append(filtro.getCodCondicion());
            filtroRN.append(" or RESP_048_06 = ");
            filtroRN.append(filtro.getCodCondicion());
            filtroRN.append(")");
        }

        if (filtro.isAgrupamientoPredio()) {
            sql.append(" inner join");
            sql.append(" (");
            String subquery_condicion_rn = this.consultarFormulaSQLIndicador(ParamIndicador.IND_RIESGO_NATURAL_CONDICION_RIESGO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());
            subquery_condicion_rn = subquery_condicion_rn.replace("--filtroRN", filtroRN.toString());
            sql.append(subquery_condicion_rn);
            sql.append(" ) tbl_cond");
            sql.append(" on tbl_cond.id_predio = aux.id_predio");
            sql.append(" and tbl_cond.id_tnt = aux.id_tnt and tbl_cond.periodo = aux.periodo");

            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_RIESGO_NATURAL_TIPO_RIESGO_1, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            if (filtro.getCodRiesgo() != null) {
                sql.append(" and Resp_048_01 in (");
                sql.append(filtro.getCodRiesgo());
                sql.append(")");
            }
            if (filtro.getCodCondicion() != null) {
                sql.append(" and RESP_048_02 = ");
                sql.append(filtro.getCodCondicion());
            }
            sql.append(" ) tbl_tipo1 on tbl_tipo1.id_predio = aux.id_predio");
            sql.append(" and tbl_tipo1.id_tnt = aux.id_tnt and tbl_tipo1.periodo = aux.periodo");

            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_RIESGO_NATURAL_TIPO_RIESGO_2, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            if (filtro.getCodRiesgo() != null) {
                sql.append(" and Resp_048_03  in (");
                sql.append(filtro.getCodRiesgo());
                sql.append(")");
            }
            if (filtro.getCodCondicion() != null) {
                sql.append(" and RESP_048_04 = ");
                sql.append(filtro.getCodCondicion());
            }
            sql.append(" ) tbl_tipo2 on tbl_tipo2.id_predio = aux.id_predio");
            sql.append(" and tbl_tipo2.id_tnt = aux.id_tnt and tbl_tipo2.periodo = aux.periodo");

            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_RIESGO_NATURAL_TIPO_RIESGO_3, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            if (filtro.getCodRiesgo() != null) {
                sql.append(" and Resp_048_05  in (");
                sql.append(filtro.getCodRiesgo());
                sql.append(")");
            }
            if (filtro.getCodCondicion() != null) {
                sql.append(" and RESP_048_06 = ");
                sql.append(filtro.getCodCondicion());
            }
            sql.append(" ) tbl_tipo3 on tbl_tipo3.id_predio = aux.id_predio");
            sql.append(" and tbl_tipo3.id_tnt = aux.id_tnt and tbl_tipo3.periodo = aux.periodo");

            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ETNIAS_PREDIO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) etnias on etnias.id_predio = aux.id_predio");
            sql.append(" and etnias.id_tnt = aux.id_tnt and etnias.periodo = aux.periodo");

            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ACCESIBILIDAD_CONDICION_ACCESIBILIDAD, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) tbl_accesibilidad");
            sql.append(" on tbl_accesibilidad.id_predio = aux.id_predio");
            sql.append(" and tbl_accesibilidad.id_tnt = aux.id_tnt and tbl_accesibilidad.periodo = aux.periodo");

        } else {
            sql.append(" left join");
            sql.append(" (");
            String subquery_tot_pred_rn = this.consultarFormulaSQLIndicador(ParamIndicador.IND_RIESGO_NATURAL_NUMERO_PREDIOS_PRESENTAN_RIESGO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());
            subquery_tot_pred_rn = subquery_tot_pred_rn.replace("--filtroRN", filtroRN.toString());
            sql.append(subquery_tot_pred_rn);
            sql.append(" ) tbl_tot_pre_rn on tbl_tot_pre_rn.id_predio = aux.id_predio");
            sql.append(" and tbl_tot_pre_rn.id_tnt = aux.id_tnt and tbl_tot_pre_rn.periodo = aux.periodo");

            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_TOTAL_PREDIOS, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) tbl_total_predio on tbl_total_predio.id_predio = aux.id_predio");
            sql.append(" and tbl_total_predio.id_tnt = aux.id_tnt and tbl_total_predio.periodo = aux.periodo");

        }
        //poblacion afectada
        sql.append(" left join");
        sql.append(" (");
        String subquery_pob_afec = this.consultarFormulaSQLIndicador(ParamIndicador.IND_RIESGO_NATURAL_POBLACION_AFECTADA, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());
        subquery_pob_afec = subquery_pob_afec.replace("--filtroRN", filtroRN.toString());
        sql.append(subquery_pob_afec);
        sql.append(" ) tbl_pob_afec on tbl_pob_afec.id_predio = aux.id_predio");
        sql.append(" and tbl_pob_afec.id_tnt = aux.id_tnt and tbl_pob_afec.periodo = aux.periodo");

        //poblacion total
        sql.append(" left join");
        sql.append(" (");
        sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_TOTAL_POBLACION, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
        sql.append(" ) tbl_pob_total on tbl_pob_total.id_predio = aux.id_predio");
        sql.append(" and tbl_pob_total.id_tnt = aux.id_tnt and tbl_pob_total.periodo = aux.periodo");

// WHERE
        sql.append(" where aux.id_tnt = ?1 and aux.periodo = ?2");
        if (filtro.isAgrupamientoPredio()) {
            sql.append(" and n.principal_establecimiento = 1");
        }
        if (filtro.getIdNivel0() != null) {
            sql.append(" and n.id_nivel0 = ?3");
        }
        if (filtro.getIdNivel1() != null) {
            sql.append(" and n.id_nivel1 = ?4");
        }
        if (filtro.getIdNivel2() != null) {
            sql.append(" and n.id_nivel2 = ?5");
        }
        if (filtro.getIdNivel3() != null) {
            sql.append(" and n.id_nivel3 = ?6");
        }
        if (filtro.getIdNivel4() != null) {
            sql.append(" and n.id_nivel4 = ?7");
        }
        if (filtro.getIdNivel5() != null) {
            sql.append(" and n.id_nivel5 = ?8");
        }
        if (filtro.getIdEstablecimiento() != null) {
            sql.append(" and n.id_establecimiento = ?9");
        }
        if (filtro.getIdSede() != null) {
            sql.append(" and n.id_sede = ?10");
        }
        if (filtro.getIdPredio() != null) {
            sql.append(" and n.id_predio = ?11");
        }
        // otros filtros
        if (filtro.getCodZona() != null) {
            sql.append(" and n.codigo_zona = ?12");
        }
        if (filtro.getCodSector() != null) {
            sql.append(" and n.codigo_sector = ?13");
        }

        // GROUP BY 
        if (!filtro.isAgrupamientoPredio()) {
            sql.append(" group by ");
            sql.append(agrupamiento.toString());
        }

        String auxSql = sql.toString();
        if (ParamBaseDatos.POSTGRE.equals(UtilProperties.getDbMotor())) {
            auxSql = auxSql.replaceAll("\\?start", "");
            auxSql = auxSql.replaceAll("\\?end", "");
        }

        Query query = tpm.getEm().createNativeQuery(auxSql);
        query.setParameter(1, tpm.getCurrentTenant());
        query.setParameter(2, filtro.getPeriodo());
        query.setParameter(3, filtro.getIdNivel0());
        if (filtro.getIdNivel1() != null) {
            query.setParameter(4, filtro.getIdNivel1());
        }
        if (filtro.getIdNivel2() != null) {
            query.setParameter(5, filtro.getIdNivel2());
        }
        if (filtro.getIdNivel3() != null) {
            query.setParameter(6, filtro.getIdNivel3());
        }
        if (filtro.getIdNivel4() != null) {
            query.setParameter(7, filtro.getIdNivel4());
        }
        if (filtro.getIdNivel5() != null) {
            query.setParameter(8, filtro.getIdNivel5());
        }
        if (filtro.getIdEstablecimiento() != null) {
            query.setParameter(9, filtro.getIdEstablecimiento());
        }
        if (filtro.getIdSede() != null) {
            query.setParameter(10, filtro.getIdSede());
        }
        if (filtro.getIdPredio() != null) {
            query.setParameter(11, filtro.getIdPredio());
        }
        // otros filtros
        if (filtro.getCodZona() != null) {
            query.setParameter(12, filtro.getCodZona());
        }
        if (filtro.getCodSector() != null) {
            query.setParameter(13, filtro.getCodSector());
        }
        return query.getResultList();
    }

    private List<Object[]> consultarRiegosNaturalesIndicadores(FiltroAmbitoRiesgoNatural filtro) {
        StringBuilder sql = new StringBuilder();
// consulta por nivel de agrupamiento superior a predio
// SELECT
        sql.append(" select distinct");
        if (filtro.isAgrupamientoPredio()) {
            //sql.append("  n.nombre_nivel1, n.nombre_nivel2, n.nombre_nivel3, n.nombre_nivel4, n.nombre_nivel5");
            sql.append(" n.codigo_nivel1,n.nombre_nivel1");
            sql.append(",n.codigo_nivel2,n.nombre_nivel2");
            sql.append(",n.codigo_nivel3,n.nombre_nivel3");
            sql.append(",n.codigo_nivel4,n.nombre_nivel4");
            sql.append(",n.codigo_nivel5,n.nombre_nivel5");
            sql.append(", n.codigo_establecimiento, n.nombre_establecimiento");
            sql.append(", n.codigo_sede, n.nombre_sede");
            sql.append(", n.codigo_predio, n.nombre_predio");

            // *indicadores           

            // Tipo de Riesgo Natural 1
            sql.append(" ,tbl_tipo1.valor");

            // Condicion del Riesgo Natural 1
            sql.append(" ,tbl_cond1.valor");

            // Tipo de Riesgo Natural 2
            sql.append(" ,tbl_tipo2.valor");

            // Condicion del Riesgo Natural 2
            sql.append(" ,tbl_cond2.valor");

            // Tipo de Riesgo Natural 3
            sql.append(" ,tbl_tipo3.valor");

            // Condicion del Riesgo Natural 3
            sql.append(" ,tbl_cond3.valor");

            // Condicion de Riesgo
            sql.append(" ,condicion_riesgo.valor");

            //*otros
            sql.append(" , n.direccion_predio direccion_predio, n.nombre_zona zona");
            sql.append(" , n.nombre_sector sector, n.nombre_clima clima");
            //etnias
            sql.append(" , etnias.valor");
            //propiedad del predio
            sql.append(" , n.propiedad_predio");
            //accesibilidad externa
            sql.append(" , tbl_accesibilidad.valor");
            //Poblacion Afectada
            sql.append(" ,coalesce(poblacion_afectada.valor,'0')");
            //Poblacion total
            sql.append(" ,coalesce(poblacion_total.valor,'0')");
        } else {
            if (filtro.isAgrupamientoNivel0()) {
                sql.append(" n.nombre_nivel0");
            }
            if (filtro.isAgrupamientoNivel1()) {
                //sql.append(" n.nombre_nivel1");
                sql.append(" n.codigo_nivel1,n.nombre_nivel1");
            }
            if (filtro.isAgrupamientoNivel2()) {
                //sql.append(" n.nombre_nivel1, n.nombre_nivel2");
                sql.append(" n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");

            }
            if (filtro.isAgrupamientoNivel3()) {
                //sql.append(" n.nombre_nivel1, n.nombre_nivel2, n.nombre_nivel3");
                sql.append(" n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
            }
            if (filtro.isAgrupamientoNivel4()) {
                //sql.append(" n.nombre_nivel1, n.nombre_nivel2, n.nombre_nivel3, n.nombre_nivel4");
                sql.append(" n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
                sql.append(",n.codigo_nivel4,n.nombre_nivel4");
            }
            if (filtro.isAgrupamientoNivel5()) {
                //sql.append(" n.nombre_nivel1, n.nombre_nivel2, n.nombre_nivel3, n.nombre_nivel4, n.nombre_nivel5");
                sql.append(" n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
                sql.append(",n.codigo_nivel4,n.nombre_nivel4");
                sql.append(",n.codigo_nivel5,n.nombre_nivel5");
            }
            if (filtro.isAgrupamientoEstablecimiento()) {
                //sql.append(" n.nombre_nivel1, n.nombre_nivel2, n.nombre_nivel3, n.nombre_nivel4, n.nombre_nivel5");
                sql.append(" n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
                sql.append(",n.codigo_nivel4,n.nombre_nivel4");
                sql.append(",n.codigo_nivel5,n.nombre_nivel5");
                sql.append(" ,n.codigo_establecimiento, n.nombre_establecimiento");
            }
            if (filtro.isAgrupamientoSede()) {
                //sql.append(" n.nombre_nivel1, n.nombre_nivel2, n.nombre_nivel3, n.nombre_nivel4, n.nombre_nivel5");
                sql.append(" n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
                sql.append(",n.codigo_nivel4,n.nombre_nivel4");
                sql.append(",n.codigo_nivel5,n.nombre_nivel5");
                sql.append(" ,n.codigo_establecimiento, n.nombre_establecimiento");
                sql.append(" ,n.codigo_sede, n.nombre_sede");
            }
            //No de Predios que presentan Riesgo
            sql.append(" ,coalesce(total_predios_con_riesgo.valor,'0')");

            //Total Predios
            sql.append(" ,total_predio.valor");

            // Porcion por Condicion
            sql.append(" ,to_number(coalesce(total_predios_con_riesgo.valor,'0'),'9999999')/to_number(case when total_predio.valor = '0' then '1' else total_predio.valor end ,'9999999') porcion_condicion");

            //Poblacion Afectada
            sql.append(" ,coalesce(poblacion_afectada.valor,'0')");

            //Poblacion Total
            sql.append(" ,coalesce(poblacion_total.valor,'0')");

        }
// FROM 
        sql.append(" from ind_auxiliar_indicador aux");
        sql.append(" inner join ind_auxiliar_consultas n on n.id_predio = aux.id_predio and n.periodo = aux.periodo and n.id_tnt = aux.id_tnt");

        String strSQLNivelAgrupamiento = this.getSQLNivelAgrupamiento(filtro);
        String strSQLConsultarIndicador = this.getSQLConsultarIndicadorAlmacenado();

        if (filtro.isAgrupamientoPredio()) {
            // tipo de riesgo natural 1
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_tipo1 on tbl_tipo1.id_tnt = aux.id_tnt and tbl_tipo1.periodo = aux.periodo");
            sql.append(String.format(" and tbl_tipo1.cod_indicador = '%s'", ParamIndicador.IND_RIESGO_NATURAL_TIPO_RIESGO_1));
            sql.append(" and tbl_tipo1.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_tipo1.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            // condicion del riesgo natural 1
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_cond1 on tbl_cond1.id_tnt = aux.id_tnt and tbl_cond1.periodo = aux.periodo");
            sql.append(String.format(" and tbl_cond1.cod_indicador = '%s'", ParamIndicador.IND_RIESGO_NATURAL_CONDICION_RIESGO_1));
            sql.append(" and tbl_cond1.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_cond1.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            // tipo de riesgo natural 2
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_tipo2 on tbl_tipo2.id_tnt = aux.id_tnt and tbl_tipo2.periodo = aux.periodo");
            sql.append(String.format(" and tbl_tipo2.cod_indicador = '%s'", ParamIndicador.IND_RIESGO_NATURAL_TIPO_RIESGO_2));
            sql.append(" and tbl_tipo2.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_tipo2.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            // condicion del riesgo natural 2
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_cond2 on tbl_cond2.id_tnt = aux.id_tnt and tbl_cond2.periodo = aux.periodo");
            sql.append(String.format(" and tbl_cond2.cod_indicador = '%s'", ParamIndicador.IND_RIESGO_NATURAL_CONDICION_RIESGO_2));
            sql.append(" and tbl_cond2.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_cond2.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            // tipo de riesgo natural 3
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_tipo3 on tbl_tipo3.id_tnt = aux.id_tnt and tbl_tipo3.periodo = aux.periodo");
            sql.append(String.format(" and tbl_tipo3.cod_indicador = '%s'", ParamIndicador.IND_RIESGO_NATURAL_TIPO_RIESGO_3));
            sql.append(" and tbl_tipo3.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_tipo3.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            // condicion del riesgo natural 3
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_cond3 on tbl_cond3.id_tnt = aux.id_tnt and tbl_cond3.periodo = aux.periodo");
            sql.append(String.format(" and tbl_cond3.cod_indicador = '%s'", ParamIndicador.IND_RIESGO_NATURAL_CONDICION_RIESGO_3));
            sql.append(" and tbl_cond3.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_cond3.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            // Condicion de Riesgo
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) condicion_riesgo on condicion_riesgo.id_tnt = aux.id_tnt and condicion_riesgo.periodo = aux.periodo");
            sql.append(String.format(" and condicion_riesgo.cod_indicador = '%s'", ParamIndicador.IND_RIESGO_NATURAL_CONDICION_RIESGO));
            sql.append(" and condicion_riesgo.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and condicion_riesgo.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            //Condición de accesibilidad
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_accesibilidad on tbl_accesibilidad.id_tnt = aux.id_tnt and tbl_accesibilidad.periodo = aux.periodo");
            sql.append(String.format(" and tbl_accesibilidad.cod_indicador = '%s'", ParamIndicador.IND_ACCESIBILIDAD_CONDICION_ACCESIBILIDAD));
            sql.append(" and tbl_accesibilidad.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_accesibilidad.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            //etnias del predio
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) etnias on etnias.id_tnt = aux.id_tnt and etnias.periodo = aux.periodo");
            sql.append(String.format(" and etnias.cod_indicador = '%s'", ParamIndicador.IND_ETNIAS_PREDIO));
            sql.append(" and etnias.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and etnias.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
        } else {
            //No de Predios que presentan Riesgo   
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) total_predios_con_riesgo on total_predios_con_riesgo.id_tnt = aux.id_tnt and total_predios_con_riesgo.periodo = aux.periodo");
            sql.append(String.format(" and total_predios_con_riesgo.cod_indicador = '%s'", ParamIndicador.IND_RIESGO_NATURAL_NUMERO_PREDIOS_PRESENTAN_RIESGO));
            sql.append(" and total_predios_con_riesgo.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and total_predios_con_riesgo.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            //Total Predios que Presentan Riesgo    
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) total_predio on total_predio.id_tnt = aux.id_tnt and total_predio.periodo = aux.periodo");
            sql.append(String.format(" and total_predio.cod_indicador = '%s'", ParamIndicador.IND_TOTAL_PREDIOS));
            sql.append(" and total_predio.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and total_predio.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

        }
        //Poblacion Afectada
        sql.append(" left join (");
        sql.append(strSQLConsultarIndicador);
        sql.append(" ) poblacion_afectada on poblacion_afectada.id_tnt = aux.id_tnt and poblacion_afectada.periodo = aux.periodo");
        sql.append(String.format(" and poblacion_afectada.cod_indicador = '%s'", ParamIndicador.IND_RIESGO_NATURAL_POBLACION_AFECTADA));
        sql.append(" and poblacion_afectada.nivel_agrupamiento = ?nivel_agrupamiento");
        sql.append(" and poblacion_afectada.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
        //Poblacion Total
        sql.append(" left join (");
        sql.append(strSQLConsultarIndicador);
        sql.append(" ) poblacion_total on poblacion_total.id_tnt = aux.id_tnt and poblacion_total.periodo = aux.periodo");
        sql.append(String.format(" and poblacion_total.cod_indicador = '%s'", ParamIndicador.IND_TOTAL_POBLACION));
        sql.append(" and poblacion_total.nivel_agrupamiento = ?nivel_agrupamiento");
        sql.append(" and poblacion_total.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);


// WHERE
        sql.append(" where aux.id_tnt = ?id_tnt and aux.periodo = ?periodo");
        if (filtro.isAgrupamientoPredio()) {
            sql.append(" and (tbl_tipo1.valor IS NOT NULL or");
            sql.append(" tbl_tipo2.valor IS NOT NULL or");
            sql.append(" tbl_tipo3.valor IS NOT NULL)");

            sql.append(" and n.principal_establecimiento = 1");
        }
        if (filtro.getIdNivel0() != null) {
            sql.append(" and n.id_nivel0 = ?id_nivel0");
        }
        if (filtro.getIdNivel1() != null) {
            sql.append(" and n.id_nivel1 = ?id_nivel1");
        }
        if (filtro.getIdNivel2() != null) {
            sql.append(" and n.id_nivel2 = ?id_nivel2");
        }
        if (filtro.getIdNivel3() != null) {
            sql.append(" and n.id_nivel3 = ?id_nivel3");
        }
        if (filtro.getIdNivel4() != null) {
            sql.append(" and n.id_nivel4 = ?id_nivel4");
        }
        if (filtro.getIdNivel5() != null) {
            sql.append(" and n.id_nivel5 = ?id_nivel5");
        }
        if (filtro.getIdEstablecimiento() != null) {
            sql.append(" and n.id_establecimiento = ?id_establecimiento");
        }
        if (filtro.getIdSede() != null) {
            sql.append(" and n.id_sede = ?id_sede");
        }
        if (filtro.getIdPredio() != null) {
            sql.append(" and n.id_predio = ?id_predio");
        }

        Query query = tpm.getEm().createNativeQuery(sql.toString());
        query.setParameter("id_tnt", tpm.getCurrentTenant());
        query.setParameter("periodo", filtro.getPeriodo());
        query.setParameter("idioma", filtro.getIdioma());
        query.setParameter("id_nivel0", filtro.getIdNivel0());
        query.setParameter("nivel_agrupamiento", filtro.getAgrupamiento());
        if (filtro.getIdNivel1() != null) {
            query.setParameter("id_nivel1", filtro.getIdNivel1());
        }
        if (filtro.getIdNivel2() != null) {
            query.setParameter("id_nivel2", filtro.getIdNivel2());
        }
        if (filtro.getIdNivel3() != null) {
            query.setParameter("id_nivel3", filtro.getIdNivel3());
        }
        if (filtro.getIdNivel4() != null) {
            query.setParameter("id_nivel4", filtro.getIdNivel4());
        }
        if (filtro.getIdNivel5() != null) {
            query.setParameter("id_nivel5", filtro.getIdNivel5());
        }
        if (filtro.getIdEstablecimiento() != null) {
            query.setParameter("id_establecimiento", filtro.getIdEstablecimiento());
        }
        if (filtro.getIdSede() != null) {
            query.setParameter("id_sede", filtro.getIdSede());
        }
        if (filtro.getIdPredio() != null) {
            query.setParameter("id_predio", filtro.getIdPredio());
        }
        return query.getResultList();
    }

    @Override
    public List<Object[]> consultarRiesgosAntropicos(FiltroAmbitoRiesgoAntropico filtro) {
        if (filtro.isConsultaDeTiempoReal()) {
            if (ParamBaseDatos.ORACLE.equals(UtilProperties.getDbMotor())) {
                return this.consultarRiegosAntropicosTiempoRealOracle(filtro);
            } else {
                return this.consultarRiegosAntropicosTiempoRealPostgre(filtro);
            }
        } else {
            return consultarRiegosAntropicosIndicadores(filtro);
        }
    }

    private List<Object[]> consultarRiegosAntropicosTiempoRealOracle(FiltroAmbitoRiesgoAntropico filtro) {
        String codInstrumento = this.consultarCodInstrumentoPorPeriodo(filtro.getPeriodo());
        StringBuilder sql = new StringBuilder();
        StringBuilder agrupamiento = new StringBuilder();
        String funcion = "";
        if (ParamBaseDatos.ORACLE.equals(UtilProperties.getDbMotor())) {
            funcion = "nvl";
        } else {
            funcion = "coalesce";
        }
//SELECT
        sql.append(" select ");
        if (filtro.isAgrupamientoPredio()) {
            sql.append(" distinct ");

            sql.append(" n.codigo_nivel1,n.nombre_nivel1");
            sql.append(",n.codigo_nivel2,n.nombre_nivel2");
            sql.append(",n.codigo_nivel3,n.nombre_nivel3");
            sql.append(",n.codigo_nivel4,n.nombre_nivel4");
            sql.append(",n.codigo_nivel5,n.nombre_nivel5");

            sql.append(", n.codigo_establecimiento, n.nombre_establecimiento");
            sql.append(", n.codigo_sede, n.nombre_sede");
            sql.append(", n.codigo_predio, n.nombre_predio");

            // *indicadores           

            // Tipo de Riesgo Natural 1
            sql.append(" ,tbl_tipo1.tipo_ra_1");
            // Condicion del Riesgo Natural 1
            sql.append(" ,tbl_tipo1.cond_ra_1");

            // Tipo de Riesgo Natural 2
            sql.append(" ,tbl_tipo2.tipo_ra_2");
            // Condicion del Riesgo Natural 2
            sql.append(" ,tbl_tipo2.cond_ra_2");

            // Tipo de Riesgo Natural 3
            sql.append(" ,tbl_tipo3.tipo_ra_3");
            // Condicion del Riesgo Natural 3
            sql.append(" ,tbl_tipo3.cond_ra_3");

            // Condicion de Riesgo
            sql.append(" ,tbl_cond.condicion_riesgo");

            // Tipo de Retiro 1
            sql.append(" ,tbl_tip_ret1.tipo_ret_1");
            // Metros de Retiro 1
            sql.append(" ,tbl_tip_ret1.mts_ret_1");

            // Tipo de Retiro 2
            sql.append(" ,tbl_tip_ret2.tipo_ret_2");
            // Metros de Retiro 2
            sql.append(" ,tbl_tip_ret2.mts_ret_2");

            // Tipo de Retiro 3
            sql.append(" ,tbl_tip_ret3.tipo_ret_3");
            // Metros de Retiro 1
            sql.append(" ,tbl_tip_ret3.mts_ret_3");

            // Tipo de Retiro 4
            sql.append(" ,tbl_tip_ret4.tipo_ret_4");
            // Metros de Retiro 4
            sql.append(" ,tbl_tip_ret4.mts_ret_4");

            // Tipo de Retiro 5
            sql.append(" ,tbl_tip_ret5.tipo_ret_5");
            // Metros de Retiro 5
            sql.append(" ,tbl_tip_ret5.mts_ret_5");

            //*otros
            sql.append(" , n.direccion_predio direccion_predio, n.nombre_zona zona");
            sql.append(" , n.nombre_sector sector, n.nombre_clima clima");
            //etnias
            sql.append(" , etnias.etnias");
            //propiedad del predio
            sql.append(" , n.propiedad_predio");
            //accesibilidad externa
            sql.append(" , tbl_accesibilidad.accesibilidad");
            //Poblacion Afectada
            sql.append(" ,").append(funcion).append("(tbl_pob_afec.valor,0) poblacion_afectada");
            //Poblacion total
            sql.append(" ,").append(funcion).append("(tbl_pob_total.valor,0) poblacion_afectada");

        } else {
            if (filtro.isAgrupamientoNivel0()) {
                agrupamiento.append(" n.nombre_nivel0");
            }
            if (filtro.isAgrupamientoNivel1()) {
                agrupamiento.append("n.codigo_nivel1,n.nombre_nivel1");
            }
            if (filtro.isAgrupamientoNivel2()) {
                agrupamiento.append("n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
            }
            if (filtro.isAgrupamientoNivel3()) {
                agrupamiento.append("n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
            }
            if (filtro.isAgrupamientoNivel4()) {
                agrupamiento.append("n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
            }
            if (filtro.isAgrupamientoNivel5()) {
                agrupamiento.append("n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
                agrupamiento.append(",n.codigo_nivel5,n.nombre_nivel5");
            }
            if (filtro.isAgrupamientoEstablecimiento()) {
                agrupamiento.append("n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
                agrupamiento.append(",n.codigo_nivel5,n.nombre_nivel5");
                agrupamiento.append(", n.codigo_establecimiento, n.nombre_establecimiento");
            }
            if (filtro.isAgrupamientoSede()) {
                agrupamiento.append("n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
                agrupamiento.append(",n.codigo_nivel5,n.nombre_nivel5");
                agrupamiento.append(", n.codigo_establecimiento, n.nombre_establecimiento");
                agrupamiento.append(", n.codigo_sede, n.nombre_sede");
            }

            // select
            sql.append(agrupamiento.toString());

            //No de Predios que presentan Riesgo
            sql.append(" ,count(tbl_tot_pre_ra.id_predio) total_predios_con_riesgo");

            //Total Predios que Presentan Riesgo
            sql.append(" ,sum(").append(funcion).append("(tbl_total_predio.total,0)) total_predios");

            // Porcion por Condicion
            sql.append(" ,").append(funcion).append("(count(tbl_tot_pre_ra.id_predio),0)/case when count(tbl_total_predio.total) = 0 then 1 else count(tbl_total_predio.total) end porcion_condicion");

            //Poblacion Afectada
            sql.append(" ,sum(").append(funcion).append("(tbl_pob_afec.valor,0)) poblacion_afectada");

            //Poblacion total
            sql.append(" ,sum(").append(funcion).append("(tbl_pob_total.valor,0)) poblacion_total");

        }
// FROM 
        sql.append(" from ind_auxiliar_indicador aux");
        sql.append(" inner join ind_auxiliar_consultas n on n.id_predio = aux.id_predio and n.periodo = aux.periodo and n.id_tnt = aux.id_tnt");

        //filtros para riesgoN, por tipo de riesgo y/o condicion
        StringBuilder filtroRA = new StringBuilder();
        if (filtro.getCodRiesgo() != null) {
            filtroRA.append(" and (RESP_050_01 in ( ");
            filtroRA.append(filtro.getCodRiesgo());
            filtroRA.append(")");
            filtroRA.append(" or RESP_050_03 in ( ");
            filtroRA.append(filtro.getCodRiesgo());
            filtroRA.append(")");
            filtroRA.append(" or RESP_050_05 in ( ");
            filtroRA.append(filtro.getCodRiesgo());
            filtroRA.append("))");
        }
        if (filtro.getCodCondicionRiesgo() != null) {
            filtroRA.append(" and (RESP_050_02 = ");
            filtroRA.append(filtro.getCodCondicionRiesgo());
            filtroRA.append(" or RESP_050_04 = ");
            filtroRA.append(filtro.getCodCondicionRiesgo());
            filtroRA.append(" or RESP_050_06 = ");
            filtroRA.append(filtro.getCodCondicionRiesgo());
            filtroRA.append(")");
        }

        if (filtro.isAgrupamientoPredio()) {
            StringBuilder filtroRetiro = new StringBuilder();
            if (filtro.getCodRetiro() != null) {
                filtroRetiro.append(" and d1.campo = '");
                filtroRetiro.append(filtro.getCodRetiro());
                filtroRetiro.append("'");
            }

            sql.append(" inner join");
            sql.append(" (");
            String subquery_condicion_ra = this.consultarFormulaSQLIndicador(ParamIndicador.IND_RIESGO_ANTROPICO_CONDICION_RIESGO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());
            subquery_condicion_ra = subquery_condicion_ra.replace("--filtroRA", filtroRA.toString());
            sql.append(subquery_condicion_ra);
            sql.append(" ) tbl_cond");
            sql.append(" on tbl_cond.id_predio = aux.id_predio");
            sql.append(" and tbl_cond.id_tnt = aux.id_tnt and tbl_cond.periodo = aux.periodo");

            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_RIESGO_ANTROPICO_TIPO_RIESGO_1, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            if (filtro.getCodRiesgo() != null) {
                sql.append(" and RESP_050_01  in (");
                sql.append(filtro.getCodRiesgo());
                sql.append(")");
            }
            if (filtro.getCodCondicionRiesgo() != null) {
                sql.append(" and RESP_050_02 = ");
                sql.append(filtro.getCodCondicionRiesgo());
            }
            sql.append(" ) tbl_tipo1 on tbl_tipo1.id_predio = aux.id_predio");
            sql.append(" and tbl_tipo1.id_tnt = aux.id_tnt and tbl_tipo1.periodo = aux.periodo");

            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_RIESGO_ANTROPICO_TIPO_RIESGO_2, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            if (filtro.getCodRiesgo() != null) {
                sql.append(" and RESP_050_03  in (");
                sql.append(filtro.getCodRiesgo());
                sql.append(")");
            }
            if (filtro.getCodCondicionRiesgo() != null) {
                sql.append(" and RESP_050_04 = ");
                sql.append(filtro.getCodCondicionRiesgo());
            }
            sql.append(" ) tbl_tipo2 on tbl_tipo2.id_predio = aux.id_predio");
            sql.append(" and tbl_tipo2.id_tnt = aux.id_tnt and tbl_tipo2.periodo = aux.periodo");

            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_RIESGO_ANTROPICO_TIPO_RIESGO_3, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            if (filtro.getCodRiesgo() != null) {
                sql.append(" and RESP_050_05  in (");
                sql.append(filtro.getCodRiesgo());
                sql.append(")");
            }
            if (filtro.getCodCondicionRiesgo() != null) {
                sql.append(" and RESP_050_06 = ");
                sql.append(filtro.getCodCondicionRiesgo());
            }
            sql.append(" ) tbl_tipo3 on tbl_tipo3.id_predio = aux.id_predio");
            sql.append(" and tbl_tipo3.id_tnt = aux.id_tnt and tbl_tipo3.periodo = aux.periodo");

            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ETNIAS_PREDIO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) etnias on etnias.id_predio = aux.id_predio");
            sql.append(" and etnias.id_tnt = aux.id_tnt and etnias.periodo = aux.periodo");

            //RETIROS y METROS DE RETIROS
            sql.append(" left join");
            sql.append(" (");
            String subquery_tipo_retiro_1 = this.consultarFormulaSQLIndicador(ParamIndicador.IND_RIESGO_ANTROPICO_TIPO_RETIRO_1, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());
            filtroRetiro = new StringBuilder();
            if (filtro.getCodRetiro() != null) {
                filtroRetiro.append(" and d1.Resp_052_01 = '");
                filtroRetiro.append(filtro.getCodRetiro());
                filtroRetiro.append("'");
            }
            subquery_tipo_retiro_1 = subquery_tipo_retiro_1.replace("'ABREEEE'", "'ABREEEE'" + filtroRetiro.toString());
            sql.append(subquery_tipo_retiro_1);
            sql.append(" ) tbl_tip_ret1");
            sql.append(" on tbl_tip_ret1.id_predio = aux.id_predio");
            sql.append(" and tbl_tip_ret1.id_tnt = aux.id_tnt and tbl_tip_ret1.periodo = aux.periodo");

            sql.append(" left join");
            sql.append(" (");
            String subquery_tipo_retiro_2 = this.consultarFormulaSQLIndicador(ParamIndicador.IND_RIESGO_ANTROPICO_TIPO_RETIRO_2, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());
            filtroRetiro = new StringBuilder();
            if (filtro.getCodRetiro() != null) {
                filtroRetiro.append(" and d1.Resp_052_03 = '");
                filtroRetiro.append(filtro.getCodRetiro());
                filtroRetiro.append("'");
            }
            subquery_tipo_retiro_2 = subquery_tipo_retiro_2.replace("'ABREEEE'", "'ABREEEE'" + filtroRetiro.toString());
            sql.append(subquery_tipo_retiro_2);
            sql.append(" ) tbl_tip_ret2");
            sql.append(" on tbl_tip_ret2.id_predio = aux.id_predio");
            sql.append(" and tbl_tip_ret2.id_tnt = aux.id_tnt and tbl_tip_ret2.periodo = aux.periodo");

            sql.append(" left join");
            sql.append(" (");
            String subquery_tipo_retiro_3 = this.consultarFormulaSQLIndicador(ParamIndicador.IND_RIESGO_ANTROPICO_TIPO_RETIRO_3, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());
            filtroRetiro = new StringBuilder();
            if (filtro.getCodRetiro() != null) {
                filtroRetiro.append(" and d1.Resp_052_05 = '");
                filtroRetiro.append(filtro.getCodRetiro());
                filtroRetiro.append("'");
            }
            subquery_tipo_retiro_3 = subquery_tipo_retiro_3.replace("'ABREEEE'", "'ABREEEE'" + filtroRetiro.toString());
            sql.append(subquery_tipo_retiro_3);
            sql.append(" ) tbl_tip_ret3");
            sql.append(" on tbl_tip_ret3.id_predio = aux.id_predio");
            sql.append(" and tbl_tip_ret3.id_tnt = aux.id_tnt and tbl_tip_ret3.periodo = aux.periodo");

            sql.append(" left join");
            sql.append(" (");
            String subquery_tipo_retiro_4 = this.consultarFormulaSQLIndicador(ParamIndicador.IND_RIESGO_ANTROPICO_TIPO_RETIRO_4, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());
            filtroRetiro = new StringBuilder();
            if (filtro.getCodRetiro() != null) {
                filtroRetiro.append(" and d1.Resp_052_07 = '");
                filtroRetiro.append(filtro.getCodRetiro());
                filtroRetiro.append("'");
            }
            subquery_tipo_retiro_4 = subquery_tipo_retiro_4.replace("'ABREEEE'", "'ABREEEE'" + filtroRetiro.toString());
            sql.append(subquery_tipo_retiro_4);
            sql.append(" ) tbl_tip_ret4");
            sql.append(" on tbl_tip_ret4.id_predio = aux.id_predio");
            sql.append(" and tbl_tip_ret4.id_tnt = aux.id_tnt and tbl_tip_ret4.periodo = aux.periodo");

            sql.append(" left join");
            sql.append(" (");
            String subquery_tipo_retiro_5 = this.consultarFormulaSQLIndicador(ParamIndicador.IND_RIESGO_ANTROPICO_TIPO_RETIRO_5, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());
            filtroRetiro = new StringBuilder();
            if (filtro.getCodRetiro() != null) {
                filtroRetiro.append(" and d1.Resp_052_09 = '");
                filtroRetiro.append(filtro.getCodRetiro());
                filtroRetiro.append("'");
            }
            subquery_tipo_retiro_5 = subquery_tipo_retiro_5.replace("'ABREEEE'", "'ABREEEE'" + filtroRetiro.toString());
            sql.append(subquery_tipo_retiro_5);
            sql.append(" ) tbl_tip_ret5");
            sql.append(" on tbl_tip_ret5.id_predio = aux.id_predio");
            sql.append(" and tbl_tip_ret4.id_tnt = aux.id_tnt and tbl_tip_ret4.periodo = aux.periodo");

            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ACCESIBILIDAD_CONDICION_ACCESIBILIDAD, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) tbl_accesibilidad");
            sql.append(" on tbl_accesibilidad.id_predio = aux.id_predio");
            sql.append(" and tbl_accesibilidad.id_tnt = aux.id_tnt and tbl_accesibilidad.periodo = aux.periodo");

        } else {
            sql.append(" left join");
            sql.append(" (");
            String subquery_tot_pred_rn = this.consultarFormulaSQLIndicador(ParamIndicador.IND_RIESGO_ANTROPICO_NUMERO_PREDIOS_PRESENTAN_RIESGO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());
            subquery_tot_pred_rn = subquery_tot_pred_rn.replace("--filtroRA", filtroRA.toString());
            sql.append(subquery_tot_pred_rn);
            sql.append(" ) tbl_tot_pre_ra on tbl_tot_pre_ra.id_predio = aux.id_predio");
            sql.append(" and tbl_tot_pre_ra.id_tnt = aux.id_tnt and tbl_tot_pre_ra.periodo = aux.periodo");

            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_TOTAL_PREDIOS, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) tbl_total_predio on tbl_total_predio.id_predio = aux.id_predio");
            sql.append(" and tbl_total_predio.id_tnt = aux.id_tnt and tbl_total_predio.periodo = aux.periodo");
        }
        //poblacion afectada
        sql.append(" left join");
        sql.append(" (");
        String subquery_pob_afec = this.consultarFormulaSQLIndicador(ParamIndicador.IND_RIESGO_ANTROPICO_POBLACION_AFECTADA, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());
        subquery_pob_afec = subquery_pob_afec.replace("--filtroRA", filtroRA.toString());
        sql.append(subquery_pob_afec);
        sql.append(" ) tbl_pob_afec on tbl_pob_afec.id_predio = aux.id_predio");
        sql.append(" and tbl_pob_afec.id_tnt = aux.id_tnt and tbl_pob_afec.periodo = aux.periodo");

        //poblacion total
        sql.append(" left join");
        sql.append(" (");
        sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_TOTAL_POBLACION, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
        sql.append(" ) tbl_pob_total on tbl_pob_total.id_predio = aux.id_predio");
        sql.append(" and tbl_pob_total.id_tnt = aux.id_tnt and tbl_pob_total.periodo = aux.periodo");


// WHERE
        sql.append(" where aux.id_tnt = ?1 and aux.periodo = ?2");

        if (filtro.isAgrupamientoPredio()) {
            if (filtro.getCodRetiro() != null) {
                sql.append(" and (tbl_tip_ret1.id_predio IS NOT NULL or");
                sql.append(" tbl_tip_ret2.id_predio IS NOT NULL or");
                sql.append(" tbl_tip_ret3.id_predio IS NOT NULL or");
                sql.append(" tbl_tip_ret4.id_predio IS NOT NULL or");
                sql.append(" tbl_tip_ret5.id_predio IS NOT NULL)");
            }
            sql.append(" and n.principal_establecimiento = 1");
        }
        if (filtro.getIdNivel0() != null) {
            sql.append(" and n.id_nivel0 = ?3");
        }
        if (filtro.getIdNivel1() != null) {
            sql.append(" and n.id_nivel1 = ?4");
        }
        if (filtro.getIdNivel2() != null) {
            sql.append(" and n.id_nivel2 = ?5");
        }
        if (filtro.getIdNivel3() != null) {
            sql.append(" and n.id_nivel3 = ?6");
        }
        if (filtro.getIdNivel4() != null) {
            sql.append(" and n.id_nivel4 = ?7");
        }
        if (filtro.getIdNivel5() != null) {
            sql.append(" and n.id_nivel5 = ?8");
        }
        if (filtro.getIdEstablecimiento() != null) {
            sql.append(" and n.id_establecimiento = ?9");
        }
        if (filtro.getIdSede() != null) {
            sql.append(" and n.id_sede = ?10");
        }
        if (filtro.getIdPredio() != null) {
            sql.append(" and n.id_predio = ?11");
        }
        // otros filtros
        if (filtro.getCodZona() != null) {
            sql.append(" and n.codigo_zona = ?12");
        }
        if (filtro.getCodSector() != null) {
            sql.append(" and n.codigo_sector = ?13");
        }

        // GROUP BY 
        if (!filtro.isAgrupamientoPredio()) {
            sql.append(" group by ");
            sql.append(agrupamiento.toString());
        }

        String auxSql = sql.toString();
        if (ParamBaseDatos.POSTGRE.equals(UtilProperties.getDbMotor())) {
            auxSql = auxSql.replaceAll("\\?start", "");
            auxSql = auxSql.replaceAll("\\?end", "");
        }


        Query query = tpm.getEm().createNativeQuery(auxSql);
        query.setParameter(1, tpm.getCurrentTenant());
        query.setParameter(2, filtro.getPeriodo());
        query.setParameter(3, filtro.getIdNivel0());
        if (filtro.getIdNivel1() != null) {
            query.setParameter(4, filtro.getIdNivel1());
        }
        if (filtro.getIdNivel2() != null) {
            query.setParameter(5, filtro.getIdNivel2());
        }
        if (filtro.getIdNivel3() != null) {
            query.setParameter(6, filtro.getIdNivel3());
        }
        if (filtro.getIdNivel4() != null) {
            query.setParameter(7, filtro.getIdNivel4());
        }
        if (filtro.getIdNivel5() != null) {
            query.setParameter(8, filtro.getIdNivel5());
        }
        if (filtro.getIdEstablecimiento() != null) {
            query.setParameter(9, filtro.getIdEstablecimiento());
        }
        if (filtro.getIdSede() != null) {
            query.setParameter(10, filtro.getIdSede());
        }
        if (filtro.getIdPredio() != null) {
            query.setParameter(11, filtro.getIdPredio());
        }
        // otros filtros
        if (filtro.getCodZona() != null) {
            query.setParameter(12, filtro.getCodZona());
        }
        if (filtro.getCodSector() != null) {
            query.setParameter(13, filtro.getCodSector());
        }


        return query.getResultList();
    }

    private List<Object[]> consultarRiegosAntropicosTiempoRealPostgre(FiltroAmbitoRiesgoAntropico filtro) {
        String codInstrumento = this.consultarCodInstrumentoPorPeriodo(filtro.getPeriodo());
        StringBuilder sql = new StringBuilder();
        StringBuilder agrupamiento = new StringBuilder();
        String funcion = "coalesce";

//SELECT
        sql.append(" select ");
        if (filtro.isAgrupamientoPredio()) {

            sql.append("distinct n.codigo_nivel1,n.nombre_nivel1");
            sql.append(",n.codigo_nivel2,n.nombre_nivel2");
            sql.append(",n.codigo_nivel3,n.nombre_nivel3");
            sql.append(",n.codigo_nivel4,n.nombre_nivel4");
            sql.append(",n.codigo_nivel5,n.nombre_nivel5");

            sql.append(", n.codigo_establecimiento, n.nombre_establecimiento");
            sql.append(", n.codigo_sede, n.nombre_sede");
            sql.append(", n.codigo_predio, n.nombre_predio");

            // *indicadores           

            // Tipo de Riesgo Natural 1
            sql.append(" ,tbl_tipo1.tipo_ra_1");
            // Condicion del Riesgo Natural 1
            sql.append(" ,tbl_tipo1.cond_ra_1");

            // Tipo de Riesgo Natural 2
            sql.append(" ,tbl_tipo2.tipo_ra_2");
            // Condicion del Riesgo Natural 2
            sql.append(" ,tbl_tipo2.cond_ra_2");

            // Tipo de Riesgo Natural 3
            sql.append(" ,tbl_tipo3.tipo_ra_3");
            // Condicion del Riesgo Natural 3
            sql.append(" ,tbl_tipo3.cond_ra_3");

            // Condicion de Riesgo
            sql.append(" ,tbl_cond.condicion_riesgo");

            // Tipo de Retiro 1
            sql.append(" ,tbl_tip_ret1.tipo_ret_1");
            // Metros de Retiro 1
            sql.append(" ,tbl_tip_ret1.mts_ret_1");

            // Tipo de Retiro 2
            sql.append(" ,tbl_tip_ret2.tipo_ret_2");
            // Metros de Retiro 2
            sql.append(" ,tbl_tip_ret2.mts_ret_2");

            // Tipo de Retiro 3
            sql.append(" ,tbl_tip_ret3.tipo_ret_3");
            // Metros de Retiro 1
            sql.append(" ,tbl_tip_ret3.mts_ret_3");

            // Tipo de Retiro 4
            sql.append(" ,tbl_tip_ret4.tipo_ret_4");
            // Metros de Retiro 4
            sql.append(" ,tbl_tip_ret4.mts_ret_4");

            // Tipo de Retiro 5
            sql.append(" ,tbl_tip_ret5.tipo_ret_5");
            // Metros de Retiro 5
            sql.append(" ,tbl_tip_ret5.mts_ret_5");

            //*otros
            sql.append(" , n.direccion_predio direccion_predio, n.nombre_zona zona");
            sql.append(" , n.nombre_sector sector, n.nombre_clima clima");
            //etnias
            sql.append(" , etnias.etnias");
            //propiedad del predio
            sql.append(" , n.propiedad_predio");
            //accesibilidad externa
            sql.append(" , tbl_accesibilidad.accesibilidad");
            //Poblacion Afectada
            sql.append(" ,").append(funcion).append("(tbl_pob_afec.valor,0) poblacion_afectada");
            //Poblacion total
            sql.append(" ,").append(funcion).append("(tbl_pob_total.valor,0) poblacion_afectada");

        } else {
            if (filtro.isAgrupamientoNivel0()) {
                agrupamiento.append(" n.nombre_nivel0");
            }
            if (filtro.isAgrupamientoNivel1()) {
                agrupamiento.append(" n.codigo_nivel1,n.nombre_nivel1");
            }
            if (filtro.isAgrupamientoNivel2()) {
                agrupamiento.append(" n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
            }
            if (filtro.isAgrupamientoNivel3()) {
                agrupamiento.append(" n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
            }
            if (filtro.isAgrupamientoNivel4()) {
                agrupamiento.append(" n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
            }
            if (filtro.isAgrupamientoNivel5()) {
                agrupamiento.append(" n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
                agrupamiento.append(",n.codigo_nivel5,n.nombre_nivel5");
            }
            if (filtro.isAgrupamientoEstablecimiento()) {
                agrupamiento.append(" n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
                agrupamiento.append(",n.codigo_nivel5,n.nombre_nivel5");
                agrupamiento.append(", n.codigo_establecimiento, n.nombre_establecimiento");
            }
            if (filtro.isAgrupamientoSede()) {

                agrupamiento.append(" n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
                agrupamiento.append(",n.codigo_nivel5,n.nombre_nivel5");

                agrupamiento.append(", n.codigo_establecimiento, n.nombre_establecimiento");
                agrupamiento.append(", n.codigo_sede, n.nombre_sede");
            }

            // select
            sql.append(agrupamiento.toString());

            //No de Predios que presentan Riesgo
            sql.append(" ,count(tbl_tot_pre_ra.id_predio) total_predios_con_riesgo");

            //Total Predios que Presentan Riesgo
            sql.append(" ,sum(").append(funcion).append("(tbl_total_predio.total,0)) total_predios");

            // Porcion por Condicion
            sql.append(" ,").append(funcion).append("(count(tbl_tot_pre_ra.id_predio),0)/case when count(tbl_total_predio.total) = 0 then 1 else count(tbl_total_predio.total) end porcion_condicion");

            //Poblacion Afectada
            sql.append(" ,sum(").append(funcion).append("(tbl_pob_afec.valor,0)) poblacion_afectada");

            //Poblacion total
            sql.append(" ,sum(").append(funcion).append("(tbl_pob_total.valor,0)) poblacion_total");

        }
// FROM 
        sql.append(" from ind_auxiliar_indicador aux");
        sql.append(" inner join ind_auxiliar_consultas n on n.id_predio = aux.id_predio and n.periodo = aux.periodo and n.id_tnt = aux.id_tnt");

        //filtros para riesgoN, por tipo de riesgo y/o condicion
        StringBuilder filtroRA = new StringBuilder();
        if (filtro.getCodRiesgo() != null) {
            filtroRA.append(" and d1.valor in (");
            filtroRA.append(filtro.getCodRiesgo());
            filtroRA.append(")");
        }
        if (filtro.getCodCondicionRiesgo() != null) {
            filtroRA.append(" and d2.valor = '");
            filtroRA.append(filtro.getCodCondicionRiesgo());
            filtroRA.append("'");
        }

        if (filtro.isAgrupamientoPredio()) {
            StringBuilder filtroRetiro = new StringBuilder();
            if (filtro.getCodRetiro() != null) {
                filtroRetiro.append(" and d1.valor = '");
                filtroRetiro.append(filtro.getCodRetiro());
                filtroRetiro.append("'");
            }

            sql.append(" inner join");
            sql.append(" (");
            String subquery_condicion_ra = this.consultarFormulaSQLIndicador(ParamIndicador.IND_RIESGO_ANTROPICO_CONDICION_RIESGO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());
            subquery_condicion_ra = subquery_condicion_ra.replace("'RA'", "'RA'" + filtroRA.toString());
            sql.append(subquery_condicion_ra);
            sql.append(" ) tbl_cond");
            sql.append(" on tbl_cond.id_predio = aux.id_predio");
            sql.append(" and tbl_cond.id_tnt = aux.id_tnt and tbl_cond.periodo = aux.periodo");

            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_RIESGO_ANTROPICO_TIPO_RIESGO_1, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(filtroRA.toString());
            sql.append(" ) tbl_tipo1 on tbl_tipo1.id_predio = aux.id_predio");
            sql.append(" and tbl_tipo1.id_tnt = aux.id_tnt and tbl_tipo1.periodo = aux.periodo");

            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_RIESGO_ANTROPICO_TIPO_RIESGO_2, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(filtroRA.toString());
            sql.append(" ) tbl_tipo2 on tbl_tipo2.id_predio = aux.id_predio");
            sql.append(" and tbl_tipo2.id_tnt = aux.id_tnt and tbl_tipo2.periodo = aux.periodo");

            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_RIESGO_ANTROPICO_TIPO_RIESGO_3, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(filtroRA.toString());
            sql.append(" ) tbl_tipo3 on tbl_tipo3.id_predio = aux.id_predio");
            sql.append(" and tbl_tipo3.id_tnt = aux.id_tnt and tbl_tipo3.periodo = aux.periodo");

            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ETNIAS_PREDIO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) etnias on etnias.id_predio = aux.id_predio");
            sql.append(" and etnias.id_tnt = aux.id_tnt and etnias.periodo = aux.periodo");

            //RETIROS y METROS DE RETIROS
            sql.append(" left join");
            sql.append(" (");
            String subquery_tipo_retiro_1 = this.consultarFormulaSQLIndicador(ParamIndicador.IND_RIESGO_ANTROPICO_TIPO_RETIRO_1, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());
            subquery_tipo_retiro_1 = subquery_tipo_retiro_1.replace("'ABREEEE'", "'ABREEEE'" + filtroRetiro.toString());
            sql.append(subquery_tipo_retiro_1);
            sql.append(" ) tbl_tip_ret1");
            sql.append(" on tbl_tip_ret1.id_predio = aux.id_predio");
            sql.append(" and tbl_tip_ret1.id_tnt = aux.id_tnt and tbl_tip_ret1.periodo = aux.periodo");

            sql.append(" left join");
            sql.append(" (");
            String subquery_tipo_retiro_2 = this.consultarFormulaSQLIndicador(ParamIndicador.IND_RIESGO_ANTROPICO_TIPO_RETIRO_2, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());
            subquery_tipo_retiro_2 = subquery_tipo_retiro_2.replace("'ABREEEE'", "'ABREEEE'" + filtroRetiro.toString());
            sql.append(subquery_tipo_retiro_2);
            sql.append(" ) tbl_tip_ret2");
            sql.append(" on tbl_tip_ret2.id_predio = aux.id_predio");
            sql.append(" and tbl_tip_ret2.id_tnt = aux.id_tnt and tbl_tip_ret2.periodo = aux.periodo");

            sql.append(" left join");
            sql.append(" (");
            String subquery_tipo_retiro_3 = this.consultarFormulaSQLIndicador(ParamIndicador.IND_RIESGO_ANTROPICO_TIPO_RETIRO_3, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());
            subquery_tipo_retiro_3 = subquery_tipo_retiro_3.replace("'ABREEEE'", "'ABREEEE'" + filtroRetiro.toString());
            sql.append(subquery_tipo_retiro_3);
            sql.append(" ) tbl_tip_ret3");
            sql.append(" on tbl_tip_ret3.id_predio = aux.id_predio");
            sql.append(" and tbl_tip_ret3.id_tnt = aux.id_tnt and tbl_tip_ret3.periodo = aux.periodo");

            sql.append(" left join");
            sql.append(" (");
            String subquery_tipo_retiro_4 = this.consultarFormulaSQLIndicador(ParamIndicador.IND_RIESGO_ANTROPICO_TIPO_RETIRO_4, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());
            subquery_tipo_retiro_4 = subquery_tipo_retiro_4.replace("'ABREEEE'", "'ABREEEE'" + filtroRetiro.toString());
            sql.append(subquery_tipo_retiro_4);
            sql.append(" ) tbl_tip_ret4");
            sql.append(" on tbl_tip_ret4.id_predio = aux.id_predio");
            sql.append(" and tbl_tip_ret4.id_tnt = aux.id_tnt and tbl_tip_ret4.periodo = aux.periodo");

            sql.append(" left join");
            sql.append(" (");
            String subquery_tipo_retiro_5 = this.consultarFormulaSQLIndicador(ParamIndicador.IND_RIESGO_ANTROPICO_TIPO_RETIRO_5, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());
            subquery_tipo_retiro_5 = subquery_tipo_retiro_5.replace("'ABREEEE'", "'ABREEEE'" + filtroRetiro.toString());
            sql.append(subquery_tipo_retiro_5);
            sql.append(" ) tbl_tip_ret5");
            sql.append(" on tbl_tip_ret5.id_predio = aux.id_predio");
            sql.append(" and tbl_tip_ret4.id_tnt = aux.id_tnt and tbl_tip_ret4.periodo = aux.periodo");

            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ACCESIBILIDAD_CONDICION_ACCESIBILIDAD, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) tbl_accesibilidad");
            sql.append(" on tbl_accesibilidad.id_predio = aux.id_predio");
            sql.append(" and tbl_accesibilidad.id_tnt = aux.id_tnt and tbl_accesibilidad.periodo = aux.periodo");

        } else {
            sql.append(" left join");
            sql.append(" (");
            String subquery_tot_pred_rn = this.consultarFormulaSQLIndicador(ParamIndicador.IND_RIESGO_ANTROPICO_NUMERO_PREDIOS_PRESENTAN_RIESGO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());
            subquery_tot_pred_rn = subquery_tot_pred_rn.replace("--filtroRA", filtroRA.toString());
            sql.append(subquery_tot_pred_rn);
            sql.append(" ) tbl_tot_pre_ra on tbl_tot_pre_ra.id_predio = aux.id_predio");
            sql.append(" and tbl_tot_pre_ra.id_tnt = aux.id_tnt and tbl_tot_pre_ra.periodo = aux.periodo");

            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_TOTAL_PREDIOS, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) tbl_total_predio on tbl_total_predio.id_predio = aux.id_predio");
            sql.append(" and tbl_total_predio.id_tnt = aux.id_tnt and tbl_total_predio.periodo = aux.periodo");
        }
        //poblacion afectada
        sql.append(" left join");
        sql.append(" (");
        String subquery_pob_afec = this.consultarFormulaSQLIndicador(ParamIndicador.IND_RIESGO_ANTROPICO_POBLACION_AFECTADA, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());
        subquery_pob_afec = subquery_pob_afec.replace("--filtroRA", filtroRA.toString());
        sql.append(subquery_pob_afec);
        sql.append(" ) tbl_pob_afec on tbl_pob_afec.id_predio = aux.id_predio");
        sql.append(" and tbl_pob_afec.id_tnt = aux.id_tnt and tbl_pob_afec.periodo = aux.periodo");

        //poblacion total
        sql.append(" left join");
        sql.append(" (");
        sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_TOTAL_POBLACION, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
        sql.append(" ) tbl_pob_total on tbl_pob_total.id_predio = aux.id_predio");
        sql.append(" and tbl_pob_total.id_tnt = aux.id_tnt and tbl_pob_total.periodo = aux.periodo");


// WHERE
        sql.append(" where aux.id_tnt = ?1 and aux.periodo = ?2");

        if (filtro.isAgrupamientoPredio()) {
            if (filtro.getCodRetiro() != null) {
                sql.append(" and (tbl_tip_ret1.id_predio IS NOT NULL or");
                sql.append(" tbl_tip_ret2.id_predio IS NOT NULL or");
                sql.append(" tbl_tip_ret3.id_predio IS NOT NULL or");
                sql.append(" tbl_tip_ret4.id_predio IS NOT NULL or");
                sql.append(" tbl_tip_ret5.id_predio IS NOT NULL)");
            }
            sql.append(" and n.principal_establecimiento = 1");
        }
        if (filtro.getIdNivel0() != null) {
            sql.append(" and n.id_nivel0 = ?3");
        }
        if (filtro.getIdNivel1() != null) {
            sql.append(" and n.id_nivel1 = ?4");
        }
        if (filtro.getIdNivel2() != null) {
            sql.append(" and n.id_nivel2 = ?5");
        }
        if (filtro.getIdNivel3() != null) {
            sql.append(" and n.id_nivel3 = ?6");
        }
        if (filtro.getIdNivel4() != null) {
            sql.append(" and n.id_nivel4 = ?7");
        }
        if (filtro.getIdNivel5() != null) {
            sql.append(" and n.id_nivel5 = ?8");
        }
        if (filtro.getIdEstablecimiento() != null) {
            sql.append(" and n.id_establecimiento = ?9");
        }
        if (filtro.getIdSede() != null) {
            sql.append(" and n.id_sede = ?10");
        }
        if (filtro.getIdPredio() != null) {
            sql.append(" and n.id_predio = ?11");
        }
        // otros filtros
        if (filtro.getCodZona() != null) {
            sql.append(" and n.codigo_zona = ?12");
        }
        if (filtro.getCodSector() != null) {
            sql.append(" and n.codigo_sector = ?13");
        }

        // GROUP BY 
        if (!filtro.isAgrupamientoPredio()) {
            sql.append(" group by ");
            sql.append(agrupamiento.toString());
        }

        String auxSql = sql.toString();
        if (ParamBaseDatos.POSTGRE.equals(UtilProperties.getDbMotor())) {
            auxSql = auxSql.replaceAll("\\?start", "");
            auxSql = auxSql.replaceAll("\\?end", "");
        }


        Query query = tpm.getEm().createNativeQuery(auxSql);
        query.setParameter(1, tpm.getCurrentTenant());
        query.setParameter(2, filtro.getPeriodo());
        query.setParameter(3, filtro.getIdNivel0());
        if (filtro.getIdNivel1() != null) {
            query.setParameter(4, filtro.getIdNivel1());
        }
        if (filtro.getIdNivel2() != null) {
            query.setParameter(5, filtro.getIdNivel2());
        }
        if (filtro.getIdNivel3() != null) {
            query.setParameter(6, filtro.getIdNivel3());
        }
        if (filtro.getIdNivel4() != null) {
            query.setParameter(7, filtro.getIdNivel4());
        }
        if (filtro.getIdNivel5() != null) {
            query.setParameter(8, filtro.getIdNivel5());
        }
        if (filtro.getIdEstablecimiento() != null) {
            query.setParameter(9, filtro.getIdEstablecimiento());
        }
        if (filtro.getIdSede() != null) {
            query.setParameter(10, filtro.getIdSede());
        }
        if (filtro.getIdPredio() != null) {
            query.setParameter(11, filtro.getIdPredio());
        }
        // otros filtros
        if (filtro.getCodZona() != null) {
            query.setParameter(12, filtro.getCodZona());
        }
        if (filtro.getCodSector() != null) {
            query.setParameter(13, filtro.getCodSector());
        }


        return query.getResultList();
    }

    private List<Object[]> consultarRiegosAntropicosIndicadores(FiltroAmbitoRiesgoAntropico filtro) {
        StringBuilder sql = new StringBuilder();
// consulta por nivel de agrupamiento superior a predio
// SELECT
        sql.append(" select distinct");
        if (filtro.isAgrupamientoPredio()) {

            sql.append(" n.codigo_nivel1,n.nombre_nivel1");
            sql.append(",n.codigo_nivel2,n.nombre_nivel2");
            sql.append(",n.codigo_nivel3,n.nombre_nivel3");
            sql.append(",n.codigo_nivel4,n.nombre_nivel4");
            sql.append(",n.codigo_nivel5,n.nombre_nivel5");

            sql.append(", n.codigo_establecimiento, n.nombre_establecimiento");
            sql.append(", n.codigo_sede, n.nombre_sede");
            sql.append(", n.codigo_predio, n.nombre_predio");

            // *indicadores           

            // Tipo de Riesgo Antropico 1
            sql.append(" ,tbl_tipo1.valor");

            // Condicion del Riesgo Antropico 1
            sql.append(" ,tbl_cond1.valor");

            // Tipo de Riesgo Antropico 2
            sql.append(" ,tbl_tipo2.valor");

            // Condicion del Riesgo Antropico 2
            sql.append(" ,tbl_cond2.valor");

            // Tipo de Riesgo Antropico 3
            sql.append(" ,tbl_tipo3.valor");

            // Condicion del Riesgo Antropico 3
            sql.append(" ,tbl_cond3.valor");

            // Condicion de Riesgo
            sql.append(" ,condicion_riesgo.valor");

            // Tipo de Retiro 1
            sql.append(" ,tbl_tip_ret1.valor");
            // Metros de Retiro 1
            sql.append(" ,tbl_mts_ret1.valor");

            // Tipo de Retiro 2
            sql.append(" ,tbl_tip_ret2.valor");
            // Metros de Retiro 2
            sql.append(" ,tbl_mts_ret2.valor");

            // Tipo de Retiro 3
            sql.append(" ,tbl_tip_ret3.valor");
            // Metros de Retiro 3
            sql.append(" ,tbl_mts_ret3.valor");

            // Tipo de Retiro 4
            sql.append(" ,tbl_tip_ret4.valor");
            // Metros de Retiro 4
            sql.append(" ,tbl_mts_ret4.valor");

            // Tipo de Retiro 5
            sql.append(" ,tbl_tip_ret5.valor");
            // Metros de Retiro 5
            sql.append(" ,tbl_mts_ret5.valor");

            //*otros
            sql.append(" , n.direccion_predio direccion_predio, n.nombre_zona zona");
            sql.append(" , n.nombre_sector sector, n.nombre_clima clima");
            //etnias
            sql.append(" , etnias.valor");
            //propiedad del predio
            sql.append(" , n.propiedad_predio");
            //accesibilidad externa
            sql.append(" , tbl_accesibilidad.valor");
            //Poblacion Afectada
            sql.append(" ,coalesce(poblacion_afectada.valor,'0')");
            //Poblacion Total
            sql.append(" ,coalesce(poblacion_total.valor,'0')");
        } else {
            if (filtro.isAgrupamientoNivel0()) {
                sql.append(" n.nombre_nivel0");
            }
            if (filtro.isAgrupamientoNivel1()) {
                sql.append(" n.codigo_nivel1,n.nombre_nivel1");
            }
            if (filtro.isAgrupamientoNivel2()) {
                sql.append(" n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
            }
            if (filtro.isAgrupamientoNivel3()) {
                sql.append(" n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
            }
            if (filtro.isAgrupamientoNivel4()) {
                sql.append(" n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
                sql.append(",n.codigo_nivel4,n.nombre_nivel4");
            }
            if (filtro.isAgrupamientoNivel5()) {
                sql.append(" n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
                sql.append(",n.codigo_nivel4,n.nombre_nivel4");
                sql.append(",n.codigo_nivel5,n.nombre_nivel5");
            }
            if (filtro.isAgrupamientoEstablecimiento()) {
                sql.append(" n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
                sql.append(",n.codigo_nivel4,n.nombre_nivel4");
                sql.append(",n.codigo_nivel5,n.nombre_nivel5");
                sql.append(" ,n.codigo_establecimiento, n.nombre_establecimiento");
            }
            if (filtro.isAgrupamientoSede()) {
                sql.append(" n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
                sql.append(",n.codigo_nivel4,n.nombre_nivel4");
                sql.append(",n.codigo_nivel5,n.nombre_nivel5");

                sql.append(" ,n.codigo_establecimiento, n.nombre_establecimiento");
                sql.append(" ,n.codigo_sede, n.nombre_sede");
            }
            //No de Predios que presentan Riesgo
            sql.append(" ,coalesce(total_predios_con_riesgo.valor,'0')");

            //Total Predios que Presentan Riesgo
            sql.append(" ,total_predio.valor");

            // Porcion por Condicion
            sql.append(" ,to_number(coalesce(total_predios_con_riesgo.valor,'0'),'9999999')/to_number(case when total_predio.valor = '0' then '1' else total_predio.valor end ,'9999999')");

            //Poblacion Afectada
            sql.append(" ,coalesce(poblacion_afectada.valor,'0')");

            //Poblacion total
            sql.append(" ,coalesce(poblacion_total.valor,'0')");

        }
// FROM 
        sql.append(" from ind_auxiliar_indicador aux");
        sql.append(" inner join ind_auxiliar_consultas n on n.id_predio = aux.id_predio and n.periodo = aux.periodo and n.id_tnt = aux.id_tnt");

        String strSQLNivelAgrupamiento = this.getSQLNivelAgrupamiento(filtro);
        String strSQLConsultarIndicador = this.getSQLConsultarIndicadorAlmacenado();

        if (filtro.isAgrupamientoPredio()) {
            // tipo de riesgo antropico 1
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_tipo1 on tbl_tipo1.id_tnt = aux.id_tnt and tbl_tipo1.periodo = aux.periodo");
            sql.append(String.format(" and tbl_tipo1.cod_indicador = '%s'", ParamIndicador.IND_RIESGO_ANTROPICO_TIPO_RIESGO_1));
            sql.append(" and tbl_tipo1.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_tipo1.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            // condicion del riesgo antropico 1
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_cond1 on tbl_cond1.id_tnt = aux.id_tnt and tbl_cond1.periodo = aux.periodo");
            sql.append(String.format(" and tbl_cond1.cod_indicador = '%s'", ParamIndicador.IND_RIESGO_ANTROPICO_CONDICION_RIESGO_1));
            sql.append(" and tbl_cond1.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_cond1.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            // tipo de riesgo antropico 2
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_tipo2 on tbl_tipo2.id_tnt = aux.id_tnt and tbl_tipo2.periodo = aux.periodo");
            sql.append(String.format(" and tbl_tipo2.cod_indicador = '%s'", ParamIndicador.IND_RIESGO_ANTROPICO_TIPO_RIESGO_2));
            sql.append(" and tbl_tipo2.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_tipo2.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            // condicion del riesgo antropico 2
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_cond2 on tbl_cond2.id_tnt = aux.id_tnt and tbl_cond2.periodo = aux.periodo");
            sql.append(String.format(" and tbl_cond2.cod_indicador = '%s'", ParamIndicador.IND_RIESGO_ANTROPICO_CONDICION_RIESGO_2));
            sql.append(" and tbl_cond2.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_cond2.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            // tipo de riesgo antropico 3
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_tipo3 on tbl_tipo3.id_tnt = aux.id_tnt and tbl_tipo3.periodo = aux.periodo");
            sql.append(String.format(" and tbl_tipo3.cod_indicador = '%s'", ParamIndicador.IND_RIESGO_ANTROPICO_TIPO_RIESGO_3));
            sql.append(" and tbl_tipo3.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_tipo3.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            // condicion del riesgo antropico 3
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_cond3 on tbl_cond3.id_tnt = aux.id_tnt and tbl_cond3.periodo = aux.periodo");
            sql.append(String.format(" and tbl_cond3.cod_indicador = '%s'", ParamIndicador.IND_RIESGO_ANTROPICO_CONDICION_RIESGO_3));
            sql.append(" and tbl_cond3.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_cond3.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            // Condicion de Riesgo
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) condicion_riesgo on condicion_riesgo.id_tnt = aux.id_tnt and condicion_riesgo.periodo = aux.periodo");
            sql.append(String.format(" and condicion_riesgo.cod_indicador = '%s'", ParamIndicador.IND_RIESGO_ANTROPICO_CONDICION_RIESGO));
            sql.append(" and condicion_riesgo.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and condicion_riesgo.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            // tipo de retiro 1
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_tip_ret1 on tbl_tip_ret1.id_tnt = aux.id_tnt and tbl_tip_ret1.periodo = aux.periodo");
            sql.append(String.format(" and tbl_tip_ret1.cod_indicador = '%s'", ParamIndicador.IND_RIESGO_ANTROPICO_TIPO_RETIRO_1));
            sql.append(" and tbl_tip_ret1.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_tip_ret1.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            // metros de retiro 1
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_mts_ret1 on tbl_mts_ret1.id_tnt = aux.id_tnt and tbl_mts_ret1.periodo = aux.periodo");
            sql.append(String.format(" and tbl_mts_ret1.cod_indicador = '%s'", ParamIndicador.IND_RIESGO_ANTROPICO_METROS_RETIRO_1));
            sql.append(" and tbl_mts_ret1.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_mts_ret1.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            // tipo de retiro 2
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_tip_ret2 on tbl_tip_ret2.id_tnt = aux.id_tnt and tbl_tip_ret2.periodo = aux.periodo");
            sql.append(String.format(" and tbl_tip_ret2.cod_indicador = '%s'", ParamIndicador.IND_RIESGO_ANTROPICO_TIPO_RETIRO_2));
            sql.append(" and tbl_tip_ret2.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_tip_ret2.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            // metros de retiro 2
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_mts_ret2 on tbl_mts_ret2.id_tnt = aux.id_tnt and tbl_mts_ret2.periodo = aux.periodo");
            sql.append(String.format(" and tbl_mts_ret2.cod_indicador = '%s'", ParamIndicador.IND_RIESGO_ANTROPICO_METROS_RETIRO_2));
            sql.append(" and tbl_mts_ret2.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_mts_ret2.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            // tipo de retiro 3
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_tip_ret3 on tbl_tip_ret3.id_tnt = aux.id_tnt and tbl_tip_ret3.periodo = aux.periodo");
            sql.append(String.format(" and tbl_tip_ret3.cod_indicador = '%s'", ParamIndicador.IND_RIESGO_ANTROPICO_TIPO_RETIRO_3));
            sql.append(" and tbl_tip_ret3.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_tip_ret3.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            // metros de retiro 3
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_mts_ret3 on tbl_mts_ret3.id_tnt = aux.id_tnt and tbl_mts_ret3.periodo = aux.periodo");
            sql.append(String.format(" and tbl_mts_ret3.cod_indicador = '%s'", ParamIndicador.IND_RIESGO_ANTROPICO_METROS_RETIRO_3));
            sql.append(" and tbl_mts_ret3.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_mts_ret3.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            // tipo de retiro 4
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_tip_ret4 on tbl_tip_ret4.id_tnt = aux.id_tnt and tbl_tip_ret4.periodo = aux.periodo");
            sql.append(String.format(" and tbl_tip_ret4.cod_indicador = '%s'", ParamIndicador.IND_RIESGO_ANTROPICO_TIPO_RETIRO_4));
            sql.append(" and tbl_tip_ret4.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_tip_ret4.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            // metros de retiro 4
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_mts_ret4 on tbl_mts_ret4.id_tnt = aux.id_tnt and tbl_mts_ret4.periodo = aux.periodo");
            sql.append(String.format(" and tbl_mts_ret4.cod_indicador = '%s'", ParamIndicador.IND_RIESGO_ANTROPICO_METROS_RETIRO_4));
            sql.append(" and tbl_mts_ret4.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_mts_ret4.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            // tipo de retiro 5
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_tip_ret5 on tbl_tip_ret5.id_tnt = aux.id_tnt and tbl_tip_ret5.periodo = aux.periodo");
            sql.append(String.format(" and tbl_tip_ret5.cod_indicador = '%s'", ParamIndicador.IND_RIESGO_ANTROPICO_TIPO_RETIRO_5));
            sql.append(" and tbl_tip_ret5.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_tip_ret5.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            // metros de retiro 5
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_mts_ret5 on tbl_mts_ret5.id_tnt = aux.id_tnt and tbl_mts_ret5.periodo = aux.periodo");
            sql.append(String.format(" and tbl_mts_ret5.cod_indicador = '%s'", ParamIndicador.IND_RIESGO_ANTROPICO_METROS_RETIRO_5));
            sql.append(" and tbl_mts_ret5.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_mts_ret5.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            //Condición de accesibilidad
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_accesibilidad on tbl_accesibilidad.id_tnt = aux.id_tnt and tbl_accesibilidad.periodo = aux.periodo");
            sql.append(String.format(" and tbl_accesibilidad.cod_indicador = '%s'", ParamIndicador.IND_ACCESIBILIDAD_CONDICION_ACCESIBILIDAD));
            sql.append(" and tbl_accesibilidad.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_accesibilidad.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            //etnias del predio
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) etnias on etnias.id_tnt = aux.id_tnt and etnias.periodo = aux.periodo");
            sql.append(String.format(" and etnias.cod_indicador = '%s'", ParamIndicador.IND_ETNIAS_PREDIO));
            sql.append(" and etnias.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and etnias.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
        } else {
            //No de Predios que presentan Riesgo   
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) total_predios_con_riesgo on total_predios_con_riesgo.id_tnt = aux.id_tnt and total_predios_con_riesgo.periodo = aux.periodo");
            sql.append(String.format(" and total_predios_con_riesgo.cod_indicador = '%s'", ParamIndicador.IND_RIESGO_ANTROPICO_NUMERO_PREDIOS_PRESENTAN_RIESGO));
            sql.append(" and total_predios_con_riesgo.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and total_predios_con_riesgo.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            //Total Predios que Presentan Riesgo    
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) total_predio on total_predio.id_tnt = aux.id_tnt and total_predio.periodo = aux.periodo");
            sql.append(String.format(" and total_predio.cod_indicador = '%s'", ParamIndicador.IND_TOTAL_PREDIOS));
            sql.append(" and total_predio.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and total_predio.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

        }
        //Poblacion Afectada
        sql.append(" left join (");
        sql.append(strSQLConsultarIndicador);
        sql.append(" ) poblacion_afectada on poblacion_afectada.id_tnt = aux.id_tnt and poblacion_afectada.periodo = aux.periodo");
        sql.append(String.format(" and poblacion_afectada.cod_indicador = '%s'", ParamIndicador.IND_RIESGO_ANTROPICO_POBLACION_AFECTADA));
        sql.append(" and poblacion_afectada.nivel_agrupamiento = ?nivel_agrupamiento");
        sql.append(" and poblacion_afectada.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

        //Poblacion Total
        sql.append(" left join (");
        sql.append(strSQLConsultarIndicador);
        sql.append(" ) poblacion_total on poblacion_total.id_tnt = aux.id_tnt and poblacion_total.periodo = aux.periodo");
        sql.append(String.format(" and poblacion_total.cod_indicador = '%s'", ParamIndicador.IND_TOTAL_POBLACION));
        sql.append(" and poblacion_total.nivel_agrupamiento = ?nivel_agrupamiento");
        sql.append(" and poblacion_total.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

// WHERE
        sql.append(" where aux.id_tnt = ?id_tnt and aux.periodo = ?periodo");
        if (filtro.isAgrupamientoPredio()) {
            sql.append(" and (tbl_tipo1.valor IS NOT NULL or");
            sql.append(" tbl_tipo2.valor IS NOT NULL or");
            sql.append(" tbl_tipo3.valor IS NOT NULL)");

            sql.append(" and n.principal_establecimiento = 1");
        }
        if (filtro.getIdNivel0() != null) {
            sql.append(" and n.id_nivel0 = ?id_nivel0");
        }
        if (filtro.getIdNivel1() != null) {
            sql.append(" and n.id_nivel1 = ?id_nivel1");
        }
        if (filtro.getIdNivel2() != null) {
            sql.append(" and n.id_nivel2 = ?id_nivel2");
        }
        if (filtro.getIdNivel3() != null) {
            sql.append(" and n.id_nivel3 = ?id_nivel3");
        }
        if (filtro.getIdNivel4() != null) {
            sql.append(" and n.id_nivel4 = ?id_nivel4");
        }
        if (filtro.getIdNivel5() != null) {
            sql.append(" and n.id_nivel5 = ?id_nivel5");
        }
        if (filtro.getIdEstablecimiento() != null) {
            sql.append(" and n.id_establecimiento = ?id_establecimiento");
        }
        if (filtro.getIdSede() != null) {
            sql.append(" and n.id_sede = ?id_sede");
        }
        if (filtro.getIdPredio() != null) {
            sql.append(" and n.id_predio = ?id_predio");
        }

        Query query = tpm.getEm().createNativeQuery(sql.toString());
        query.setParameter("id_tnt", tpm.getCurrentTenant());
        query.setParameter("periodo", filtro.getPeriodo());
        query.setParameter("idioma", filtro.getIdioma());
        query.setParameter("id_nivel0", filtro.getIdNivel0());
        query.setParameter("nivel_agrupamiento", filtro.getAgrupamiento());
        if (filtro.getIdNivel1() != null) {
            query.setParameter("id_nivel1", filtro.getIdNivel1());
        }
        if (filtro.getIdNivel2() != null) {
            query.setParameter("id_nivel2", filtro.getIdNivel2());
        }
        if (filtro.getIdNivel3() != null) {
            query.setParameter("id_nivel3", filtro.getIdNivel3());
        }
        if (filtro.getIdNivel4() != null) {
            query.setParameter("id_nivel4", filtro.getIdNivel4());
        }
        if (filtro.getIdNivel5() != null) {
            query.setParameter("id_nivel5", filtro.getIdNivel5());
        }
        if (filtro.getIdEstablecimiento() != null) {
            query.setParameter("id_establecimiento", filtro.getIdEstablecimiento());
        }
        if (filtro.getIdSede() != null) {
            query.setParameter("id_sede", filtro.getIdSede());
        }
        if (filtro.getIdPredio() != null) {
            query.setParameter("id_predio", filtro.getIdPredio());
        }
        return query.getResultList();
    }

    @Override
    public List<Object[]> consultarAccesibilidad(FiltroAmbitoAccesibilidad filtro) {
        if (filtro.isConsultaDeTiempoReal()) {
            if (ParamBaseDatos.ORACLE.equals(UtilProperties.getDbMotor())) {
                return this.consultarAccesibilidadTiempoRealOracle(filtro);
            } else {
                return this.consultarAccesibilidadTiempoRealPostgre(filtro);
            }

        } else {
            return consultarAccesibilidadIndicadores(filtro);
        }
    }

    private List<Object[]> consultarAccesibilidadTiempoRealPostgre(FiltroAmbitoAccesibilidad filtro) {
        String codInstrumento = this.consultarCodInstrumentoPorPeriodo(filtro.getPeriodo());
        StringBuilder sql = new StringBuilder();
        StringBuilder agrupamiento = new StringBuilder();
//SELECT
        sql.append(" select ");
        if (filtro.isAgrupamientoPredio()) {
            sql.append(" distinct ");
            sql.append(" n.codigo_nivel1,n.nombre_nivel1");
            sql.append(",n.codigo_nivel2,n.nombre_nivel2");
            sql.append(",n.codigo_nivel3,n.nombre_nivel3");
            sql.append(",n.codigo_nivel4,n.nombre_nivel4");
            sql.append(",n.codigo_nivel5,n.nombre_nivel5");
            sql.append(", n.codigo_establecimiento, n.nombre_establecimiento");
            sql.append(", n.codigo_sede, n.nombre_sede");
            sql.append(", n.codigo_predio, n.nombre_predio");

            // *indicadores           

            // Tipo de Acceso 1
            sql.append(" ,tbl_tipo1.tipo_acceso_1");
            // Condicion del Acceso 1
            sql.append(" ,tbl_tipo1.cond_acceso_1");

            // Tipo de Acceso 2
            sql.append(" ,tbl_tipo2.tipo_acceso_2");
            // Condicion del Acceso 2
            sql.append(" ,tbl_tipo2.cond_acceso_2");

            // Tipo de Acceso 3
            sql.append(" ,tbl_tipo3.tipo_acceso_3");
            // Condicion del Acceso 3
            sql.append(" ,tbl_tipo3.cond_acceso_3");

            // Tipo de Acceso 4
            sql.append(" ,tbl_tipo4.tipo_acceso_4");
            // Condicion del Acceso 4
            sql.append(" ,tbl_tipo4.cond_acceso_4");

            // Tipo de Acceso 5
            sql.append(" ,tbl_tipo5.tipo_acceso_5");
            // Condicion del Acceso 5
            sql.append(" ,tbl_tipo5.cond_acceso_5");

            // Numero de Medios de Trasporte para llegar al predio
            sql.append(" ,tbl_num_medios_transportes.num_medio_transporte");

            // Nro de acceso en condiciones 1 y 2
            sql.append(" ,coalesce(tbl_cond_1o2.nro_accesos_cond_1o2,'0')");

            // Condición de accesibilidad
            sql.append(" ,tbl_accesibilidad.accesibilidad");

            //*otros
            sql.append(" , n.direccion_predio direccion_predio, n.nombre_zona zona");
            sql.append(" , n.nombre_sector sector, n.nombre_clima clima");
            //etnias
            sql.append(" , etnias.etnias");
            //propiedad del predio
            sql.append(" , n.propiedad_predio");
            //numAccesos
            sql.append(" , case when tbl_tipo1.tipo_acceso_1 is null then 0 else 1 end");
            sql.append(" + case when tbl_tipo2.tipo_acceso_2 is null then 0 else 1 end");
            sql.append(" + case when tbl_tipo3.tipo_acceso_3 is null then 0 else 1 end");
            sql.append(" + case when tbl_tipo4.tipo_acceso_4 is null then 0 else 1 end");
            sql.append(" + case when tbl_tipo5.tipo_acceso_5 is null then 0 else 1 end");
            //controlVigilancia
            sql.append(", tbl_vulnerabilidad.vulnerabilidad");

        } else {
            if (filtro.isAgrupamientoNivel0()) {
                agrupamiento.append(" n.nombre_nivel0");
            }
            if (filtro.isAgrupamientoNivel1()) {
                agrupamiento.append(" n.codigo_nivel1,n.nombre_nivel1");
            }
            if (filtro.isAgrupamientoNivel2()) {
                agrupamiento.append("n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
            }
            if (filtro.isAgrupamientoNivel3()) {
                agrupamiento.append("n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
            }
            if (filtro.isAgrupamientoNivel4()) {
                agrupamiento.append("n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
            }
            if (filtro.isAgrupamientoNivel5()) {
                agrupamiento.append("n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
                agrupamiento.append(",n.codigo_nivel5,n.nombre_nivel5");
            }
            if (filtro.isAgrupamientoEstablecimiento()) {
                agrupamiento.append(" n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
                agrupamiento.append(",n.codigo_nivel5,n.nombre_nivel5");
                agrupamiento.append(", n.codigo_establecimiento, n.nombre_establecimiento");
            }
            if (filtro.isAgrupamientoSede()) {
                agrupamiento.append(" n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
                agrupamiento.append(",n.codigo_nivel5,n.nombre_nivel5");
                agrupamiento.append(", n.codigo_establecimiento, n.nombre_establecimiento");
                agrupamiento.append(", n.codigo_sede, n.nombre_sede");
            }

            // select
            sql.append(agrupamiento.toString());

            //No de predios con condiciones inadecuadas de accesibilidad
            sql.append(" ,count(tbl_predios_cond_inadecuada.id_dig_instrumento) numero_predio_condicion_inadecuada");

            //Total Predios
            sql.append(" ,sum(coalesce(tbl_total_predio.total,0)) total_predios");

            // Proporcion
            sql.append(" ,coalesce(count(tbl_predios_cond_inadecuada.id_dig_instrumento),0)/case when count(tbl_total_predio.total) = 0 then 1 else count(tbl_total_predio.total) end ::float proporcion");

            //Poblacion Afectada
            sql.append(" ,sum(coalesce(tbl_pob_afec.valor,0)) poblacion_afectada");

            //Poblacion Total
            sql.append(" ,sum(coalesce(tbl_pob_total.valor,0)) poblacion_total");

        }
// FROM 
        sql.append(" from cier.ind_auxiliar_indicador aux");
        sql.append(" inner join cier.ind_auxiliar_consultas n on n.id_predio = aux.id_predio and n.periodo = aux.periodo and n.id_tnt = aux.id_tnt");

        //filtros para Accesibilidad, por tipo de Medio transporte y/o condicion de Acceso
        StringBuilder filtroAcc = new StringBuilder();
        if (filtro.getCodCondicion() != null) {
            filtroAcc.append(" and dr1.valor = '");
            filtroAcc.append(filtro.getCodCondicion());
            filtroAcc.append("'");
        }
        if (filtro.getCodMedioTransporte() != null) {
            filtroAcc.append(" and drs1.valor = '");
            filtroAcc.append(filtro.getCodMedioTransporte());
            filtroAcc.append("'");
        }

        if (filtro.isAgrupamientoPredio()) {
            sql.append(" left join");
            sql.append(" (");
            String subquery_condicion_a1 = this.consultarFormulaSQLIndicador(ParamIndicador.IND_ACCESIBILIDAD_TIPO_ACCESO_1, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());
            subquery_condicion_a1 = subquery_condicion_a1.replace("'MTPLLP'", "'MTPLLP'" + filtroAcc.toString());
            sql.append(subquery_condicion_a1);
            sql.append(" ) as tbl_tipo1 on tbl_tipo1.id_dig_instrumento = aux.id_dig_instrumento and tbl_tipo1.id_predio = aux.id_predio");

            sql.append(" left join");
            sql.append(" (");
            String subquery_condicion_a2 = this.consultarFormulaSQLIndicador(ParamIndicador.IND_ACCESIBILIDAD_TIPO_ACCESO_2, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());
            subquery_condicion_a2 = subquery_condicion_a2.replace("'MTPLLP'", "'MTPLLP'" + filtroAcc.toString());
            sql.append(subquery_condicion_a2);
            sql.append(" ) as tbl_tipo2 on tbl_tipo2.id_dig_instrumento = aux.id_dig_instrumento and tbl_tipo2.id_predio = aux.id_predio");

            sql.append(" left join");
            sql.append(" (");
            String subquery_condicion_a3 = this.consultarFormulaSQLIndicador(ParamIndicador.IND_ACCESIBILIDAD_TIPO_ACCESO_3, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());
            subquery_condicion_a3 = subquery_condicion_a3.replace("'MTPLLP'", "'MTPLLP'" + filtroAcc.toString());
            sql.append(subquery_condicion_a3);
            sql.append(" ) as tbl_tipo3 on tbl_tipo3.id_dig_instrumento = aux.id_dig_instrumento and tbl_tipo3.id_predio = aux.id_predio");

            sql.append(" left join");
            sql.append(" (");
            String subquery_condicion_a4 = this.consultarFormulaSQLIndicador(ParamIndicador.IND_ACCESIBILIDAD_TIPO_ACCESO_4, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());
            subquery_condicion_a4 = subquery_condicion_a4.replace("'MTPLLP'", "'MTPLLP'" + filtroAcc.toString());
            sql.append(subquery_condicion_a4);
            sql.append(" ) as tbl_tipo4 on tbl_tipo4.id_dig_instrumento = aux.id_dig_instrumento and tbl_tipo4.id_predio = aux.id_predio");

            sql.append(" left join");
            sql.append(" (");
            String subquery_condicion_a5 = this.consultarFormulaSQLIndicador(ParamIndicador.IND_ACCESIBILIDAD_TIPO_ACCESO_5, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());
            subquery_condicion_a5 = subquery_condicion_a5.replace("'MTPLLP'", "'MTPLLP'" + filtroAcc.toString());
            sql.append(subquery_condicion_a5);
            sql.append(" ) as tbl_tipo5 on tbl_tipo5.id_dig_instrumento = aux.id_dig_instrumento and tbl_tipo5.id_predio = aux.id_predio");

            sql.append(" left join");
            sql.append(" (");
            String subquery_numMedTra = this.consultarFormulaSQLIndicador(ParamIndicador.IND_ACCESIBILIDAD_NUMERO_MEDIOS_TRANSPORTES, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());
            subquery_numMedTra = subquery_numMedTra.replace("'TIP_RESP_018'", "'TIP_RESP_018'" + filtroAcc.toString());
            sql.append(subquery_numMedTra);
            sql.append(" ) as tbl_num_medios_transportes on tbl_num_medios_transportes.id_dig_instrumento = aux.id_dig_instrumento and tbl_num_medios_transportes.id_predio = aux.id_predio");

            sql.append(" left join");
            sql.append(" (");
            String subquery_cond1o2 = this.consultarFormulaSQLIndicador(ParamIndicador.IND_ACCESIBILIDAD_NUMERO_ACCESOS_CONDICION_1_2, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());
            subquery_cond1o2 = subquery_cond1o2.replace("'MTPLLP'", "'MTPLLP'" + filtroAcc.toString());
            sql.append(subquery_cond1o2);
            sql.append(" ) as tbl_cond_1o2 on tbl_cond_1o2.id_dig_instrumento = aux.id_dig_instrumento and tbl_cond_1o2.id_predio = aux.id_predio");

            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ETNIAS_PREDIO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) as etnias on etnias.id_dig_instrumento = aux.id_dig_instrumento and etnias.id_predio = aux.id_predio");

            sql.append(" inner join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ACCESIBILIDAD_CONDICION_ACCESIBILIDAD, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) as tbl_accesibilidad");
            sql.append(" on tbl_accesibilidad.id_dig_instrumento = aux.id_dig_instrumento and tbl_accesibilidad.id_predio = aux.id_predio");

            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_CONTROL_VIGILANCIA_VULNERABILIDAD, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append("\n ) as tbl_vulnerabilidad on tbl_vulnerabilidad.id_dig_instrumento = aux.id_dig_instrumento and tbl_vulnerabilidad.id_predio = aux.id_predio");
        } else {
            sql.append(" left join");
            sql.append(" (");
            String subquery_predIna = this.consultarFormulaSQLIndicador(ParamIndicador.IND_ACCESIBILIDAD_NUMERO_PREDIOS_CONDICION_INADECUADA, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());
            subquery_predIna = subquery_predIna.replace("'MTPLLP'", "'MTPLLP'" + filtroAcc.toString());
            sql.append(subquery_predIna);
            sql.append(" ) tbl_predios_cond_inadecuada on tbl_predios_cond_inadecuada.id_dig_instrumento = aux.id_dig_instrumento and tbl_predios_cond_inadecuada.id_predio = aux.id_predio");

            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_TOTAL_PREDIOS, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) as tbl_total_predio on tbl_total_predio.id_dig_instrumento = aux.id_dig_instrumento and tbl_total_predio.id_predio = aux.id_predio");

            sql.append(" left join");
            sql.append(" (");
            String subquery_pobAfec = this.consultarFormulaSQLIndicador(ParamIndicador.IND_ACCESIBILIDAD_POBLACION_AFECTADA, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());
            subquery_pobAfec = subquery_pobAfec.replace("'MTPLLP'", "'MTPLLP'" + filtroAcc.toString());
            sql.append(subquery_pobAfec);
            sql.append(" ) tbl_pob_afec on tbl_pob_afec.id_dig_instrumento = aux.id_dig_instrumento and tbl_pob_afec.id_predio = aux.id_predio");

            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_TOTAL_POBLACION, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) tbl_pob_total on tbl_pob_total.id_dig_instrumento = aux.id_dig_instrumento and tbl_pob_total.id_predio = aux.id_predio");
        }

// WHERE
        sql.append(" where aux.id_tnt = ?1 and aux.periodo = ?2");

        if (filtro.isAgrupamientoPredio()) {
            if (filtro.getCodMedioTransporte() != null || filtro.getCodCondicion() != null) {
                sql.append(" and (tbl_tipo1.tipo_acceso_1 IS NOT NULL or");
                sql.append(" tbl_tipo2.tipo_acceso_2 IS NOT NULL or");
                sql.append(" tbl_tipo3.tipo_acceso_3 IS NOT NULL or");
                sql.append(" tbl_tipo4.tipo_acceso_4 IS NOT NULL or");
                sql.append(" tbl_tipo5.tipo_acceso_5 IS NOT NULL)");
            }
            sql.append(" and n.principal_establecimiento = 1");
        }
        if (filtro.getIdNivel0() != null) {
            sql.append(" and n.id_nivel0 = ?3");
        }
        if (filtro.getIdNivel1() != null) {
            sql.append(" and n.id_nivel1 = ?4");
        }
        if (filtro.getIdNivel2() != null) {
            sql.append(" and n.id_nivel2 = ?5");
        }
        if (filtro.getIdNivel3() != null) {
            sql.append(" and n.id_nivel3 = ?6");
        }
        if (filtro.getIdNivel4() != null) {
            sql.append(" and n.id_nivel4 = ?7");
        }
        if (filtro.getIdNivel5() != null) {
            sql.append(" and n.id_nivel5 = ?8");
        }
        if (filtro.getIdEstablecimiento() != null) {
            sql.append(" and n.id_establecimiento = ?9");
        }
        if (filtro.getIdSede() != null) {
            sql.append(" and n.id_sede = ?10");
        }
        if (filtro.getIdPredio() != null) {
            sql.append(" and n.id_predio = ?11");
        }
        // otros filtros
        if (filtro.getCodZona() != null) {
            sql.append(" and n.codigo_zona = ?12");
        }
        if (filtro.getCodSector() != null) {
            sql.append(" and n.codigo_sector = ?13");
        }

        // GROUP BY 
        if (!filtro.isAgrupamientoPredio()) {
            sql.append(" group by ");
            sql.append(agrupamiento.toString());
        }

        String auxSql = sql.toString();
        auxSql = auxSql.replaceAll("\\?start", "");
        auxSql = auxSql.replaceAll("\\?end", "");

        Query query = tpm.getEm().createNativeQuery(auxSql);
        query.setParameter(1, tpm.getCurrentTenant());
        query.setParameter(2, filtro.getPeriodo());
        query.setParameter(3, filtro.getIdNivel0());
        if (filtro.getIdNivel1() != null) {
            query.setParameter(4, filtro.getIdNivel1());
        }
        if (filtro.getIdNivel2() != null) {
            query.setParameter(5, filtro.getIdNivel2());
        }
        if (filtro.getIdNivel3() != null) {
            query.setParameter(6, filtro.getIdNivel3());
        }
        if (filtro.getIdNivel4() != null) {
            query.setParameter(7, filtro.getIdNivel4());
        }
        if (filtro.getIdNivel5() != null) {
            query.setParameter(8, filtro.getIdNivel5());
        }
        if (filtro.getIdEstablecimiento() != null) {
            query.setParameter(9, filtro.getIdEstablecimiento());
        }
        if (filtro.getIdSede() != null) {
            query.setParameter(10, filtro.getIdSede());
        }
        if (filtro.getIdPredio() != null) {
            query.setParameter(11, filtro.getIdPredio());
        }
        // otros filtros
        if (filtro.getCodZona() != null) {
            query.setParameter(12, filtro.getCodZona());
        }
        if (filtro.getCodSector() != null) {
            query.setParameter(13, filtro.getCodSector());
        }


        return query.getResultList();
    }

    private List<Object[]> consultarAccesibilidadTiempoRealOracle(FiltroAmbitoAccesibilidad filtro) {
        String codInstrumento = this.consultarCodInstrumentoPorPeriodo(filtro.getPeriodo());
        StringBuilder sql = new StringBuilder();
        StringBuilder agrupamiento = new StringBuilder();
        String funcion = "";
        if (ParamBaseDatos.ORACLE.equals(UtilProperties.getDbMotor())) {
            funcion = "nvl";
        } else {
            funcion = "coalesce";
        }
//SELECT
        sql.append(" select ");
        if (filtro.isAgrupamientoPredio()) {
            sql.append(" distinct ");
            sql.append(" n.codigo_nivel1,n.nombre_nivel1");
            sql.append(",n.codigo_nivel2,n.nombre_nivel2");
            sql.append(",n.codigo_nivel3,n.nombre_nivel3");
            sql.append(",n.codigo_nivel4,n.nombre_nivel4");
            sql.append(",n.codigo_nivel5,n.nombre_nivel5");
            sql.append(", n.codigo_establecimiento, n.nombre_establecimiento");
            sql.append(", n.codigo_sede, n.nombre_sede");
            sql.append(", n.codigo_predio, n.nombre_predio");

            // *indicadores           

            // Tipo de Acceso 1
            sql.append(" ,tbl_tipo1.tipo_acceso_1");
            // Condicion del Acceso 1
            sql.append(" ,tbl_tipo1.cond_acceso_1");

            // Tipo de Acceso 2
            sql.append(" ,tbl_tipo2.tipo_acceso_2");
            // Condicion del Acceso 2
            sql.append(" ,tbl_tipo2.cond_acceso_2");

            // Tipo de Acceso 3
            sql.append(" ,tbl_tipo3.tipo_acceso_3");
            // Condicion del Acceso 3
            sql.append(" ,tbl_tipo3.cond_acceso_3");

            // Tipo de Acceso 4
            sql.append(" ,tbl_tipo4.tipo_acceso_4");
            // Condicion del Acceso 4
            sql.append(" ,tbl_tipo4.cond_acceso_4");

            // Tipo de Acceso 5
            sql.append(" ,tbl_tipo5.tipo_acceso_5");
            // Condicion del Acceso 5
            sql.append(" ,tbl_tipo5.cond_acceso_5");

            // Numero de Medios de Trasporte para llegar al predio
            sql.append(" ,tbl_num_medio_transporte.num_medio_transporte");

            // Nro de acceso en condiciones 1 y 2
            sql.append(" ,").append(funcion).append("(tbl_cond_1o2.nro_accesos_cond_1o2,0)");

            // Condición de accesibilidad
            sql.append(" ,tbl_accesibilidad.accesibilidad");

            //*otros
            sql.append(" , n.direccion_predio direccion_predio, n.nombre_zona zona");
            sql.append(" , n.nombre_sector sector, n.nombre_clima clima");
            //etnias
            sql.append(" , etnias.etnias");
            //propiedad del predio
            sql.append(" , n.propiedad_predio");
            //numAccesos
            sql.append(" , case when tbl_tipo1.tipo_acceso_1 is null then 0 else 1 end");
            sql.append(" + case when tbl_tipo2.tipo_acceso_2 is null then 0 else 1 end");
            sql.append(" + case when tbl_tipo3.tipo_acceso_3 is null then 0 else 1 end");
            sql.append(" + case when tbl_tipo4.tipo_acceso_4 is null then 0 else 1 end");
            sql.append(" + case when tbl_tipo5.tipo_acceso_5 is null then 0 else 1 end");
            //controlVigilancia
            sql.append(", tbl_vulnerabilidad.vulnerabilidad");

        } else {
            if (filtro.isAgrupamientoNivel0()) {
                agrupamiento.append(" n.nombre_nivel0");
            }
            if (filtro.isAgrupamientoNivel1()) {
                agrupamiento.append(" n.codigo_nivel1,n.nombre_nivel1");
            }
            if (filtro.isAgrupamientoNivel2()) {
                agrupamiento.append("n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
            }
            if (filtro.isAgrupamientoNivel3()) {
                agrupamiento.append("n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
            }
            if (filtro.isAgrupamientoNivel4()) {
                agrupamiento.append("n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
            }
            if (filtro.isAgrupamientoNivel5()) {
                agrupamiento.append("n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
                agrupamiento.append(",n.codigo_nivel5,n.nombre_nivel5");
            }
            if (filtro.isAgrupamientoEstablecimiento()) {
                agrupamiento.append(" n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
                agrupamiento.append(",n.codigo_nivel5,n.nombre_nivel5");
                agrupamiento.append(", n.codigo_establecimiento, n.nombre_establecimiento");
            }
            if (filtro.isAgrupamientoSede()) {
                agrupamiento.append(" n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
                agrupamiento.append(",n.codigo_nivel5,n.nombre_nivel5");
                agrupamiento.append(", n.codigo_establecimiento, n.nombre_establecimiento");
                agrupamiento.append(", n.codigo_sede, n.nombre_sede");
            }

            // select
            sql.append(agrupamiento.toString());

            //No de predios con condiciones inadecuadas de accesibilidad
            sql.append(" ,count(tbl_predios_cond_inadecuada.id_predio) num_pre_cond_inadecuada");

            //Total Predios
            sql.append(" ,sum(").append(funcion).append("(tbl_total_predio.total,0)) total_predios");

            // Proporcion
            sql.append(" ,").append(funcion).append("(count(tbl_predios_cond_inadecuada.id_predio),0)/case when count(tbl_total_predio.total) = 0 then 1 else count(tbl_total_predio.total) end  proporcion");

            //Poblacion Afectada
            sql.append(" ,sum(").append(funcion).append("(tbl_pob_afec.valor,0)) poblacion_afectada");

            //Poblacion Total
            sql.append(" ,sum(").append(funcion).append("(tbl_pob_total.valor,0)) poblacion_total");

        }
// FROM 
        sql.append(" from ind_auxiliar_indicador aux");
        sql.append(" inner join ind_auxiliar_consultas n on n.id_predio = aux.id_predio and n.periodo = aux.periodo and n.id_tnt = aux.id_tnt");

        //filtros para Accesibilidad, por tipo de Medio transporte y/o condicion de Acceso
        StringBuilder filtroAcc = new StringBuilder();

        if (filtro.isAgrupamientoPredio()) {
            sql.append(" left join");
            sql.append(" (");
            String subquery_condicion_a1 = this.consultarFormulaSQLIndicador(ParamIndicador.IND_ACCESIBILIDAD_TIPO_ACCESO_1, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());
            filtroAcc = new StringBuilder();
            if (filtro.getCodCondicion() != null) {
                filtroAcc.append(" and RESP_045_02 = ");
                filtroAcc.append(filtro.getCodCondicion());
            }
            if (filtro.getCodMedioTransporte() != null) {
                filtroAcc.append(" and (");
                filtroAcc.append(" RESP_047_01 = ");
                filtroAcc.append(filtro.getCodMedioTransporte());
                filtroAcc.append(" or RESP_047_02 = ");
                filtroAcc.append(filtro.getCodMedioTransporte());
                filtroAcc.append(" or RESP_047_03 = ");
                filtroAcc.append(filtro.getCodMedioTransporte());
                filtroAcc.append(" or RESP_047_04 = ");
                filtroAcc.append(filtro.getCodMedioTransporte());
                filtroAcc.append(" or RESP_047_05 = ");
                filtroAcc.append(filtro.getCodMedioTransporte());
                filtroAcc.append(" or RESP_047_06 = ");
                filtroAcc.append(filtro.getCodMedioTransporte());
                filtroAcc.append(")");
            }
            subquery_condicion_a1 = subquery_condicion_a1.replace("--filtro", filtroAcc.toString());
            sql.append(subquery_condicion_a1);
            sql.append(" ) tbl_tipo1 on tbl_tipo1.id_predio = aux.id_predio");

            sql.append(" left join");
            sql.append(" (");
            String subquery_condicion_a2 = this.consultarFormulaSQLIndicador(ParamIndicador.IND_ACCESIBILIDAD_TIPO_ACCESO_2, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());
            filtroAcc = new StringBuilder();
            if (filtro.getCodCondicion() != null) {
                filtroAcc.append(" and RESP_045_04 = ");
                filtroAcc.append(filtro.getCodCondicion());
            }
            if (filtro.getCodMedioTransporte() != null) {
                filtroAcc.append(" and (");
                filtroAcc.append(" RESP_047_01 = ");
                filtroAcc.append(filtro.getCodMedioTransporte());
                filtroAcc.append(" or RESP_047_02 = ");
                filtroAcc.append(filtro.getCodMedioTransporte());
                filtroAcc.append(" or RESP_047_03 = ");
                filtroAcc.append(filtro.getCodMedioTransporte());
                filtroAcc.append(" or RESP_047_04 = ");
                filtroAcc.append(filtro.getCodMedioTransporte());
                filtroAcc.append(" or RESP_047_05 = ");
                filtroAcc.append(filtro.getCodMedioTransporte());
                filtroAcc.append(" or RESP_047_06 = ");
                filtroAcc.append(filtro.getCodMedioTransporte());
                filtroAcc.append(")");
            }
            subquery_condicion_a2 = subquery_condicion_a2.replace("--filtro", filtroAcc.toString());
            sql.append(subquery_condicion_a2);
            sql.append(" ) tbl_tipo2 on tbl_tipo2.id_predio = aux.id_predio");

            sql.append(" left join");
            sql.append(" (");
            String subquery_condicion_a3 = this.consultarFormulaSQLIndicador(ParamIndicador.IND_ACCESIBILIDAD_TIPO_ACCESO_3, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());
            filtroAcc = new StringBuilder();
            if (filtro.getCodCondicion() != null) {
                filtroAcc.append(" and RESP_045_06 = ");
                filtroAcc.append(filtro.getCodCondicion());
            }
            if (filtro.getCodMedioTransporte() != null) {
                filtroAcc.append(" and (");
                filtroAcc.append(" RESP_047_01 = ");
                filtroAcc.append(filtro.getCodMedioTransporte());
                filtroAcc.append(" or RESP_047_02 = ");
                filtroAcc.append(filtro.getCodMedioTransporte());
                filtroAcc.append(" or RESP_047_03 = ");
                filtroAcc.append(filtro.getCodMedioTransporte());
                filtroAcc.append(" or RESP_047_04 = ");
                filtroAcc.append(filtro.getCodMedioTransporte());
                filtroAcc.append(" or RESP_047_05 = ");
                filtroAcc.append(filtro.getCodMedioTransporte());
                filtroAcc.append(" or RESP_047_06 = ");
                filtroAcc.append(filtro.getCodMedioTransporte());
                filtroAcc.append(")");
            }
            subquery_condicion_a3 = subquery_condicion_a3.replace("--filtro", filtroAcc.toString());
            sql.append(subquery_condicion_a3);
            sql.append(" ) tbl_tipo3 on tbl_tipo3.id_predio = aux.id_predio");

            sql.append(" left join");
            sql.append(" (");
            String subquery_condicion_a4 = this.consultarFormulaSQLIndicador(ParamIndicador.IND_ACCESIBILIDAD_TIPO_ACCESO_4, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());
            filtroAcc = new StringBuilder();
            if (filtro.getCodCondicion() != null) {
                filtroAcc.append(" and RESP_045_08 = ");
                filtroAcc.append(filtro.getCodCondicion());
            }
            if (filtro.getCodMedioTransporte() != null) {
                filtroAcc.append(" and (");
                filtroAcc.append(" RESP_047_01 = ");
                filtroAcc.append(filtro.getCodMedioTransporte());
                filtroAcc.append(" or RESP_047_02 = ");
                filtroAcc.append(filtro.getCodMedioTransporte());
                filtroAcc.append(" or RESP_047_03 = ");
                filtroAcc.append(filtro.getCodMedioTransporte());
                filtroAcc.append(" or RESP_047_04 = ");
                filtroAcc.append(filtro.getCodMedioTransporte());
                filtroAcc.append(" or RESP_047_05 = ");
                filtroAcc.append(filtro.getCodMedioTransporte());
                filtroAcc.append(" or RESP_047_06 = ");
                filtroAcc.append(filtro.getCodMedioTransporte());
                filtroAcc.append(")");
            }
            subquery_condicion_a4 = subquery_condicion_a4.replace("--filtro", filtroAcc.toString());
            sql.append(subquery_condicion_a4);
            sql.append(" ) tbl_tipo4 on tbl_tipo4.id_predio = aux.id_predio");

            sql.append(" left join");
            sql.append(" (");
            String subquery_condicion_a5 = this.consultarFormulaSQLIndicador(ParamIndicador.IND_ACCESIBILIDAD_TIPO_ACCESO_5, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());
            filtroAcc = new StringBuilder();
            if (filtro.getCodCondicion() != null) {
                filtroAcc.append(" and RESP_045_10 = ");
                filtroAcc.append(filtro.getCodCondicion());
            }
            if (filtro.getCodMedioTransporte() != null) {
                filtroAcc.append(" and (");
                filtroAcc.append(" RESP_047_01 = ");
                filtroAcc.append(filtro.getCodMedioTransporte());
                filtroAcc.append(" or RESP_047_02 = ");
                filtroAcc.append(filtro.getCodMedioTransporte());
                filtroAcc.append(" or RESP_047_03 = ");
                filtroAcc.append(filtro.getCodMedioTransporte());
                filtroAcc.append(" or RESP_047_04 = ");
                filtroAcc.append(filtro.getCodMedioTransporte());
                filtroAcc.append(" or RESP_047_05 = ");
                filtroAcc.append(filtro.getCodMedioTransporte());
                filtroAcc.append(" or RESP_047_06 = ");
                filtroAcc.append(filtro.getCodMedioTransporte());
                filtroAcc.append(")");
            }
            subquery_condicion_a5 = subquery_condicion_a5.replace("--filtro", filtroAcc.toString());
            sql.append(subquery_condicion_a5);
            sql.append(" ) tbl_tipo5 on tbl_tipo5.id_predio = aux.id_predio");

            filtroAcc = new StringBuilder();
            if (filtro.getCodCondicion() != null) {
                filtroAcc.append(" and (");
                filtroAcc.append(" RESP_045_02 = ");
                filtroAcc.append(filtro.getCodCondicion());
                filtroAcc.append(" or RESP_045_04 = ");
                filtroAcc.append(filtro.getCodCondicion());
                filtroAcc.append(" or RESP_045_06 = ");
                filtroAcc.append(filtro.getCodCondicion());
                filtroAcc.append(" or RESP_045_08 = ");
                filtroAcc.append(filtro.getCodCondicion());
                filtroAcc.append(" or RESP_045_10 = ");
                filtroAcc.append(filtro.getCodCondicion());
                filtroAcc.append(")");
            }
            if (filtro.getCodMedioTransporte() != null) {
                filtroAcc.append(" and (");
                filtroAcc.append(" RESP_047_01 = ");
                filtroAcc.append(filtro.getCodMedioTransporte());
                filtroAcc.append(" or RESP_047_02 = ");
                filtroAcc.append(filtro.getCodMedioTransporte());
                filtroAcc.append(" or RESP_047_03 = ");
                filtroAcc.append(filtro.getCodMedioTransporte());
                filtroAcc.append(" or RESP_047_04 = ");
                filtroAcc.append(filtro.getCodMedioTransporte());
                filtroAcc.append(" or RESP_047_05 = ");
                filtroAcc.append(filtro.getCodMedioTransporte());
                filtroAcc.append(" or RESP_047_06 = ");
                filtroAcc.append(filtro.getCodMedioTransporte());
                filtroAcc.append(")");
            }

            sql.append(" left join");
            sql.append(" (");
            String subquery_numMedTra = this.consultarFormulaSQLIndicador(ParamIndicador.IND_ACCESIBILIDAD_NUMERO_MEDIOS_TRANSPORTES, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());
            subquery_numMedTra = subquery_numMedTra.replace("--filtro", filtroAcc.toString());
            sql.append(subquery_numMedTra);
            sql.append(" ) tbl_num_medio_transporte on tbl_num_medio_transporte.id_predio = aux.id_predio");

            sql.append(" left join");
            sql.append(" (");
            String subquery_cond1o2 = this.consultarFormulaSQLIndicador(ParamIndicador.IND_ACCESIBILIDAD_NUMERO_ACCESOS_CONDICION_1_2, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());
            subquery_cond1o2 = subquery_cond1o2.replace("--filtro", filtroAcc.toString());
            sql.append(subquery_cond1o2);
            sql.append(" ) tbl_cond_1o2 on tbl_cond_1o2.id_predio = aux.id_predio");

            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ETNIAS_PREDIO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) etnias on etnias.id_predio = aux.id_predio");

            sql.append(" inner join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ACCESIBILIDAD_CONDICION_ACCESIBILIDAD, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) tbl_accesibilidad");
            sql.append(" on tbl_accesibilidad.id_predio = aux.id_predio");

            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_CONTROL_VIGILANCIA_VULNERABILIDAD, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append("\n ) tbl_vulnerabilidad on tbl_vulnerabilidad.id_predio = aux.id_predio");
        } else {
            sql.append(" left join");
            sql.append(" (");
            String subquery_predIna = this.consultarFormulaSQLIndicador(ParamIndicador.IND_ACCESIBILIDAD_NUMERO_PREDIOS_CONDICION_INADECUADA, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());
            subquery_predIna = subquery_predIna.replace("--filtro", filtroAcc.toString());
            sql.append(subquery_predIna);
            sql.append(" ) tbl_predios_cond_inadecuada on tbl_predios_cond_inadecuada.id_predio = aux.id_predio");

            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_TOTAL_PREDIOS, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) tbl_total_predio on tbl_total_predio.id_predio = aux.id_predio");

            sql.append(" left join");
            sql.append(" (");
            String subquery_pobAfec = this.consultarFormulaSQLIndicador(ParamIndicador.IND_ACCESIBILIDAD_POBLACION_AFECTADA, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());
            subquery_pobAfec = subquery_pobAfec.replace("--filtro", filtroAcc.toString());
            sql.append(subquery_pobAfec);
            sql.append(" ) tbl_pob_afec on tbl_pob_afec.id_predio = aux.id_predio");

            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_TOTAL_POBLACION, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) tbl_pob_total on tbl_pob_total.id_predio = aux.id_predio");
        }

// WHERE
        sql.append(" where aux.id_tnt = ?1 and aux.periodo = ?2");

        if (filtro.isAgrupamientoPredio()) {
            if (filtro.getCodMedioTransporte() != null || filtro.getCodCondicion() != null) {
                sql.append(" and (tbl_tipo1.tipo_acceso_1 IS NOT NULL or");
                sql.append(" tbl_tipo2.tipo_acceso_2 IS NOT NULL or");
                sql.append(" tbl_tipo3.tipo_acceso_3 IS NOT NULL or");
                sql.append(" tbl_tipo4.tipo_acceso_4 IS NOT NULL or");
                sql.append(" tbl_tipo5.tipo_acceso_5 IS NOT NULL)");
            }
            sql.append(" and n.principal_establecimiento = 1");
        }
        if (filtro.getIdNivel0() != null) {
            sql.append(" and n.id_nivel0 = ?3");
        }
        if (filtro.getIdNivel1() != null) {
            sql.append(" and n.id_nivel1 = ?4");
        }
        if (filtro.getIdNivel2() != null) {
            sql.append(" and n.id_nivel2 = ?5");
        }
        if (filtro.getIdNivel3() != null) {
            sql.append(" and n.id_nivel3 = ?6");
        }
        if (filtro.getIdNivel4() != null) {
            sql.append(" and n.id_nivel4 = ?7");
        }
        if (filtro.getIdNivel5() != null) {
            sql.append(" and n.id_nivel5 = ?8");
        }
        if (filtro.getIdEstablecimiento() != null) {
            sql.append(" and n.id_establecimiento = ?9");
        }
        if (filtro.getIdSede() != null) {
            sql.append(" and n.id_sede = ?10");
        }
        if (filtro.getIdPredio() != null) {
            sql.append(" and n.id_predio = ?11");
        }
        // otros filtros
        if (filtro.getCodZona() != null) {
            sql.append(" and n.codigo_zona = ?12");
        }
        if (filtro.getCodSector() != null) {
            sql.append(" and n.codigo_sector = ?13");
        }

        // GROUP BY 
        if (!filtro.isAgrupamientoPredio()) {
            sql.append(" group by ");
            sql.append(agrupamiento.toString());
        }

        Query query = tpm.getEm().createNativeQuery(sql.toString());
        query.setParameter(1, tpm.getCurrentTenant());
        query.setParameter(2, filtro.getPeriodo());
        query.setParameter(3, filtro.getIdNivel0());
        if (filtro.getIdNivel1() != null) {
            query.setParameter(4, filtro.getIdNivel1());
        }
        if (filtro.getIdNivel2() != null) {
            query.setParameter(5, filtro.getIdNivel2());
        }
        if (filtro.getIdNivel3() != null) {
            query.setParameter(6, filtro.getIdNivel3());
        }
        if (filtro.getIdNivel4() != null) {
            query.setParameter(7, filtro.getIdNivel4());
        }
        if (filtro.getIdNivel5() != null) {
            query.setParameter(8, filtro.getIdNivel5());
        }
        if (filtro.getIdEstablecimiento() != null) {
            query.setParameter(9, filtro.getIdEstablecimiento());
        }
        if (filtro.getIdSede() != null) {
            query.setParameter(10, filtro.getIdSede());
        }
        if (filtro.getIdPredio() != null) {
            query.setParameter(11, filtro.getIdPredio());
        }
        // otros filtros
        if (filtro.getCodZona() != null) {
            query.setParameter(12, filtro.getCodZona());
        }
        if (filtro.getCodSector() != null) {
            query.setParameter(13, filtro.getCodSector());
        }


        return query.getResultList();
    }

    private List<Object[]> consultarAccesibilidadIndicadores(FiltroAmbitoAccesibilidad filtro) {
        StringBuilder sql = new StringBuilder();
// consulta por nivel de agrupamiento superior a predio
// SELECT
        sql.append(" select distinct ");
        if (filtro.isAgrupamientoPredio()) {
            sql.append(" n.codigo_nivel1,n.nombre_nivel1");
            sql.append(",n.codigo_nivel2,n.nombre_nivel2");
            sql.append(",n.codigo_nivel3,n.nombre_nivel3");
            sql.append(",n.codigo_nivel4,n.nombre_nivel4");
            sql.append(",n.codigo_nivel5,n.nombre_nivel5");
            sql.append(", n.codigo_establecimiento, n.nombre_establecimiento");
            sql.append(", n.codigo_sede, n.nombre_sede");
            sql.append(", n.codigo_predio, n.nombre_predio");

            // *indicadores           

            // Tipo de Acceso 1
            sql.append(" ,tbl_tipo1.valor");
            // Condicion de Acceso 1
            sql.append(" ,tbl_cond1.valor");

            // Tipo de Acceso 2
            sql.append(" ,tbl_tipo2.valor");
            // Condicion de Acceso 2
            sql.append(" ,tbl_cond2.valor");

            // Tipo de Acceso 3
            sql.append(" ,tbl_tipo3.valor");
            // Condicion de Acceso 3
            sql.append(" ,tbl_cond3.valor");

            // Tipo de Acceso 4
            sql.append(" ,tbl_tipo4.valor");
            // Condicion de Acceso 4
            sql.append(" ,tbl_cond4.valor");

            // Tipo de Acceso 5
            sql.append(" ,tbl_tipo5.valor");
            // Condicion de Acceso 5
            sql.append(" ,tbl_cond5.valor");

            // Numero de Medios de Trasporte para llegar al predio
            sql.append(" ,tbl_num_medio_transporte.valor");

            // Nro de acceso en condiciones 1 y 2
            sql.append(" ,coalesce(tbl_cond_1o2.valor,'0')");

            // Condición de accesibilidad
            sql.append(" ,tbl_accesibilidad.valor");

            //*otros
            sql.append(" , n.direccion_predio direccion_predio, n.nombre_zona zona");
            sql.append(" , n.nombre_sector sector, n.nombre_clima clima");
            //etnias
            sql.append(" , etnias.valor");
            //propiedad del predio
            sql.append(" , n.propiedad_predio");

            //numAccesos
            sql.append(" , case when tbl_tipo1.valor is null then 0 else 1 end");
            sql.append(" + case when tbl_tipo2.valor is null then 0 else 1 end");
            sql.append(" + case when tbl_tipo3.valor is null then 0 else 1 end");
            sql.append(" + case when tbl_tipo4.valor is null then 0 else 1 end");
            sql.append(" + case when tbl_tipo5.valor is null then 0 else 1 end");
            //controlVigilancia
            sql.append(", tbl_vulnerabilidad.valor");
        } else {
            if (filtro.isAgrupamientoNivel0()) {
                sql.append(" n.nombre_nivel0");
            }
            if (filtro.isAgrupamientoNivel1()) {
                sql.append(" n.codigo_nivel1,n.nombre_nivel1");
            }
            if (filtro.isAgrupamientoNivel2()) {
                sql.append("n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
            }
            if (filtro.isAgrupamientoNivel3()) {
                sql.append("n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
            }
            if (filtro.isAgrupamientoNivel4()) {
                sql.append("n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
                sql.append(",n.codigo_nivel4,n.nombre_nivel4");
            }
            if (filtro.isAgrupamientoNivel5()) {
                sql.append("n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
                sql.append(",n.codigo_nivel4,n.nombre_nivel4");
                sql.append(",n.codigo_nivel5,n.nombre_nivel5");
            }
            if (filtro.isAgrupamientoEstablecimiento()) {
                sql.append(" n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
                sql.append(",n.codigo_nivel4,n.nombre_nivel4");
                sql.append(",n.codigo_nivel5,n.nombre_nivel5");
                sql.append(" ,n.codigo_establecimiento, n.nombre_establecimiento");
            }
            if (filtro.isAgrupamientoSede()) {
                sql.append(" n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
                sql.append(",n.codigo_nivel4,n.nombre_nivel4");
                sql.append(",n.codigo_nivel5,n.nombre_nivel5");
                sql.append(" ,n.codigo_establecimiento, n.nombre_establecimiento");
                sql.append(" ,n.codigo_sede, n.nombre_sede");
            }
            //# de predios que no cuenta con al menos un acceso en buenas condiciones
            sql.append(" ,coalesce(tbl_predios_cond_inadecuada.valor,'0')");

            //Total Predios
            sql.append(" ,total_predio.valor");

            // Porcion por Condicion
            sql.append(" ,to_number(coalesce(tbl_predios_cond_inadecuada.valor,'0'),'9999999')/to_number(case when total_predio.valor = '0' then '1' else total_predio.valor end ,'9999999') porcion_condicion");

            //Poblacion Afectada
            sql.append(" ,coalesce(poblacion_afectada.valor,'0')");

            //Poblacion Total
            sql.append(" ,coalesce(poblacion_total.valor,'0')");
        }
// FROM 
        sql.append(" from ind_auxiliar_indicador aux");
        sql.append(" inner join ind_auxiliar_consultas n on n.id_predio = aux.id_predio and n.periodo = aux.periodo and n.id_tnt = aux.id_tnt");

        String strSQLNivelAgrupamiento = this.getSQLNivelAgrupamiento(filtro);
        String strSQLConsultarIndicador = this.getSQLConsultarIndicadorAlmacenado();

        if (filtro.isAgrupamientoPredio()) {
            // tipo de Acceso 1
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_tipo1 on tbl_tipo1.id_tnt = aux.id_tnt and tbl_tipo1.periodo = aux.periodo");
            sql.append(String.format(" and tbl_tipo1.cod_indicador = '%s'", ParamIndicador.IND_ACCESIBILIDAD_TIPO_ACCESO_1));
            sql.append(" and tbl_tipo1.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_tipo1.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            // condicion de Acceso 1
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_cond1 on tbl_cond1.id_tnt = aux.id_tnt and tbl_cond1.periodo = aux.periodo");
            sql.append(String.format(" and tbl_cond1.cod_indicador = '%s'", ParamIndicador.IND_ACCESIBILIDAD_CONDICION_ACCESO_1));
            sql.append(" and tbl_cond1.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_cond1.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            // tipo de Acceso 2
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_tipo2 on tbl_tipo2.id_tnt = aux.id_tnt and tbl_tipo2.periodo = aux.periodo");
            sql.append(String.format(" and tbl_tipo2.cod_indicador = '%s'", ParamIndicador.IND_ACCESIBILIDAD_TIPO_ACCESO_2));
            sql.append(" and tbl_tipo2.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_tipo2.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            // condicion de Acceso 2
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_cond2 on tbl_cond2.id_tnt = aux.id_tnt and tbl_cond2.periodo = aux.periodo");
            sql.append(String.format(" and tbl_cond2.cod_indicador = '%s'", ParamIndicador.IND_ACCESIBILIDAD_CONDICION_ACCESO_2));
            sql.append(" and tbl_cond2.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_cond2.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            // tipo de Acceso 3
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_tipo3 on tbl_tipo3.id_tnt = aux.id_tnt and tbl_tipo3.periodo = aux.periodo");
            sql.append(String.format(" and tbl_tipo3.cod_indicador = '%s'", ParamIndicador.IND_ACCESIBILIDAD_TIPO_ACCESO_3));
            sql.append(" and tbl_tipo3.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_tipo3.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            // condicion de Acceso 3
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_cond3 on tbl_cond3.id_tnt = aux.id_tnt and tbl_cond3.periodo = aux.periodo");
            sql.append(String.format(" and tbl_cond3.cod_indicador = '%s'", ParamIndicador.IND_ACCESIBILIDAD_CONDICION_ACCESO_3));
            sql.append(" and tbl_cond3.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_cond3.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            // tipo de Acceso 4
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_tipo4 on tbl_tipo4.id_tnt = aux.id_tnt and tbl_tipo4.periodo = aux.periodo");
            sql.append(String.format(" and tbl_tipo4.cod_indicador = '%s'", ParamIndicador.IND_ACCESIBILIDAD_TIPO_ACCESO_4));
            sql.append(" and tbl_tipo4.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_tipo4.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            // condicion de Acceso 4
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_cond4 on tbl_cond4.id_tnt = aux.id_tnt and tbl_cond4.periodo = aux.periodo");
            sql.append(String.format(" and tbl_cond4.cod_indicador = '%s'", ParamIndicador.IND_ACCESIBILIDAD_CONDICION_ACCESO_4));
            sql.append(" and tbl_cond4.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_cond4.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            // tipo de Acceso 5
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_tipo5 on tbl_tipo5.id_tnt = aux.id_tnt and tbl_tipo5.periodo = aux.periodo");
            sql.append(String.format(" and tbl_tipo5.cod_indicador = '%s'", ParamIndicador.IND_ACCESIBILIDAD_TIPO_ACCESO_5));
            sql.append(" and tbl_tipo5.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_tipo5.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            // condicion de Acceso 5
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_cond5 on tbl_cond5.id_tnt = aux.id_tnt and tbl_cond5.periodo = aux.periodo");
            sql.append(String.format(" and tbl_cond5.cod_indicador = '%s'", ParamIndicador.IND_ACCESIBILIDAD_CONDICION_ACCESO_5));
            sql.append(" and tbl_cond5.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_cond5.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            //Numero de Medios de Trasporte para llegar al predio
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_num_medio_transporte on tbl_num_medio_transporte.id_tnt = aux.id_tnt and tbl_num_medio_transporte.periodo = aux.periodo");
            sql.append(String.format(" and tbl_num_medio_transporte.cod_indicador = '%s'", ParamIndicador.IND_ACCESIBILIDAD_NUMERO_MEDIOS_TRANSPORTES));
            sql.append(" and tbl_num_medio_transporte.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_num_medio_transporte.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            //Nro de acceso en condiciones 1 y 2
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_cond_1o2 on tbl_cond_1o2.id_tnt = aux.id_tnt and tbl_cond_1o2.periodo = aux.periodo");
            sql.append(String.format(" and tbl_cond_1o2.cod_indicador = '%s'", ParamIndicador.IND_ACCESIBILIDAD_NUMERO_ACCESOS_CONDICION_1_2));
            sql.append(" and tbl_cond_1o2.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_cond_1o2.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            //etnias del predio
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) etnias on etnias.id_tnt = aux.id_tnt and etnias.periodo = aux.periodo");
            sql.append(String.format(" and etnias.cod_indicador = '%s'", ParamIndicador.IND_ETNIAS_PREDIO));
            sql.append(" and etnias.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and etnias.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            //Condición de accesibilidad
            sql.append(" inner join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_accesibilidad on tbl_accesibilidad.id_tnt = aux.id_tnt and tbl_accesibilidad.periodo = aux.periodo");
            sql.append(String.format(" and tbl_accesibilidad.cod_indicador = '%s'", ParamIndicador.IND_ACCESIBILIDAD_CONDICION_ACCESIBILIDAD));
            sql.append(" and tbl_accesibilidad.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_accesibilidad.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            //vulnerabilidad
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_vulnerabilidad on tbl_vulnerabilidad.id_tnt = aux.id_tnt and tbl_vulnerabilidad.periodo = aux.periodo");
            sql.append(String.format(" and tbl_vulnerabilidad.cod_indicador = '%s'", ParamIndicador.IND_CONTROL_VIGILANCIA_VULNERABILIDAD));
            sql.append(" and tbl_vulnerabilidad.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_vulnerabilidad.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
        } else {
            //No de predios con condiciones inadecuadas de accesibilidad
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_predios_cond_inadecuada on tbl_predios_cond_inadecuada.id_tnt = aux.id_tnt and tbl_predios_cond_inadecuada.periodo = aux.periodo");
            sql.append(String.format(" and tbl_predios_cond_inadecuada.cod_indicador = '%s'", ParamIndicador.IND_ACCESIBILIDAD_NUMERO_PREDIOS_CONDICION_INADECUADA));
            sql.append(" and tbl_predios_cond_inadecuada.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_predios_cond_inadecuada.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            //Total Predios   
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) total_predio on total_predio.id_tnt = aux.id_tnt and total_predio.periodo = aux.periodo");
            sql.append(String.format(" and total_predio.cod_indicador = '%s'", ParamIndicador.IND_TOTAL_PREDIOS));
            sql.append(" and total_predio.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and total_predio.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            //Poblacion Afectada
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) poblacion_afectada on poblacion_afectada.id_tnt = aux.id_tnt and poblacion_afectada.periodo = aux.periodo");
            sql.append(String.format(" and poblacion_afectada.cod_indicador = '%s'", ParamIndicador.IND_ACCESIBILIDAD_POBLACION_AFECTADA));
            sql.append(" and poblacion_afectada.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and poblacion_afectada.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            //Poblacion total
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) poblacion_total on poblacion_total.id_tnt = aux.id_tnt and poblacion_total.periodo = aux.periodo");
            sql.append(String.format(" and poblacion_total.cod_indicador = '%s'", ParamIndicador.IND_TOTAL_POBLACION));
            sql.append(" and poblacion_total.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and poblacion_total.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
        }

// WHERE
        sql.append(" where aux.id_tnt = ?id_tnt and aux.periodo = ?periodo");
        if (filtro.isAgrupamientoPredio()) {
            /*sql.append(" and (tbl_tipo1.valor IS NOT NULL or");
             sql.append(" tbl_tipo2.valor IS NOT NULL or");
             sql.append(" tbl_tipo3.valor IS NOT NULL)");*/

            sql.append(" and n.principal_establecimiento = 1");
        }
        if (filtro.getIdNivel0() != null) {
            sql.append(" and n.id_nivel0 = ?id_nivel0");
        }
        if (filtro.getIdNivel1() != null) {
            sql.append(" and n.id_nivel1 = ?id_nivel1");
        }
        if (filtro.getIdNivel2() != null) {
            sql.append(" and n.id_nivel2 = ?id_nivel2");
        }
        if (filtro.getIdNivel3() != null) {
            sql.append(" and n.id_nivel3 = ?id_nivel3");
        }
        if (filtro.getIdNivel4() != null) {
            sql.append(" and n.id_nivel4 = ?id_nivel4");
        }
        if (filtro.getIdNivel5() != null) {
            sql.append(" and n.id_nivel5 = ?id_nivel5");
        }
        if (filtro.getIdEstablecimiento() != null) {
            sql.append(" and n.id_establecimiento = ?id_establecimiento");
        }
        if (filtro.getIdSede() != null) {
            sql.append(" and n.id_sede = ?id_sede");
        }
        if (filtro.getIdPredio() != null) {
            sql.append(" and n.id_predio = ?id_predio");
        }

        Query query = tpm.getEm().createNativeQuery(sql.toString());
        query.setParameter("id_tnt", tpm.getCurrentTenant());
        query.setParameter("periodo", filtro.getPeriodo());
        query.setParameter("idioma", filtro.getIdioma());
        query.setParameter("id_nivel0", filtro.getIdNivel0());
        query.setParameter("nivel_agrupamiento", filtro.getAgrupamiento());
        if (filtro.getIdNivel1() != null) {
            query.setParameter("id_nivel1", filtro.getIdNivel1());
        }
        if (filtro.getIdNivel2() != null) {
            query.setParameter("id_nivel2", filtro.getIdNivel2());
        }
        if (filtro.getIdNivel3() != null) {
            query.setParameter("id_nivel3", filtro.getIdNivel3());
        }
        if (filtro.getIdNivel4() != null) {
            query.setParameter("id_nivel4", filtro.getIdNivel4());
        }
        if (filtro.getIdNivel5() != null) {
            query.setParameter("id_nivel5", filtro.getIdNivel5());
        }
        if (filtro.getIdEstablecimiento() != null) {
            query.setParameter("id_establecimiento", filtro.getIdEstablecimiento());
        }
        if (filtro.getIdSede() != null) {
            query.setParameter("id_sede", filtro.getIdSede());
        }
        if (filtro.getIdPredio() != null) {
            query.setParameter("id_predio", filtro.getIdPredio());
        }
        return query.getResultList();
    }

    @Override
    public List<Object[]> consultarAccesibilidadInterna(FiltroAmbitoAccesibilidadInterna filtro) {
        if (filtro.isConsultaDeTiempoReal()) {
            if (ParamBaseDatos.ORACLE.equals(UtilProperties.getDbMotor())) {
                return this.consultarAccesibilidadInternaTiempoRealOracle(filtro);
            } else {
                return this.consultarAccesibilidadInternaTiempoRealPostgre(filtro);
            }

        } else {
            if (ParamBaseDatos.ORACLE.equals(UtilProperties.getDbMotor())) {
                return consultarAccesibilidadInternaIndicadoresOracle(filtro);
            } else {
                return consultarAccesibilidadInternaIndicadoresPostgre(filtro);
            }


        }
    }

    private List<Object[]> consultarAccesibilidadInternaTiempoRealPostgre(FiltroAmbitoAccesibilidadInterna filtro) {
        String codInstrumento = this.consultarCodInstrumentoPorPeriodo(filtro.getPeriodo());
        StringBuilder sql = new StringBuilder();
        StringBuilder agrupamiento = new StringBuilder();
//SELECT
        sql.append(" select ");
        if (filtro.isAgrupamientoPredio()) {
            sql.append(" n.codigo_nivel1,n.nombre_nivel1");
            sql.append(",n.codigo_nivel2,n.nombre_nivel2");
            sql.append(",n.codigo_nivel3,n.nombre_nivel3");
            sql.append(",n.codigo_nivel4,n.nombre_nivel4");
            sql.append(",n.codigo_nivel5,n.nombre_nivel5");
            sql.append(", n.codigo_establecimiento, n.nombre_establecimiento");
            sql.append(", n.codigo_sede, n.nombre_sede");
            sql.append(", n.codigo_predio, n.nombre_predio");

            // *indicadores
            // #  espacios carecen accesibilidad discapacitados
            sql.append(" ,coalesce(tb_espacios_sin_acc.valor,0) espacios_carece_accesibilidad");
            //total espacios
            sql.append(" ,coalesce(tb_total_espacios.valor,0) total_espacios");
            // Proporción espacios
            sql.append(" ,coalesce(tb_espacios_sin_acc.valor,0)/case when tb_total_espacios.valor = 0 then 1 else tb_total_espacios.valor end ::float proporcion_espacios");
            // edificio
            sql.append(" ,d1.valor edificio");
            // Accesibilidad a discapacitados
            sql.append(" ,tb_acc_disc.acceso_discapacitados");
            // nivel o piso hasta el cual hay accesibilidad
            sql.append(" ,tb_niv_max.nivel_max_accesibilidad");
            // Tipo de elemento complementario
            sql.append(" ,coalesce(tb_elemento.elemento_complementario,'No') elemento_complementario");
            // Condicion tipo de elemento complementario
            sql.append(" ,coalesce(tb_elemento.condicion_elemento_complementario,'No Aplica')");
            // cumplimiento accesibilidad
            sql.append(" ,tb_cumplimiento.cumplimiento_nivel_accesiblidad");
            //*otros
            sql.append(" , n.direccion_predio direccion_predio, n.nombre_zona zona");
            sql.append(" , n.nombre_sector sector, n.nombre_clima clima");
            // Condicion de Riesgo Antropico
            sql.append(" ,tbl_cond_ra.condicion_riesgo");
            // Condicion de Riesgo Natural
            sql.append(" ,tbl_cond_rn.condicion_riesgo");
            //filtrar por tipo de elemento
            sql.append(" ,tb_elemento.tipo_elemento");

        } else {
            if (filtro.isAgrupamientoNivel0()) {
                agrupamiento.append(" n.nombre_nivel0");
            }
            if (filtro.isAgrupamientoNivel1()) {
                agrupamiento.append(" n.codigo_nivel1,n.nombre_nivel1");
            }
            if (filtro.isAgrupamientoNivel2()) {
                agrupamiento.append("n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
            }
            if (filtro.isAgrupamientoNivel3()) {
                agrupamiento.append("n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
            }
            if (filtro.isAgrupamientoNivel4()) {
                agrupamiento.append("n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
            }
            if (filtro.isAgrupamientoNivel5()) {
                agrupamiento.append("n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
                agrupamiento.append(",n.codigo_nivel5,n.nombre_nivel5");
            }
            if (filtro.isAgrupamientoEstablecimiento()) {
                agrupamiento.append(" n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
                agrupamiento.append(",n.codigo_nivel5,n.nombre_nivel5");
                agrupamiento.append(", n.codigo_establecimiento, n.nombre_establecimiento");
            }
            if (filtro.isAgrupamientoSede()) {
                agrupamiento.append(" n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
                agrupamiento.append(",n.codigo_nivel5,n.nombre_nivel5");
                agrupamiento.append(", n.codigo_establecimiento, n.nombre_establecimiento");
                agrupamiento.append(", n.codigo_sede, n.nombre_sede");
            }

            // select
            sql.append(agrupamiento.toString());

            //No de predios con al menos un edificio con acceso a discapacitado
            sql.append(" ,count(tbl_predios_acceso_discapacitados.id_dig_instrumento) numero_predio_acceso_discapacitados");
            //No de predios con al menos un edificio que cumple la norma
            sql.append(" ,count(tbl_predios_cumplen_accesibilidad.id_dig_instrumento) numero_predio_cumplen_accesibilidad");
            //Total Predios
            sql.append(" ,sum(coalesce(tbl_total_predio.total,0)) total_predios");
            // Proporcion predios con al menos un edificio con acceso a discapacitado
            sql.append(" ,coalesce(count(tbl_predios_acceso_discapacitados.id_dig_instrumento),0)/case when count(tbl_total_predio.total) = 0 then 1 else count(tbl_total_predio.total) end ::float proporcion_acceso");
            // Proporcion predios con al menos un edificio que cumple la norma
            sql.append(" ,coalesce(count(tbl_predios_cumplen_accesibilidad.id_dig_instrumento),0)/case when count(tbl_total_predio.total) = 0 then 1 else count(tbl_total_predio.total) end ::float proporcion_cumplimiento");

        }
// FROM 
        sql.append(" from cier.ind_auxiliar_indicador aux");
        sql.append(" inner join cier.ind_auxiliar_consultas n on n.id_predio = aux.id_predio and n.periodo = aux.periodo and n.id_tnt = aux.id_tnt");

        if (filtro.isAgrupamientoPredio()) {
            //edificio
            sql.append(" inner join cier.ind_auxiliar_respuesta d1 on d1.id_dig_instrumento = aux.id_dig_instrumento and d1.id_tnt = aux.id_tnt and d1.periodo = aux.periodo and d1.cod_respuesta=(select cier.get_cod_respuesta(31))");

            // #  espacios carecen accesibilidad discapacitados
            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ACCINTERNA_NUMERO_ESPACIOS_CARECEN_ACCESIBILIDAD, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" )tb_espacios_sin_acc on tb_espacios_sin_acc.id_dig_instrumento = aux.id_dig_instrumento and tb_espacios_sin_acc.id_predio = aux.id_predio");

            //total espacios
            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_TOTAL_ESPACIOS, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" )tb_total_espacios on tb_total_espacios.id_dig_instrumento = aux.id_dig_instrumento and tb_total_espacios.id_predio = aux.id_predio");

            // Accesibilidad a discapacitados
            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ACCINTERNA_ACCESO_DISCAPACITADO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" )tb_acc_disc on tb_acc_disc.periodo=aux.periodo and tb_acc_disc.id_dig_instrumento=aux.id_dig_instrumento and tb_acc_disc.id_predio=aux.id_predio and tb_acc_disc.edificio=d1.valor and tb_acc_disc.elemento=d1.id_elemento");

            // nivel o piso hasta el cual hay accesibilidad
            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ACCINTERNA_NIVEL_MAX_ACCESIBILIDAD, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" )tb_niv_max on tb_niv_max.periodo=aux.periodo and tb_niv_max.id_dig_instrumento=aux.id_dig_instrumento and tb_niv_max.id_predio=aux.id_predio and tb_niv_max.edificio=d1.valor and tb_niv_max.elemento=d1.id_elemento");

            // Tipo de elemento complementario y su condicion           
            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ACCINTERNA_ELEMENTO_COMPLEMENTARIO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" )tb_elemento on tb_elemento.periodo=aux.periodo and tb_elemento.id_dig_instrumento=aux.id_dig_instrumento and tb_elemento.id_predio=aux.id_predio and tb_elemento.edificio=d1.valor and tb_elemento.elemento=d1.id_elemento");

            // cumplimiento accesibilidad
            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ACCINTERNA_CUMPLE_NIVEL_ACCESIBILIDAD, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" )tb_cumplimiento on tb_cumplimiento.periodo=aux.periodo and tb_cumplimiento.id_dig_instrumento=aux.id_dig_instrumento and tb_cumplimiento.id_predio=aux.id_predio and tb_cumplimiento.edificio=d1.valor and tb_cumplimiento.elemento=d1.id_elemento");

            //condicion riesgo Antropico
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_RIESGO_ANTROPICO_CONDICION_RIESGO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) as tbl_cond_ra on tbl_cond_ra.id_dig_instrumento = aux.id_dig_instrumento and tbl_cond_ra.id_predio = aux.id_predio");

            //condicion riesgo Natural            
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_RIESGO_NATURAL_CONDICION_RIESGO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) as tbl_cond_rn on tbl_cond_rn.id_dig_instrumento = aux.id_dig_instrumento and tbl_cond_rn.id_predio = aux.id_predio");
        } else {
            //No de predios con al menos un edificio con acceso a discapacitado
            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ACCINTERNA_NUMERO_PREDIOS_ACCESIBLIDAD, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) tbl_predios_acceso_discapacitados on tbl_predios_acceso_discapacitados.id_dig_instrumento = aux.id_dig_instrumento and tbl_predios_acceso_discapacitados.id_predio = aux.id_predio");

            //No de predios con al menos un edificio que cumple la norma
            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ACCINTERNA_NUMERO_PREDIOS_CUMPLEN_NIVEL_ACCESIBILIDAD, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) tbl_predios_cumplen_accesibilidad on tbl_predios_cumplen_accesibilidad.id_dig_instrumento = aux.id_dig_instrumento and tbl_predios_cumplen_accesibilidad.id_predio = aux.id_predio");

            //total predio
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_TOTAL_PREDIOS, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) as tbl_total_predio on tbl_total_predio.id_dig_instrumento = aux.id_dig_instrumento and tbl_total_predio.id_predio = aux.id_predio");
        }

// WHERE
        sql.append(" where aux.id_tnt = ?id_tnt and aux.periodo = ?periodo");
        if (filtro.isAgrupamientoPredio()) {
            if (filtro.getAccesoDiscapacitado() != null) {
                sql.append(" and acceso_discapacitados = '").append(filtro.getAccesoDiscapacitado()).append("'");
            }
            if (filtro.getElementoComplementario() != null) {
                sql.append(" and tipo_elemento in (").append(filtro.getElementoComplementario()).append(")");
            }
        }
        if (filtro.getIdNivel0() != null) {
            sql.append(" and n.id_nivel0 = ?id_nivel0");
        }
        if (filtro.getIdNivel1() != null) {
            sql.append(" and n.id_nivel1 = ?id_nivel1");
        }
        if (filtro.getIdNivel2() != null) {
            sql.append(" and n.id_nivel2 = ?id_nivel2");
        }
        if (filtro.getIdNivel3() != null) {
            sql.append(" and n.id_nivel3 = ?id_nivel3");
        }
        if (filtro.getIdNivel4() != null) {
            sql.append(" and n.id_nivel4 = ?id_nivel4");
        }
        if (filtro.getIdNivel5() != null) {
            sql.append(" and n.id_nivel5 = ?id_nivel5");
        }
        if (filtro.getIdEstablecimiento() != null) {
            sql.append(" and n.id_establecimiento = ?id_establecimiento");
        }
        if (filtro.getIdSede() != null) {
            sql.append(" and n.id_sede = ?id_sede");
        }
        if (filtro.getIdPredio() != null) {
            sql.append(" and n.id_predio = ?id_predio");
        }
        // otros filtros
        if (filtro.getCodZona() != null) {
            sql.append(" and n.codigo_zona = ?cod_zona");
        }
        if (filtro.getCodSector() != null) {
            sql.append(" and n.codigo_sector = ?cod_sector");
        }

        // GROUP BY 
        if (!filtro.isAgrupamientoPredio()) {
            sql.append(" group by ");
            sql.append(agrupamiento.toString());
        }
        //ORDER BY       
        sql.append(" order by ");
        if (filtro.isAgrupamientoPredio()) {
            sql.append(" n.codigo_predio");
            sql.append(" ,d1.valor");
        } else {
            sql.append(agrupamiento.toString());
        }


        String auxSql = sql.toString();
        auxSql = auxSql.replaceAll("\\?start", "");
        auxSql = auxSql.replaceAll("\\?end", "");

        Query query = tpm.getEm().createNativeQuery(auxSql);
        query.setParameter("id_tnt", tpm.getCurrentTenant());
        query.setParameter("periodo", filtro.getPeriodo());
        query.setParameter("idioma", filtro.getIdioma());
        query.setParameter("id_nivel0", filtro.getIdNivel0());
        if (filtro.getIdNivel1() != null) {
            query.setParameter("id_nivel1", filtro.getIdNivel1());
        }
        if (filtro.getIdNivel2() != null) {
            query.setParameter("id_nivel2", filtro.getIdNivel2());
        }
        if (filtro.getIdNivel3() != null) {
            query.setParameter("id_nivel3", filtro.getIdNivel3());
        }
        if (filtro.getIdNivel4() != null) {
            query.setParameter("id_nivel4", filtro.getIdNivel4());
        }
        if (filtro.getIdNivel5() != null) {
            query.setParameter("id_nivel5", filtro.getIdNivel5());
        }
        if (filtro.getIdEstablecimiento() != null) {
            query.setParameter("id_establecimiento", filtro.getIdEstablecimiento());
        }
        if (filtro.getIdSede() != null) {
            query.setParameter("id_sede", filtro.getIdSede());
        }
        if (filtro.getIdPredio() != null) {
            query.setParameter("id_predio", filtro.getIdPredio());
        }
        // otros filtros
        if (filtro.getCodZona() != null) {
            query.setParameter("cod_zona", filtro.getCodZona());
        }
        if (filtro.getCodSector() != null) {
            query.setParameter("cod_sector", filtro.getCodSector());
        }

        return query.getResultList();
    }

    private List<Object[]> consultarSeguridadIndicadoresPostgre(FiltroAmbitoSeguridad filtro) {
        StringBuilder sql = new StringBuilder();
        // consulta por nivel de agrupamiento superior a predio
        // SELECT
        sql.append(" select ");
        if (filtro.isAgrupamientoPredio()) {
            sql.append(" n.codigo_nivel1,n.nombre_nivel1");
            sql.append(",n.codigo_nivel2,n.nombre_nivel2");
            sql.append(",n.codigo_nivel3,n.nombre_nivel3");
            sql.append(",n.codigo_nivel4,n.nombre_nivel4");
            sql.append(",n.codigo_nivel5,n.nombre_nivel5");
            sql.append(", n.codigo_establecimiento, n.nombre_establecimiento");
            sql.append(", n.codigo_sede, n.nombre_sede");
            sql.append(", n.codigo_predio, n.nombre_predio");

            // *indicadores
            //EstadoEstructura
            sql.append(" , tb_estado_estructura.valor");
            //AnalisisRutaEvacuacion
            sql.append(" , tb_ruta_evacuacion.valor");
            //ReactivoIncendios
            sql.append(" , tb_reactivo_incendio.valor");
            //SenalizacionEvacuacion
            sql.append(" , tb_senalizacion_evacuacion.valor");
            //Edificio
            sql.append(" , d1.valor edificio");
            //Estructura
            sql.append(" , tb_estructura.valor");
            //CondicionEstructura
            sql.append(" , tb_cond_estructura.valor");
            //CondicionRutaEvacuacion
            sql.append(" , coalesce(tb_cond_ruta_evacuacion.valor,'No')");
            //SenalizacionEvacuacionEdificio
            sql.append(" , tb_senalizacion_evacuacion_edif.valor");
            //SistemaContraIncendio
            sql.append(" , tb_sistema_incendio.valor");
            //TotalEstudiantes
            sql.append(" , tb_estudiante.valor");
            //*otros
            sql.append(" , n.direccion_predio direccion_predio, n.nombre_zona zona");
            sql.append(" , n.nombre_sector sector, n.nombre_clima clima");
            //propiedad del predio
            sql.append(" , n.propiedad_predio");
            //condicion accesibilidad
            sql.append(" ,tbl_accesibilidad.valor");
            // Condicion de Riesgo Antropico
            sql.append(" ,tbl_cond_ra.valor");
            // Condicion de Riesgo Natural
            sql.append(" ,tbl_cond_rn.valor");
        } else {
            sql.append(" distinct ");
            if (filtro.isAgrupamientoNivel0()) {
                sql.append(" n.nombre_nivel0");
            }
            if (filtro.isAgrupamientoNivel1()) {
                sql.append(" n.codigo_nivel1,n.nombre_nivel1");
            }
            if (filtro.isAgrupamientoNivel2()) {
                sql.append("n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
            }
            if (filtro.isAgrupamientoNivel3()) {
                sql.append("n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
            }
            if (filtro.isAgrupamientoNivel4()) {
                sql.append("n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
                sql.append(",n.codigo_nivel4,n.nombre_nivel4");
            }
            if (filtro.isAgrupamientoNivel5()) {
                sql.append("n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
                sql.append(",n.codigo_nivel4,n.nombre_nivel4");
                sql.append(",n.codigo_nivel5,n.nombre_nivel5");
            }
            if (filtro.isAgrupamientoEstablecimiento()) {
                sql.append("n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
                sql.append(",n.codigo_nivel4,n.nombre_nivel4");
                sql.append(",n.codigo_nivel5,n.nombre_nivel5");
                sql.append(" ,n.codigo_establecimiento, n.nombre_establecimiento");
            }
            if (filtro.isAgrupamientoSede()) {
                sql.append("n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
                sql.append(",n.codigo_nivel4,n.nombre_nivel4");
                sql.append(",n.codigo_nivel5,n.nombre_nivel5");
                sql.append(" ,n.codigo_establecimiento, n.nombre_establecimiento");
                sql.append(" ,n.codigo_sede, n.nombre_sede");
            }
            //TotalEstudiantes
            sql.append(" ,coalesce(tb_estudiante.valor,'0')");
            //Total Predio
            sql.append(" ,coalesce(tot_pred.valor,'0')");
        }
// FROM 
        sql.append(" from cier.ind_auxiliar_indicador aux");
        sql.append(" inner join cier.ind_auxiliar_consultas n on n.id_predio = aux.id_predio and n.periodo = aux.periodo and n.id_tnt = aux.id_tnt");

        String strSQLNivelAgrupamiento = this.getSQLNivelAgrupamiento(filtro);
        String strSQLConsultarIndicador = this.getSQLConsultarIndicadorAlmacenado();

        if (filtro.isAgrupamientoPredio()) {
            //edificio
            sql.append(" inner join cier.ind_auxiliar_respuesta d1 on d1.id_dig_instrumento = aux.id_dig_instrumento and d1.id_tnt = aux.id_tnt and d1.periodo = aux.periodo and d1.cod_respuesta=(select cier.get_cod_respuesta(31))");

            //EstadoEstructura
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) as tb_estado_estructura on tb_estado_estructura.id_tnt = aux.id_tnt and tb_estado_estructura.periodo = aux.periodo");
            sql.append(String.format(" and tb_estado_estructura.cod_indicador = '%s'", ParamIndicador.IND_SEGURIDAD_ESTADO_ESTRUCTURA));
            sql.append(" and tb_estado_estructura.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tb_estado_estructura.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            //AnalisisRutaEvacuacion
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) as tb_ruta_evacuacion on tb_ruta_evacuacion.id_tnt = aux.id_tnt and tb_ruta_evacuacion.periodo = aux.periodo");
            sql.append(String.format(" and tb_ruta_evacuacion.cod_indicador = '%s'", ParamIndicador.IND_SEGURIDAD_ANALISIS_RUTA_EVACUACION));
            sql.append(" and tb_ruta_evacuacion.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tb_ruta_evacuacion.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            //ReactivoIncendios
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) as tb_reactivo_incendio on tb_reactivo_incendio.id_tnt = aux.id_tnt and tb_reactivo_incendio.periodo = aux.periodo");
            sql.append(String.format(" and tb_reactivo_incendio.cod_indicador = '%s'", ParamIndicador.IND_SEGURIDAD_REACTIVO_CONTRA_INCENDIO));
            sql.append(" and tb_reactivo_incendio.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tb_reactivo_incendio.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            //SenalizacionEvacuacion
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) as tb_senalizacion_evacuacion on tb_senalizacion_evacuacion.id_tnt = aux.id_tnt and tb_senalizacion_evacuacion.periodo = aux.periodo");
            sql.append(String.format(" and tb_senalizacion_evacuacion.cod_indicador = '%s'", ParamIndicador.IND_SEGURIDAD_SENALIZACION_EVACUACION));
            sql.append(" and tb_senalizacion_evacuacion.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tb_senalizacion_evacuacion.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            //Estructura
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) as tb_estructura on tb_estructura.id_tnt = aux.id_tnt and tb_estructura.periodo = aux.periodo");
            sql.append(String.format(" and tb_estructura.cod_indicador = '%s'", ParamIndicador.IND_SEGURIDAD_EDIF_SISTEMA_ESTRUCTURAL));
            sql.append(" and tb_estructura.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tb_estructura.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            sql.append(" and cast(tb_estructura.cod_valor as numeric) = d1.id_elemento");

            //CondicionEstructura
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) as tb_cond_estructura on tb_cond_estructura.id_tnt = aux.id_tnt and tb_cond_estructura.periodo = aux.periodo");
            sql.append(String.format(" and tb_cond_estructura.cod_indicador = '%s'", ParamIndicador.IND_SEGURIDAD_EDIF_CONDICION_SISTEMA_ESTRUCTURAL));
            sql.append(" and tb_cond_estructura.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tb_cond_estructura.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            sql.append(" and cast(tb_cond_estructura.cod_valor as numeric) = d1.id_elemento");

            //CondicionRutaEvacuacion
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) as tb_cond_ruta_evacuacion on tb_cond_ruta_evacuacion.id_tnt = aux.id_tnt and tb_cond_ruta_evacuacion.periodo = aux.periodo");
            sql.append(String.format(" and tb_cond_ruta_evacuacion.cod_indicador = '%s'", ParamIndicador.IND_SEGURIDAD_EDIF_CONDICION_RUTA_EVACUACION));
            sql.append(" and tb_cond_ruta_evacuacion.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tb_cond_ruta_evacuacion.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            sql.append(" and cast(tb_cond_ruta_evacuacion.cod_valor as numeric) = d1.id_elemento");

            //SenalizacionEvacuacionEdificio
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) as tb_senalizacion_evacuacion_edif on tb_senalizacion_evacuacion_edif.id_tnt = aux.id_tnt and tb_senalizacion_evacuacion_edif.periodo = aux.periodo");
            sql.append(String.format(" and tb_senalizacion_evacuacion_edif.cod_indicador = '%s'", ParamIndicador.IND_SEGURIDAD_EDIF_SENALIZACION_EVACUACION));
            sql.append(" and tb_senalizacion_evacuacion_edif.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tb_senalizacion_evacuacion_edif.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            sql.append(" and cast(tb_senalizacion_evacuacion_edif.cod_valor as numeric) = d1.id_elemento");

            //SistemaContraIncendio
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) as tb_sistema_incendio on tb_sistema_incendio.id_tnt = aux.id_tnt and tb_sistema_incendio.periodo = aux.periodo");
            sql.append(String.format(" and tb_sistema_incendio.cod_indicador = '%s'", ParamIndicador.IND_SEGURIDAD_EDIF_SISTEMA_CONTRA_INCENDIO));
            sql.append(" and tb_sistema_incendio.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tb_sistema_incendio.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            sql.append(" and cast(tb_sistema_incendio.cod_valor as numeric) = d1.id_elemento");

            //TotalEstudiantes
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) as tb_estudiante on tb_estudiante.id_tnt = aux.id_tnt and tb_estudiante.periodo = aux.periodo");
            sql.append(String.format(" and tb_estudiante.cod_indicador = '%s'", ParamIndicador.IND_TOTAL_ESTUDIANTES));
            sql.append(" and tb_estudiante.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tb_estudiante.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            //Condición de accesibilidad
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) as tbl_accesibilidad on tbl_accesibilidad.id_tnt = aux.id_tnt and tbl_accesibilidad.periodo = aux.periodo");
            sql.append(String.format(" and tbl_accesibilidad.cod_indicador = '%s'", ParamIndicador.IND_ACCESIBILIDAD_CONDICION_ACCESIBILIDAD));
            sql.append(" and tbl_accesibilidad.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_accesibilidad.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            // Condicion de Riesgo Antropico
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) as tbl_cond_ra on tbl_cond_ra.id_tnt = aux.id_tnt and tbl_cond_ra.periodo = aux.periodo");
            sql.append(String.format(" and tbl_cond_ra.cod_indicador = '%s'", ParamIndicador.IND_RIESGO_ANTROPICO_CONDICION_RIESGO));
            sql.append(" and tbl_cond_ra.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_cond_ra.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            // Condicion de Riesgo Natural
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) as tbl_cond_rn on tbl_cond_rn.id_tnt = aux.id_tnt and tbl_cond_rn.periodo = aux.periodo");
            sql.append(String.format(" and tbl_cond_rn.cod_indicador = '%s'", ParamIndicador.IND_RIESGO_NATURAL_CONDICION_RIESGO));
            sql.append(" and tbl_cond_rn.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_cond_rn.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
        } else {
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) as tb_estudiante on tb_estudiante.id_tnt = aux.id_tnt and tb_estudiante.periodo = aux.periodo");
            sql.append(String.format(" and tb_estudiante.cod_indicador = '%s'", ParamIndicador.IND_TOTAL_ESTUDIANTES));
            sql.append(" and tb_estudiante.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tb_estudiante.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            //Total Predio
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) as tot_pred on tot_pred.id_tnt = aux.id_tnt and tot_pred.periodo = aux.periodo");
            sql.append(String.format(" and tot_pred.cod_indicador = '%s'", ParamIndicador.IND_TOTAL_PREDIOS));
            sql.append(" and tot_pred.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tot_pred.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
        }

// WHERE
        sql.append(" where aux.id_tnt = ?id_tnt and aux.periodo = ?periodo");
        if (filtro.isAgrupamientoPredio()) {
            /*sql.append(" and (tbl_tipo1.valor IS NOT NULL or");
             sql.append(" tbl_tipo2.valor IS NOT NULL or");
             sql.append(" tbl_tipo3.valor IS NOT NULL)");*/

            sql.append(" and n.principal_establecimiento = 1");
        }
        if (filtro.getIdNivel0() != null) {
            sql.append(" and n.id_nivel0 = ?id_nivel0");
        }
        if (filtro.getIdNivel1() != null) {
            sql.append(" and n.id_nivel1 = ?id_nivel1");
        }
        if (filtro.getIdNivel2() != null) {
            sql.append(" and n.id_nivel2 = ?id_nivel2");
        }
        if (filtro.getIdNivel3() != null) {
            sql.append(" and n.id_nivel3 = ?id_nivel3");
        }
        if (filtro.getIdNivel4() != null) {
            sql.append(" and n.id_nivel4 = ?id_nivel4");
        }
        if (filtro.getIdNivel5() != null) {
            sql.append(" and n.id_nivel5 = ?id_nivel5");
        }
        if (filtro.getIdEstablecimiento() != null) {
            sql.append(" and n.id_establecimiento = ?id_establecimiento");
        }
        if (filtro.getIdSede() != null) {
            sql.append(" and n.id_sede = ?id_sede");
        }
        if (filtro.getIdPredio() != null) {
            sql.append(" and n.id_predio = ?id_predio");
        }
        //ORDER BY       
        if (filtro.isAgrupamientoPredio()) {
            sql.append(" order by ");
            sql.append(" n.codigo_predio");
            sql.append(" ,d1.valor");
        }

        Query query = tpm.getEm().createNativeQuery(sql.toString());
        query.setParameter("id_tnt", tpm.getCurrentTenant());
        query.setParameter("periodo", filtro.getPeriodo());
        query.setParameter("idioma", filtro.getIdioma());
        query.setParameter("id_nivel0", filtro.getIdNivel0());
        query.setParameter("nivel_agrupamiento", filtro.getAgrupamiento());
        if (filtro.getIdNivel1() != null) {
            query.setParameter("id_nivel1", filtro.getIdNivel1());
        }
        if (filtro.getIdNivel2() != null) {
            query.setParameter("id_nivel2", filtro.getIdNivel2());
        }
        if (filtro.getIdNivel3() != null) {
            query.setParameter("id_nivel3", filtro.getIdNivel3());
        }
        if (filtro.getIdNivel4() != null) {
            query.setParameter("id_nivel4", filtro.getIdNivel4());
        }
        if (filtro.getIdNivel5() != null) {
            query.setParameter("id_nivel5", filtro.getIdNivel5());
        }
        if (filtro.getIdEstablecimiento() != null) {
            query.setParameter("id_establecimiento", filtro.getIdEstablecimiento());
        }
        if (filtro.getIdSede() != null) {
            query.setParameter("id_sede", filtro.getIdSede());
        }
        if (filtro.getIdPredio() != null) {
            query.setParameter("id_predio", filtro.getIdPredio());
        }
        return query.getResultList();
    }

    private List<Object[]> consultarAccesibilidadInternaTiempoRealOracle(FiltroAmbitoAccesibilidadInterna filtro) {
        String codInstrumento = this.consultarCodInstrumentoPorPeriodo(filtro.getPeriodo());
        StringBuilder sql = new StringBuilder();
        StringBuilder agrupamiento = new StringBuilder();
//SELECT
        sql.append(" select ");
        String funcion = "";
        if (ParamBaseDatos.ORACLE.equals(UtilProperties.getDbMotor())) {
            funcion = "nvl";
        } else {
            funcion = "coalesce";
        }

        if (filtro.isAgrupamientoPredio()) {
            sql.append(" n.codigo_nivel1,n.nombre_nivel1");
            sql.append(",n.codigo_nivel2,n.nombre_nivel2");
            sql.append(",n.codigo_nivel3,n.nombre_nivel3");
            sql.append(",n.codigo_nivel4,n.nombre_nivel4");
            sql.append(",n.codigo_nivel5,n.nombre_nivel5");
            sql.append(", n.codigo_establecimiento, n.nombre_establecimiento");
            sql.append(", n.codigo_sede, n.nombre_sede");
            sql.append(", n.codigo_predio, n.nombre_predio");

            // *indicadores
            // #  espacios carecen accesibilidad discapacitados


            sql.append(" ,").append(funcion).append("(tb_espacios_sin_acc.valor,0) espacios_carece_accesibilidad");
            //total espacios
            sql.append(" ,").append(funcion).append("(tb_total_espacios.valor,0) total_espacios");
            // Proporción espacios
            sql.append(" ,").append(funcion).append("(tb_espacios_sin_acc.valor,0)/case when tb_total_espacios.valor = 0 then 1 else tb_total_espacios.valor end  proporcion_espacios");
            // edificio
            sql.append(" ,d1.valor edificio");
            // Accesibilidad a discapacitados
            sql.append(" ,tb_acc_disc.acceso_discapacitados");
            // nivel o piso hasta el cual hay accesibilidad
            sql.append(" ,tb_niv_max.nivel_max_accesibilidad");
            // Tipo de elemento complementario
            sql.append(" ,").append(funcion).append("(tb_elemento.elemento_complementario,'No') elemento_complementario");
            // Condicion tipo de elemento complementario
            sql.append(" ,").append(funcion).append("(tb_elemento.cond_elemento_complementario,'No Aplica')");
            // cumplimiento accesibilidad
            sql.append(" ,tb_cumplimiento.cumplimiento_accesiblidad");
            //*otros
            sql.append(" , n.direccion_predio direccion_predio, n.nombre_zona zona");
            sql.append(" , n.nombre_sector sector, n.nombre_clima clima");
            // Condicion de Riesgo Antropico
            sql.append(" ,tbl_cond_ra.condicion_riesgo");
            // Condicion de Riesgo Natural
            sql.append(" ,tbl_cond_rn.condicion_riesgo");
            //filtrar por tipo de elemento
            sql.append(" ,tb_elemento.tipo_elemento");

        } else {
            if (filtro.isAgrupamientoNivel0()) {
                agrupamiento.append(" n.nombre_nivel0");
            }
            if (filtro.isAgrupamientoNivel1()) {
                agrupamiento.append(" n.codigo_nivel1,n.nombre_nivel1");
            }
            if (filtro.isAgrupamientoNivel2()) {
                agrupamiento.append("n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
            }
            if (filtro.isAgrupamientoNivel3()) {
                agrupamiento.append("n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
            }
            if (filtro.isAgrupamientoNivel4()) {
                agrupamiento.append("n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
            }
            if (filtro.isAgrupamientoNivel5()) {
                agrupamiento.append("n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
                agrupamiento.append(",n.codigo_nivel5,n.nombre_nivel5");
            }
            if (filtro.isAgrupamientoEstablecimiento()) {
                agrupamiento.append(" n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
                agrupamiento.append(",n.codigo_nivel5,n.nombre_nivel5");
                agrupamiento.append(", n.codigo_establecimiento, n.nombre_establecimiento");
            }
            if (filtro.isAgrupamientoSede()) {
                agrupamiento.append(" n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
                agrupamiento.append(",n.codigo_nivel5,n.nombre_nivel5");
                agrupamiento.append(", n.codigo_establecimiento, n.nombre_establecimiento");
                agrupamiento.append(", n.codigo_sede, n.nombre_sede");
            }

            // select
            sql.append(agrupamiento.toString());

            //No de predios con al menos un edificio con acceso a discapacitado
            sql.append(" ,count(tbl_predios_acceso_disca.id_predio) num_pre_acceso_disca");
            //No de predios con al menos un edificio que cumple la norma
            sql.append(" ,count(tbl_pred_cumplen_accesi.id_predio) num_pre_cumplen_acces");
            //Total Predios
            sql.append(" ,sum(").append(funcion).append("(tbl_total_predio.total,0)) total_predios");
            // Proporcion predios con al menos un edificio con acceso a discapacitado
            sql.append(" ,").append(funcion).append("(count(tbl_predios_acceso_disca.id_predio),0)/case when count(tbl_total_predio.total) = 0 then 1 else count(tbl_total_predio.total) end  proporcion_acceso");
            // Proporcion predios con al menos un edificio que cumple la norma
            sql.append(" ,").append(funcion).append("(count(tbl_pred_cumplen_accesi.id_predio),0)/case when count(tbl_total_predio.total) = 0 then 1 else count(tbl_total_predio.total) end  proporcion_cumplimiento");

        }
// FROM 
        sql.append(" from ind_auxiliar_indicador aux");
        sql.append(" inner join ind_auxiliar_consultas n on n.id_predio = aux.id_predio and n.periodo = aux.periodo and n.id_tnt = aux.id_tnt");

        if (filtro.isAgrupamientoPredio()) {
            //edificio
            sql.append(" inner join (select id_tnt,periodo,id_predio,resp_073 valor,id_dig_elemento id_elemento from ind_aux_respuesta_ele where resp_073 is not null) d1 on d1.id_predio = aux.id_predio and d1.id_tnt = aux.id_tnt and d1.periodo = aux.periodo");

            // #  espacios carecen accesibilidad discapacitados
            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ACCINTERNA_NUMERO_ESPACIOS_CARECEN_ACCESIBILIDAD, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" )tb_espacios_sin_acc on tb_espacios_sin_acc.id_predio = aux.id_predio");

            //total espacios
            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_TOTAL_ESPACIOS, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" )tb_total_espacios on tb_total_espacios.id_predio = aux.id_predio");

            // Accesibilidad a discapacitados
            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ACCINTERNA_ACCESO_DISCAPACITADO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" )tb_acc_disc on tb_acc_disc.periodo=aux.periodo and tb_acc_disc.id_predio=aux.id_predio and tb_acc_disc.edificio=d1.valor and tb_acc_disc.elemento=d1.id_elemento");

            // nivel o piso hasta el cual hay accesibilidad
            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ACCINTERNA_NIVEL_MAX_ACCESIBILIDAD, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" )tb_niv_max on tb_niv_max.periodo=aux.periodo and tb_niv_max.id_predio=aux.id_predio and tb_niv_max.edificio=d1.valor and tb_niv_max.elemento=d1.id_elemento");

            // Tipo de elemento complementario y su condicion           
            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ACCINTERNA_ELEMENTO_COMPLEMENTARIO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" )tb_elemento on tb_elemento.periodo=aux.periodo and tb_elemento.id_predio=aux.id_predio and tb_elemento.edificio=d1.valor and tb_elemento.elemento=d1.id_elemento");

            // cumplimiento accesibilidad
            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ACCINTERNA_CUMPLE_NIVEL_ACCESIBILIDAD, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" )tb_cumplimiento on tb_cumplimiento.periodo=aux.periodo and tb_cumplimiento.id_predio=aux.id_predio and tb_cumplimiento.edificio=d1.valor and tb_cumplimiento.elemento=d1.id_elemento");

            //condicion riesgo Antropico
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_RIESGO_ANTROPICO_CONDICION_RIESGO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) tbl_cond_ra on tbl_cond_ra.id_predio = aux.id_predio");

            //condicion riesgo Natural            
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_RIESGO_NATURAL_CONDICION_RIESGO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) tbl_cond_rn on tbl_cond_rn.id_predio = aux.id_predio");
        } else {
            //No de predios con al menos un edificio con acceso a discapacitado
            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ACCINTERNA_NUMERO_PREDIOS_ACCESIBLIDAD, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) tbl_predios_acceso_disca on tbl_predios_acceso_disca.id_predio = aux.id_predio");

            //No de predios con al menos un edificio que cumple la norma
            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ACCINTERNA_NUMERO_PREDIOS_CUMPLEN_NIVEL_ACCESIBILIDAD, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) tbl_pred_cumplen_accesi on tbl_pred_cumplen_accesi.id_predio = aux.id_predio");

            //total predio
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_TOTAL_PREDIOS, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) tbl_total_predio on tbl_total_predio.id_predio = aux.id_predio");
        }

// WHERE
        sql.append(" where aux.id_tnt = ?id_tnt and aux.periodo = ?periodo");
        if (filtro.isAgrupamientoPredio()) {
            if (filtro.getAccesoDiscapacitado() != null) {
                sql.append(" and acceso_discapacitados = '").append(filtro.getAccesoDiscapacitado()).append("'");
            }
            if (filtro.getElementoComplementario() != null) {
                sql.append(" and tipo_elemento in (").append(filtro.getElementoComplementario()).append(")");
            }
        }
        if (filtro.getIdNivel0() != null) {
            sql.append(" and n.id_nivel0 = ?id_nivel0");
        }
        if (filtro.getIdNivel1() != null) {
            sql.append(" and n.id_nivel1 = ?id_nivel1");
        }
        if (filtro.getIdNivel2() != null) {
            sql.append(" and n.id_nivel2 = ?id_nivel2");
        }
        if (filtro.getIdNivel3() != null) {
            sql.append(" and n.id_nivel3 = ?id_nivel3");
        }
        if (filtro.getIdNivel4() != null) {
            sql.append(" and n.id_nivel4 = ?id_nivel4");
        }
        if (filtro.getIdNivel5() != null) {
            sql.append(" and n.id_nivel5 = ?id_nivel5");
        }
        if (filtro.getIdEstablecimiento() != null) {
            sql.append(" and n.id_establecimiento = ?id_establecimiento");
        }
        if (filtro.getIdSede() != null) {
            sql.append(" and n.id_sede = ?id_sede");
        }
        if (filtro.getIdPredio() != null) {
            sql.append(" and n.id_predio = ?id_predio");
        }
        // otros filtros
        if (filtro.getCodZona() != null) {
            sql.append(" and n.codigo_zona = ?cod_zona");
        }
        if (filtro.getCodSector() != null) {
            sql.append(" and n.codigo_sector = ?cod_sector");
        }

        // GROUP BY 
        if (!filtro.isAgrupamientoPredio()) {
            sql.append(" group by ");
            sql.append(agrupamiento.toString());
        }
        //ORDER BY       
        sql.append(" order by ");
        if (filtro.isAgrupamientoPredio()) {
            sql.append(" n.codigo_predio");
            sql.append(" ,d1.valor");
        } else {
            sql.append(agrupamiento.toString());
        }


        Query query = tpm.getEm().createNativeQuery(sql.toString());
        query.setParameter("id_tnt", tpm.getCurrentTenant());
        query.setParameter("periodo", filtro.getPeriodo());
        query.setParameter("idioma", filtro.getIdioma());
        query.setParameter("id_nivel0", filtro.getIdNivel0());
        if (filtro.getIdNivel1() != null) {
            query.setParameter("id_nivel1", filtro.getIdNivel1());
        }
        if (filtro.getIdNivel2() != null) {
            query.setParameter("id_nivel2", filtro.getIdNivel2());
        }
        if (filtro.getIdNivel3() != null) {
            query.setParameter("id_nivel3", filtro.getIdNivel3());
        }
        if (filtro.getIdNivel4() != null) {
            query.setParameter("id_nivel4", filtro.getIdNivel4());
        }
        if (filtro.getIdNivel5() != null) {
            query.setParameter("id_nivel5", filtro.getIdNivel5());
        }
        if (filtro.getIdEstablecimiento() != null) {
            query.setParameter("id_establecimiento", filtro.getIdEstablecimiento());
        }
        if (filtro.getIdSede() != null) {
            query.setParameter("id_sede", filtro.getIdSede());
        }
        if (filtro.getIdPredio() != null) {
            query.setParameter("id_predio", filtro.getIdPredio());
        }
        // otros filtros
        if (filtro.getCodZona() != null) {
            query.setParameter("cod_zona", filtro.getCodZona());
        }
        if (filtro.getCodSector() != null) {
            query.setParameter("cod_sector", filtro.getCodSector());
        }

        return query.getResultList();
    }

    private List<Object[]> consultarAccesibilidadInternaIndicadoresPostgre(FiltroAmbitoAccesibilidadInterna filtro) {
        StringBuilder sql = new StringBuilder();
// consulta por nivel de agrupamiento superior a predio
// SELECT
        sql.append(" select ");
        if (filtro.isAgrupamientoPredio()) {
            sql.append(" n.codigo_nivel1,n.nombre_nivel1");
            sql.append(",n.codigo_nivel2,n.nombre_nivel2");
            sql.append(",n.codigo_nivel3,n.nombre_nivel3");
            sql.append(",n.codigo_nivel4,n.nombre_nivel4");
            sql.append(",n.codigo_nivel5,n.nombre_nivel5");
            sql.append(", n.codigo_establecimiento, n.nombre_establecimiento");
            sql.append(", n.codigo_sede, n.nombre_sede");
            sql.append(", n.codigo_predio, n.nombre_predio");

            // *indicadores
            // #  espacios carecen accesibilidad discapacitados
            sql.append(" ,coalesce(tb_espacios_sin_acc.valor,'0') espacios_carece_accesibilidad");
            //total espacios
            sql.append(" ,coalesce(tb_total_espacios.valor,'0') total_espacios");
            // Proporción espacios
            sql.append(" ,to_number(coalesce(tb_espacios_sin_acc.valor,'0'),'9999999')/to_number(case when tb_total_espacios.valor = '0' then '1' else tb_total_espacios.valor end ,'9999999') proporcion_espacios");
            // edificio
            sql.append(" ,d1.valor edificio");
            // Accesibilidad a discapacitados
            sql.append(" ,tb_acc_disc.valor");
            // nivel o piso hasta el cual hay accesibilidad
            sql.append(" ,tb_niv_max.valor");
            // Tipo de elemento complementario
            sql.append(" ,tb_elemento.valor");
            // Condicion tipo de elemento complementario
            sql.append(" ,coalesce(tb_elemento_condicion.valor,'No Aplica')");
            // cumplimiento accesibilidad
            sql.append(" ,tb_cumplimiento.valor");
            //*otros
            sql.append(" , n.direccion_predio direccion_predio, n.nombre_zona zona");
            sql.append(" , n.nombre_sector sector, n.nombre_clima clima");
            // Condicion de Riesgo Antropico
            sql.append(" ,tbl_cond_ra.valor");
            // Condicion de Riesgo Natural
            sql.append(" ,tbl_cond_rn.valor");
        } else {
            sql.append(" distinct ");
            if (filtro.isAgrupamientoNivel1()) {
                sql.append(" n.codigo_nivel1,n.nombre_nivel1");
            }
            if (filtro.isAgrupamientoNivel2()) {
                sql.append("n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
            }
            if (filtro.isAgrupamientoNivel3()) {
                sql.append("n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
            }
            if (filtro.isAgrupamientoNivel4()) {
                sql.append("n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
                sql.append(",n.codigo_nivel4,n.nombre_nivel4");
            }
            if (filtro.isAgrupamientoNivel5()) {
                sql.append("n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
                sql.append(",n.codigo_nivel4,n.nombre_nivel4");
                sql.append(",n.codigo_nivel5,n.nombre_nivel5");
            }
            if (filtro.isAgrupamientoEstablecimiento()) {
                sql.append(" n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
                sql.append(",n.codigo_nivel4,n.nombre_nivel4");
                sql.append(",n.codigo_nivel5,n.nombre_nivel5");
                sql.append(", n.codigo_establecimiento, n.nombre_establecimiento");
            }
            if (filtro.isAgrupamientoSede()) {
                sql.append(" n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
                sql.append(",n.codigo_nivel4,n.nombre_nivel4");
                sql.append(",n.codigo_nivel5,n.nombre_nivel5");
                sql.append(", n.codigo_establecimiento, n.nombre_establecimiento");
                sql.append(", n.codigo_sede, n.nombre_sede");
            }
            //No de predios con al menos un edificio con acceso a discapacitado            
            sql.append(" ,coalesce(tbl_predios_acceso_discapacitados.valor,'0')");
            //No de predios con al menos un edificio que cumple la norma
            sql.append(" ,coalesce(tbl_predios_cumplen_accesibilidad.valor,'0')");
            //Total Predios
            sql.append(" ,coalesce(tbl_total_predio.valor,'0')");
            // Proporcion predios con al menos un edificio con acceso a discapacitado
            sql.append(" ,to_number(coalesce(tbl_predios_acceso_discapacitados.valor,'0'),'9999999')/to_number(case when tbl_total_predio.valor = '0' then '1' else tbl_total_predio.valor end ,'9999999') proporcion_acceso");
            // Proporcion predios con al menos un edificio que cumple la norma
            sql.append(" ,to_number(coalesce(tbl_predios_cumplen_accesibilidad.valor,'0'),'9999999')/to_number(case when tbl_total_predio.valor = '0' then '1' else tbl_total_predio.valor end ,'9999999') proporcion_cumplimiento");
        }
// FROM 
        sql.append(" from cier.ind_auxiliar_indicador aux");
        sql.append(" inner join cier.ind_auxiliar_consultas n on n.id_predio = aux.id_predio and n.periodo = aux.periodo and n.id_tnt = aux.id_tnt");

        String strSQLNivelAgrupamiento = this.getSQLNivelAgrupamiento(filtro);
        String strSQLConsultarIndicador = this.getSQLConsultarIndicadorAlmacenado();

        if (filtro.isAgrupamientoPredio()) {
            //edificio
            sql.append(" inner join cier.ind_auxiliar_respuesta d1 on d1.id_dig_instrumento = aux.id_dig_instrumento and d1.id_tnt = aux.id_tnt and d1.periodo = aux.periodo and d1.cod_respuesta=(select cier.get_cod_respuesta(31))");

            // #  espacios carecen accesibilidad discapacitados
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) as tb_espacios_sin_acc on tb_espacios_sin_acc.id_tnt = aux.id_tnt and tb_espacios_sin_acc.periodo = aux.periodo");
            sql.append(String.format(" and tb_espacios_sin_acc.cod_indicador = '%s'", ParamIndicador.IND_ACCINTERNA_NUMERO_ESPACIOS_CARECEN_ACCESIBILIDAD));
            sql.append(" and tb_espacios_sin_acc.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tb_espacios_sin_acc.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            //total espacios
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) as tb_total_espacios on tb_total_espacios.id_tnt = aux.id_tnt and tb_total_espacios.periodo = aux.periodo");
            sql.append(String.format(" and tb_total_espacios.cod_indicador = '%s'", ParamIndicador.IND_TOTAL_ESPACIOS));
            sql.append(" and tb_total_espacios.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tb_total_espacios.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            // Accesibilidad a discapacitados
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) as tb_acc_disc on tb_acc_disc.id_tnt = aux.id_tnt and tb_acc_disc.periodo = aux.periodo");
            sql.append(String.format(" and tb_acc_disc.cod_indicador = '%s'", ParamIndicador.IND_ACCINTERNA_ACCESO_DISCAPACITADO));
            sql.append(" and tb_acc_disc.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tb_acc_disc.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            sql.append(" and cast(tb_acc_disc.cod_valor as numeric) = d1.id_elemento");

            // nivel o piso hasta el cual hay accesibilidad
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) as tb_niv_max on tb_niv_max.id_tnt = aux.id_tnt and tb_niv_max.periodo = aux.periodo");
            sql.append(String.format(" and tb_niv_max.cod_indicador = '%s'", ParamIndicador.IND_ACCINTERNA_NIVEL_MAX_ACCESIBILIDAD));
            sql.append(" and tb_niv_max.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tb_niv_max.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            sql.append(" and cast(tb_niv_max.cod_valor as numeric) = d1.id_elemento");

            // Tipo de elemento complementario 
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) as tb_elemento on tb_elemento.id_tnt = aux.id_tnt and tb_elemento.periodo = aux.periodo");
            sql.append(String.format(" and tb_elemento.cod_indicador = '%s'", ParamIndicador.IND_ACCINTERNA_ELEMENTO_COMPLEMENTARIO));
            sql.append(" and tb_elemento.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tb_elemento.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            sql.append(" and cast(tb_elemento.cod_valor as numeric) = d1.id_elemento");

            //condicion elemento complementario
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) as tb_elemento_condicion on tb_elemento_condicion.id_tnt = aux.id_tnt and tb_elemento_condicion.periodo = aux.periodo");
            sql.append(String.format(" and tb_elemento_condicion.cod_indicador = '%s'", ParamIndicador.IND_ACCINTERNA_CONDICION_ELEMENTO_COMPLEMENTARIO));
            sql.append(" and tb_elemento_condicion.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tb_elemento_condicion.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            sql.append(" and cast(tb_elemento_condicion.cod_valor as numeric) = d1.id_elemento");

            // cumplimiento accesibilidad
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) as tb_cumplimiento on tb_cumplimiento.id_tnt = aux.id_tnt and tb_cumplimiento.periodo = aux.periodo");
            sql.append(String.format(" and tb_cumplimiento.cod_indicador = '%s'", ParamIndicador.IND_ACCINTERNA_ACCESO_DISCAPACITADO));
            sql.append(" and tb_cumplimiento.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tb_cumplimiento.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            sql.append(" and cast(tb_cumplimiento.cod_valor as numeric) = d1.id_elemento");

            // Condicion de Riesgo Antropico
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) as tbl_cond_ra on tbl_cond_ra.id_tnt = aux.id_tnt and tbl_cond_ra.periodo = aux.periodo");
            sql.append(String.format(" and tbl_cond_ra.cod_indicador = '%s'", ParamIndicador.IND_RIESGO_ANTROPICO_CONDICION_RIESGO));
            sql.append(" and tbl_cond_ra.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_cond_ra.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            // Condicion de Riesgo Natural
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) as tbl_cond_rn on tbl_cond_rn.id_tnt = aux.id_tnt and tbl_cond_rn.periodo = aux.periodo");
            sql.append(String.format(" and tbl_cond_rn.cod_indicador = '%s'", ParamIndicador.IND_RIESGO_NATURAL_CONDICION_RIESGO));
            sql.append(" and tbl_cond_rn.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_cond_rn.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
        } else {
            //No de predios con al menos un edificio con acceso a discapacitado
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) as tbl_predios_acceso_discapacitados on tbl_predios_acceso_discapacitados.id_tnt = aux.id_tnt and tbl_predios_acceso_discapacitados.periodo = aux.periodo");
            sql.append(String.format(" and tbl_predios_acceso_discapacitados.cod_indicador = '%s'", ParamIndicador.IND_ACCINTERNA_NUMERO_PREDIOS_ACCESIBLIDAD));
            sql.append(" and tbl_predios_acceso_discapacitados.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_predios_acceso_discapacitados.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            //No de predios con al menos un edificio que cumple la norma
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) as tbl_predios_cumplen_accesibilidad on tbl_predios_cumplen_accesibilidad.id_tnt = aux.id_tnt and tbl_predios_cumplen_accesibilidad.periodo = aux.periodo");
            sql.append(String.format(" and tbl_predios_cumplen_accesibilidad.cod_indicador = '%s'", ParamIndicador.IND_ACCINTERNA_NUMERO_PREDIOS_CUMPLEN_NIVEL_ACCESIBILIDAD));
            sql.append(" and tbl_predios_cumplen_accesibilidad.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_predios_cumplen_accesibilidad.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            //total predio
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) as tbl_total_predio on tbl_total_predio.id_tnt = aux.id_tnt and tbl_total_predio.periodo = aux.periodo");
            sql.append(String.format(" and tbl_total_predio.cod_indicador = '%s'", ParamIndicador.IND_TOTAL_PREDIOS));
            sql.append(" and tbl_total_predio.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_total_predio.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

        }

// WHERE
        sql.append(" where aux.id_tnt = ?id_tnt and aux.periodo = ?periodo");
        if (filtro.isAgrupamientoPredio()) {
            /*sql.append(" and (tbl_tipo1.valor IS NOT NULL or");
             sql.append(" tbl_tipo2.valor IS NOT NULL or");
             sql.append(" tbl_tipo3.valor IS NOT NULL)");*/

            sql.append(" and n.principal_establecimiento = 1");
        }
        if (filtro.getIdNivel0() != null) {
            sql.append(" and n.id_nivel0 = ?id_nivel0");
        }
        if (filtro.getIdNivel1() != null) {
            sql.append(" and n.id_nivel1 = ?id_nivel1");
        }
        if (filtro.getIdNivel2() != null) {
            sql.append(" and n.id_nivel2 = ?id_nivel2");
        }
        if (filtro.getIdNivel3() != null) {
            sql.append(" and n.id_nivel3 = ?id_nivel3");
        }
        if (filtro.getIdNivel4() != null) {
            sql.append(" and n.id_nivel4 = ?id_nivel4");
        }
        if (filtro.getIdNivel5() != null) {
            sql.append(" and n.id_nivel5 = ?id_nivel5");
        }
        if (filtro.getIdEstablecimiento() != null) {
            sql.append(" and n.id_establecimiento = ?id_establecimiento");
        }
        if (filtro.getIdSede() != null) {
            sql.append(" and n.id_sede = ?id_sede");
        }
        if (filtro.getIdPredio() != null) {
            sql.append(" and n.id_predio = ?id_predio");
        }
        //ORDER BY       
        if (filtro.isAgrupamientoPredio()) {
            sql.append(" order by ");
            sql.append(" n.codigo_predio");
            sql.append(" ,d1.valor");
        }

        Query query = tpm.getEm().createNativeQuery(sql.toString());
        query.setParameter("id_tnt", tpm.getCurrentTenant());
        query.setParameter("periodo", filtro.getPeriodo());
        query.setParameter("idioma", filtro.getIdioma());
        query.setParameter("id_nivel0", filtro.getIdNivel0());
        query.setParameter("nivel_agrupamiento", filtro.getAgrupamiento());
        if (filtro.getIdNivel1() != null) {
            query.setParameter("id_nivel1", filtro.getIdNivel1());
        }
        if (filtro.getIdNivel2() != null) {
            query.setParameter("id_nivel2", filtro.getIdNivel2());
        }
        if (filtro.getIdNivel3() != null) {
            query.setParameter("id_nivel3", filtro.getIdNivel3());
        }
        if (filtro.getIdNivel4() != null) {
            query.setParameter("id_nivel4", filtro.getIdNivel4());
        }
        if (filtro.getIdNivel5() != null) {
            query.setParameter("id_nivel5", filtro.getIdNivel5());
        }
        if (filtro.getIdEstablecimiento() != null) {
            query.setParameter("id_establecimiento", filtro.getIdEstablecimiento());
        }
        if (filtro.getIdSede() != null) {
            query.setParameter("id_sede", filtro.getIdSede());
        }
        if (filtro.getIdPredio() != null) {
            query.setParameter("id_predio", filtro.getIdPredio());
        }
        return query.getResultList();
    }

    private List<Object[]> consultarAccesibilidadInternaIndicadoresOracle(FiltroAmbitoAccesibilidadInterna filtro) {
        StringBuilder sql = new StringBuilder();
// consulta por nivel de agrupamiento superior a predio
// SELECT
        sql.append(" select ");
        if (filtro.isAgrupamientoPredio()) {
            sql.append(" n.codigo_nivel1,n.nombre_nivel1");
            sql.append(",n.codigo_nivel2,n.nombre_nivel2");
            sql.append(",n.codigo_nivel3,n.nombre_nivel3");
            sql.append(",n.codigo_nivel4,n.nombre_nivel4");
            sql.append(",n.codigo_nivel5,n.nombre_nivel5");
            sql.append(", n.codigo_establecimiento, n.nombre_establecimiento");
            sql.append(", n.codigo_sede, n.nombre_sede");
            sql.append(", n.codigo_predio, n.nombre_predio");

            // *indicadores
            // #  espacios carecen accesibilidad discapacitados
            sql.append(" ,coalesce(tb_espacios_sin_acc.valor,'0') espacios_carece_accesibilidad");
            //total espacios
            sql.append(" ,coalesce(tb_total_espacios.valor,'0') total_espacios");
            // Proporción espacios
            sql.append(" ,to_number(coalesce(tb_espacios_sin_acc.valor,'0'),'9999999')/to_number(case when tb_total_espacios.valor = '0' then '1' else tb_total_espacios.valor end ,'9999999') proporcion_espacios");
            // edificio
            sql.append(" ,d1.valor edificio");
            // Accesibilidad a discapacitados
            sql.append(" ,tb_acc_disc.valor");
            // nivel o piso hasta el cual hay accesibilidad
            sql.append(" ,tb_niv_max.valor");
            // Tipo de elemento complementario
            sql.append(" ,tb_elemento.valor");
            // Condicion tipo de elemento complementario
            sql.append(" ,coalesce(tb_elemento_condicion.valor,'No Aplica')");
            // cumplimiento accesibilidad
            sql.append(" ,tb_cumplimiento.valor");
            //*otros
            sql.append(" , n.direccion_predio direccion_predio, n.nombre_zona zona");
            sql.append(" , n.nombre_sector sector, n.nombre_clima clima");
            // Condicion de Riesgo Antropico
            sql.append(" ,tbl_cond_ra.valor");
            // Condicion de Riesgo Natural
            sql.append(" ,tbl_cond_rn.valor");
        } else {
            sql.append(" distinct ");
            if (filtro.isAgrupamientoNivel0()) {
                sql.append(" n.nombre_nivel0");
            }
            if (filtro.isAgrupamientoNivel1()) {
                sql.append(" n.codigo_nivel1,n.nombre_nivel1");
            }
            if (filtro.isAgrupamientoNivel2()) {
                sql.append("n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
            }
            if (filtro.isAgrupamientoNivel3()) {
                sql.append("n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
            }
            if (filtro.isAgrupamientoNivel4()) {
                sql.append("n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
                sql.append(",n.codigo_nivel4,n.nombre_nivel4");
            }
            if (filtro.isAgrupamientoNivel5()) {
                sql.append("n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
                sql.append(",n.codigo_nivel4,n.nombre_nivel4");
                sql.append(",n.codigo_nivel5,n.nombre_nivel5");
            }
            if (filtro.isAgrupamientoEstablecimiento()) {
                sql.append(" n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
                sql.append(",n.codigo_nivel4,n.nombre_nivel4");
                sql.append(",n.codigo_nivel5,n.nombre_nivel5");
                sql.append(", n.codigo_establecimiento, n.nombre_establecimiento");
            }
            if (filtro.isAgrupamientoSede()) {
                sql.append(" n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
                sql.append(",n.codigo_nivel4,n.nombre_nivel4");
                sql.append(",n.codigo_nivel5,n.nombre_nivel5");
                sql.append(", n.codigo_establecimiento, n.nombre_establecimiento");
                sql.append(", n.codigo_sede, n.nombre_sede");
            }
            //No de predios con al menos un edificio con acceso a discapacitado            
            sql.append(" ,coalesce(tbl_predios_acceso_disca.valor,'0')");
            //No de predios con al menos un edificio que cumple la norma
            sql.append(" ,coalesce(tbl_pred_cumplen_accesi.valor,'0')");
            //Total Predios
            sql.append(" ,coalesce(tbl_total_predio.valor,'0')");
            // Proporcion predios con al menos un edificio con acceso a discapacitado
            sql.append(" ,to_number(coalesce(tbl_predios_acceso_disca.valor,'0'),'9999999')/to_number(case when tbl_total_predio.valor = '0' then '1' else tbl_total_predio.valor end ,'9999999') proporcion_acceso");
            // Proporcion predios con al menos un edificio que cumple la norma
            sql.append(" ,to_number(coalesce(tbl_pred_cumplen_accesi.valor,'0'),'9999999')/to_number(case when tbl_total_predio.valor = '0' then '1' else tbl_total_predio.valor end ,'9999999') proporcion_cumplimiento");
        }
// FROM 
        sql.append(" from ind_auxiliar_indicador aux");
        sql.append(" inner join ind_auxiliar_consultas n on n.id_predio = aux.id_predio and n.periodo = aux.periodo and n.id_tnt = aux.id_tnt");

        String strSQLNivelAgrupamiento = this.getSQLNivelAgrupamiento(filtro);
        String strSQLConsultarIndicador = this.getSQLConsultarIndicadorAlmacenado();

        if (filtro.isAgrupamientoPredio()) {
            //edificio
            sql.append(" inner join (select id_tnt,periodo,id_predio,resp_073 valor,id_dig_elemento id_elemento from ind_aux_respuesta_ele where resp_073 is not null) d1 on d1.id_predio = aux.id_predio and d1.id_tnt = aux.id_tnt and d1.periodo = aux.periodo");

            // #  espacios carecen accesibilidad discapacitados
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tb_espacios_sin_acc on tb_espacios_sin_acc.id_tnt = aux.id_tnt and tb_espacios_sin_acc.periodo = aux.periodo");
            sql.append(String.format(" and tb_espacios_sin_acc.cod_indicador = '%s'", ParamIndicador.IND_ACCINTERNA_NUMERO_ESPACIOS_CARECEN_ACCESIBILIDAD));
            sql.append(" and tb_espacios_sin_acc.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tb_espacios_sin_acc.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            //total espacios
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tb_total_espacios on tb_total_espacios.id_tnt = aux.id_tnt and tb_total_espacios.periodo = aux.periodo");
            sql.append(String.format(" and tb_total_espacios.cod_indicador = '%s'", ParamIndicador.IND_TOTAL_ESPACIOS));
            sql.append(" and tb_total_espacios.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tb_total_espacios.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            // Accesibilidad a discapacitados
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tb_acc_disc on tb_acc_disc.id_tnt = aux.id_tnt and tb_acc_disc.periodo = aux.periodo");
            sql.append(String.format(" and tb_acc_disc.cod_indicador = '%s'", ParamIndicador.IND_ACCINTERNA_ACCESO_DISCAPACITADO));
            sql.append(" and tb_acc_disc.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tb_acc_disc.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            sql.append(" and tb_acc_disc.cod_valor = d1.id_elemento");

            // nivel o piso hasta el cual hay accesibilidad
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tb_niv_max on tb_niv_max.id_tnt = aux.id_tnt and tb_niv_max.periodo = aux.periodo");
            sql.append(String.format(" and tb_niv_max.cod_indicador = '%s'", ParamIndicador.IND_ACCINTERNA_NIVEL_MAX_ACCESIBILIDAD));
            sql.append(" and tb_niv_max.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tb_niv_max.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            sql.append(" and tb_niv_max.cod_valor = d1.id_elemento");

            // Tipo de elemento complementario 
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tb_elemento on tb_elemento.id_tnt = aux.id_tnt and tb_elemento.periodo = aux.periodo");
            sql.append(String.format(" and tb_elemento.cod_indicador = '%s'", ParamIndicador.IND_ACCINTERNA_ELEMENTO_COMPLEMENTARIO));
            sql.append(" and tb_elemento.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tb_elemento.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            sql.append(" and tb_elemento.cod_valor = d1.id_elemento");

            //condicion elemento complementario
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tb_elemento_condicion on tb_elemento_condicion.id_tnt = aux.id_tnt and tb_elemento_condicion.periodo = aux.periodo");
            sql.append(String.format(" and tb_elemento_condicion.cod_indicador = '%s'", ParamIndicador.IND_ACCINTERNA_CONDICION_ELEMENTO_COMPLEMENTARIO));
            sql.append(" and tb_elemento_condicion.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tb_elemento_condicion.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            sql.append(" and tb_elemento_condicion.cod_valor = d1.id_elemento");

            // cumplimiento accesibilidad
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tb_cumplimiento on tb_cumplimiento.id_tnt = aux.id_tnt and tb_cumplimiento.periodo = aux.periodo");
            sql.append(String.format(" and tb_cumplimiento.cod_indicador = '%s'", ParamIndicador.IND_ACCINTERNA_ACCESO_DISCAPACITADO));
            sql.append(" and tb_cumplimiento.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tb_cumplimiento.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            sql.append(" and tb_cumplimiento.cod_valor = d1.id_elemento");

            // Condicion de Riesgo Antropico
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_cond_ra on tbl_cond_ra.id_tnt = aux.id_tnt and tbl_cond_ra.periodo = aux.periodo");
            sql.append(String.format(" and tbl_cond_ra.cod_indicador = '%s'", ParamIndicador.IND_RIESGO_ANTROPICO_CONDICION_RIESGO));
            sql.append(" and tbl_cond_ra.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_cond_ra.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            // Condicion de Riesgo Natural
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_cond_rn on tbl_cond_rn.id_tnt = aux.id_tnt and tbl_cond_rn.periodo = aux.periodo");
            sql.append(String.format(" and tbl_cond_rn.cod_indicador = '%s'", ParamIndicador.IND_RIESGO_NATURAL_CONDICION_RIESGO));
            sql.append(" and tbl_cond_rn.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_cond_rn.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
        } else {
            //No de predios con al menos un edificio con acceso a discapacitado
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_predios_acceso_disca on tbl_predios_acceso_disca.id_tnt = aux.id_tnt and tbl_predios_acceso_disca.periodo = aux.periodo");
            sql.append(String.format(" and tbl_predios_acceso_disca.cod_indicador = '%s'", ParamIndicador.IND_ACCINTERNA_NUMERO_PREDIOS_ACCESIBLIDAD));
            sql.append(" and tbl_predios_acceso_disca.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_predios_acceso_disca.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            //No de predios con al menos un edificio que cumple la norma
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_pred_cumplen_accesi on tbl_pred_cumplen_accesi.id_tnt = aux.id_tnt and tbl_pred_cumplen_accesi.periodo = aux.periodo");
            sql.append(String.format(" and tbl_pred_cumplen_accesi.cod_indicador = '%s'", ParamIndicador.IND_ACCINTERNA_NUMERO_PREDIOS_CUMPLEN_NIVEL_ACCESIBILIDAD));
            sql.append(" and tbl_pred_cumplen_accesi.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_pred_cumplen_accesi.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            //total predio
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_total_predio on tbl_total_predio.id_tnt = aux.id_tnt and tbl_total_predio.periodo = aux.periodo");
            sql.append(String.format(" and tbl_total_predio.cod_indicador = '%s'", ParamIndicador.IND_TOTAL_PREDIOS));
            sql.append(" and tbl_total_predio.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_total_predio.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

        }

// WHERE
        sql.append(" where aux.id_tnt = ?id_tnt and aux.periodo = ?periodo");
        if (filtro.isAgrupamientoPredio()) {
            /*sql.append(" and (tbl_tipo1.valor IS NOT NULL or");
             sql.append(" tbl_tipo2.valor IS NOT NULL or");
             sql.append(" tbl_tipo3.valor IS NOT NULL)");*/

            sql.append(" and n.principal_establecimiento = 1");
        }
        if (filtro.getIdNivel0() != null) {
            sql.append(" and n.id_nivel0 = ?id_nivel0");
        }
        if (filtro.getIdNivel1() != null) {
            sql.append(" and n.id_nivel1 = ?id_nivel1");
        }
        if (filtro.getIdNivel2() != null) {
            sql.append(" and n.id_nivel2 = ?id_nivel2");
        }
        if (filtro.getIdNivel3() != null) {
            sql.append(" and n.id_nivel3 = ?id_nivel3");
        }
        if (filtro.getIdNivel4() != null) {
            sql.append(" and n.id_nivel4 = ?id_nivel4");
        }
        if (filtro.getIdNivel5() != null) {
            sql.append(" and n.id_nivel5 = ?id_nivel5");
        }
        if (filtro.getIdEstablecimiento() != null) {
            sql.append(" and n.id_establecimiento = ?id_establecimiento");
        }
        if (filtro.getIdSede() != null) {
            sql.append(" and n.id_sede = ?id_sede");
        }
        if (filtro.getIdPredio() != null) {
            sql.append(" and n.id_predio = ?id_predio");
        }
        //ORDER BY       
        if (filtro.isAgrupamientoPredio()) {
            sql.append(" order by ");
            sql.append(" n.codigo_predio");
            sql.append(" ,d1.valor");
        }

        Query query = tpm.getEm().createNativeQuery(sql.toString());
        query.setParameter("id_tnt", tpm.getCurrentTenant());
        query.setParameter("periodo", filtro.getPeriodo());
        query.setParameter("idioma", filtro.getIdioma());
        query.setParameter("id_nivel0", filtro.getIdNivel0());
        query.setParameter("nivel_agrupamiento", filtro.getAgrupamiento());
        if (filtro.getIdNivel1() != null) {
            query.setParameter("id_nivel1", filtro.getIdNivel1());
        }
        if (filtro.getIdNivel2() != null) {
            query.setParameter("id_nivel2", filtro.getIdNivel2());
        }
        if (filtro.getIdNivel3() != null) {
            query.setParameter("id_nivel3", filtro.getIdNivel3());
        }
        if (filtro.getIdNivel4() != null) {
            query.setParameter("id_nivel4", filtro.getIdNivel4());
        }
        if (filtro.getIdNivel5() != null) {
            query.setParameter("id_nivel5", filtro.getIdNivel5());
        }
        if (filtro.getIdEstablecimiento() != null) {
            query.setParameter("id_establecimiento", filtro.getIdEstablecimiento());
        }
        if (filtro.getIdSede() != null) {
            query.setParameter("id_sede", filtro.getIdSede());
        }
        if (filtro.getIdPredio() != null) {
            query.setParameter("id_predio", filtro.getIdPredio());
        }
        return query.getResultList();
    }

    @Override
    public List<Object[]> consultarRedistribucion(FiltroAmbitoRedistribucion filtro) {
        if (filtro.isConsultaDeTiempoReal()) {
            if (ParamBaseDatos.ORACLE.equals(UtilProperties.getDbMotor())) {
                return this.consultarRedistribucionTiempoRealOracle(filtro);
            } else {
                return this.consultarRedistribucionTiempoRealPostgre(filtro);
            }
        } else {
            if (ParamBaseDatos.ORACLE.equals(UtilProperties.getDbMotor())) {
                return this.consultarRedistribucionIndicadoresOracle(filtro);
            } else {
                return this.consultarRedistribucionIndicadoresPostgre(filtro);
            }
        }
    }

    private List<Object[]> consultarRedistribucionTiempoRealPostgre(FiltroAmbitoRedistribucion filtro) {
        String codInstrumento = this.consultarCodInstrumentoPorPeriodo(filtro.getPeriodo());
        StringBuilder sql = new StringBuilder();
        StringBuilder orden = new StringBuilder();
//SELECT
        sql.append(" select distinct ");
        if (filtro.isAgrupamientoPredio()) {
            orden.append(" n.codigo_nivel1,n.nombre_nivel1");
            orden.append(",n.codigo_nivel2,n.nombre_nivel2");
            orden.append(",n.codigo_nivel3,n.nombre_nivel3");
            orden.append(",n.codigo_nivel4,n.nombre_nivel4");
            orden.append(",n.codigo_nivel5,n.nombre_nivel5");
            orden.append(" ,n.codigo_establecimiento, n.nombre_establecimiento");
            orden.append(" ,n.codigo_sede, n.nombre_sede");
            orden.append(" ,n.codigo_predio, n.nombre_predio");
            // datos informativos
            orden.append(" ,n.direccion_predio, n.propiedad_predio");
            orden.append(" ,n.nombre_zona, n.nombre_sector, n.nombre_clima");
            sql.append(orden.toString());
            // indicadores
            sql.append(" ,etnias.etnias");
            //alterno_varia_horario_total_estudiantes
            sql.append(" ,jornada.alterno_varia_horario_total_estudiantes");
            sql.append(" ,case when jornada.alterno_varia_horario_cupos >= 0 then ceil(jornada.alterno_varia_horario_cupos) else floor(jornada.alterno_varia_horario_cupos) end");
            sql.append(" ,jornada.alterno_varia_horario_utilizacion_estandar");
            //completa_total_estudiantes
            sql.append(" ,jornada.completa_total_estudiantes");
            sql.append(" ,case when jornada.completa_total_cupos >= 0 then ceil(jornada.completa_total_cupos) else floor(jornada.completa_total_cupos) end");
            sql.append(" ,jornada.completa_total_utilizacion_estandar");
            //doble_mañana_tarde_total_estudiantes
            sql.append(" ,jornada.doble_mañana_tarde_total_estudiantes");
            sql.append(" ,case when jornada.doble_mañana_tarde_cupos >= 0 then ceil(jornada.doble_mañana_tarde_cupos) else floor(jornada.doble_mañana_tarde_cupos) end");
            sql.append(" ,jornada.doble_mañana_tarde_utilizacion_estandar");
            //horario_ampliado_total_estudiantes
            sql.append(" ,jornada.horario_ampliado_total_estudiantes");
            sql.append(" ,case when jornada.horario_ampliado_cupos >= 0 then ceil(jornada.horario_ampliado_cupos) else floor(jornada.horario_ampliado_cupos) end");
            sql.append(" ,jornada.horario_ampliado_utilizacion_estandar");
            //mañana_total_estudiantes
            sql.append(" ,jornada.mañana_total_estudiantes");
            sql.append(" ,case when jornada.mañana_cupos >= 0 then ceil(jornada.mañana_cupos) else floor(jornada.mañana_cupos) end");
            sql.append(" ,jornada.mañana_utilizacion_estandar");
            //nocturna_total_estudiantes
            sql.append(" ,jornada.nocturna_total_estudiantes");
            sql.append(" ,case when jornada.nocturna_cupos >= 0 then ceil(jornada.nocturna_cupos) else floor(jornada.nocturna_cupos) end");
            sql.append(" ,jornada.nocturna_utilizacion_estandar");
            //tarde_total_estudiantes
            sql.append(" ,jornada.tarde_total_estudiantes");
            sql.append(" ,case when jornada.tarde_cupos >= 0 then ceil(jornada.tarde_cupos) else floor(jornada.tarde_cupos) end");
            sql.append(" ,jornada.tarde_utilizacion_estandar");
            //triple_jornada_total_estudiantes
            sql.append(" ,jornada.triple_jornada_total_estudiantes");
            sql.append(" ,case when jornada.triple_jornada_cupos >= 0 then ceil(jornada.triple_jornada_cupos) else floor(jornada.triple_jornada_cupos) end");
            sql.append(" ,jornada.triple_jornada_utilizacion_estandar");
            //vespertina_total_estudiantes
            sql.append(" ,jornada.vespertina_total_estudiantes");
            sql.append(" ,case when jornada.vespertina_cupos >= 0 then ceil(jornada.vespertina_cupos) else floor(jornada.vespertina_cupos) end");
            sql.append(" ,jornada.vespertina_utilizacion_estandar");
            //otra_total_estudiantes
            sql.append(" ,jornada.otra_total_estudiantes");
            sql.append(" ,case when jornada.otra_cupos >= 0 then ceil(jornada.otra_cupos) else floor(jornada.otra_cupos) end");
            sql.append(" ,jornada.otra_utilizacion_estandar");
            //indicadores
            // utilizacion
            sql.append(" ,cupo.utilizacion_total");
            // total cupos
            sql.append(" ,case when cupo.cupos_total >= 0 then ceil(cupo.cupos_total) else floor(cupo.cupos_total) end");

        } else {
            if (filtro.isAgrupamientoNivel0()) {
                orden.append(" n.nombre_nivel0");
            }
            if (filtro.isAgrupamientoNivel1()) {
                orden.append(" n.codigo_nivel1,n.nombre_nivel1");
            }
            if (filtro.isAgrupamientoNivel2()) {
                orden.append(" n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
            }
            if (filtro.isAgrupamientoNivel3()) {
                orden.append(" n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
            }
            if (filtro.isAgrupamientoNivel4()) {
                orden.append(" n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
                orden.append(",n.codigo_nivel4,n.nombre_nivel4");
            }
            if (filtro.isAgrupamientoNivel5()) {
                orden.append(" n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
                orden.append(",n.codigo_nivel4,n.nombre_nivel4");
                orden.append(",n.codigo_nivel5,n.nombre_nivel5");
            }
            if (filtro.isAgrupamientoEstablecimiento()) {
                orden.append(" n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
                orden.append(",n.codigo_nivel4,n.nombre_nivel4");
                orden.append(",n.codigo_nivel5,n.nombre_nivel5");
                orden.append(" ,n.codigo_establecimiento, n.nombre_establecimiento");
            }
            if (filtro.isAgrupamientoSede()) {
                orden.append(" n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
                orden.append(",n.codigo_nivel4,n.nombre_nivel4");
                orden.append(",n.codigo_nivel5,n.nombre_nivel5");
                orden.append(" ,n.codigo_establecimiento, n.nombre_establecimiento");
                orden.append(" ,n.codigo_sede, n.nombre_sede");
            }
            sql.append(orden.toString());
            // indicadores
            // saturacion
            sql.append(" ,sat.saturados");
            sql.append(" ,sat.sub_utilizados");
            // utilizacion
            sql.append(" ,cupo.utilizacion_total");
            // total cupos
            sql.append(" ,case when cupo.cupos_total >= 0 then ceil(cupo.cupos_total) else floor(cupo.cupos_total) end");
            // total predios
            sql.append(" ,coalesce(total_predio.total,0)");
        }
// FROM 
        sql.append(" from cier.ind_auxiliar_indicador aux");
        sql.append(" inner join cier.ind_auxiliar_consultas n on n.id_predio = aux.id_predio and n.periodo = aux.periodo and n.id_tnt = aux.id_tnt");
        String strSQLNivelAgrupamiento = this.getSQLNivelAgrupamiento(filtro);
        //  cupos total
        sql.append(" left join (");
        sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_REDISTRUBUCION_CUPOS_TOTAL, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
        sql.append(String.format(" ) as cupo on cupo.%1$s = n.%1$s", strSQLNivelAgrupamiento));
        sql.append(" and cupo.periodo = aux.periodo and cupo.id_tnt = aux.id_tnt");

        if (filtro.isAgrupamientoPredio()) {
            Parametro formatoSQLCuposJornada = facParam.consultarParametro(ParamSistema.SQL_FORMATO_CONSULTAR_IND_REDISTRUBUCION_CUPOS_JORNADA.name());
            String sqlCuposJornada = this.consultarFormulaSQLIndicador(ParamIndicador.IND_REDISTRUBUCION_CUPOS_JORNADA, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());

            sql.append(" left join (");
            sql.append(String.format(formatoSQLCuposJornada.getValor(), sqlCuposJornada));
            sql.append(" ) as jornada on jornada.id_dig_instrumento = aux.id_dig_instrumento and jornada.id_predio = aux.id_predio");

            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ETNIAS_PREDIO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) as etnias on etnias.id_dig_instrumento = aux.id_dig_instrumento and etnias.id_predio = aux.id_predio");
        } else {
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_REDISTRUBUCION_PREDIOS_SATURADOS, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
            sql.append(String.format(" ) as sat on sat.%1$s = n.%1$s", strSQLNivelAgrupamiento));
            sql.append(" and sat.periodo = aux.periodo and sat.id_tnt = aux.id_tnt");

            //TotalPredios
            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_TOTAL_PREDIOS, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) as total_predio on total_predio.id_dig_instrumento = aux.id_dig_instrumento and total_predio.id_predio = aux.id_predio and total_predio.id_tnt = aux.id_tnt");
        }

// WHERE
        sql.append(" where aux.id_tnt = ?id_tnt and aux.periodo = ?periodo");
        if (filtro.getIdNivel0() != null) {
            sql.append(" and n.id_nivel0 = ?id_nivel0");
        }
        if (filtro.getIdNivel1() != null) {
            sql.append(" and n.id_nivel1 = ?id_nivel1");
        }
        if (filtro.getIdNivel2() != null) {
            sql.append(" and n.id_nivel2 = ?id_nivel2");
        }
        if (filtro.getIdNivel3() != null) {
            sql.append(" and n.id_nivel3 = ?id_nivel3");
        }
        if (filtro.getIdNivel4() != null) {
            sql.append(" and n.id_nivel4 = ?id_nivel4");
        }
        if (filtro.getIdNivel5() != null) {
            sql.append(" and n.id_nivel5 = ?id_nivel5");
        }
        if (filtro.getIdEstablecimiento() != null) {
            sql.append(" and n.id_establecimiento = ?id_establecimiento");
        }
        if (filtro.getIdSede() != null) {
            sql.append(" and n.id_sede = ?id_sede");
        }
        if (filtro.getIdPredio() != null) {
            sql.append(" and n.id_predio = ?id_predio");
        }
        // otros filtros
        if (filtro.getCodZona() != null) {
            sql.append(" and n.codigo_zona = ?cod_zona");
        }
        if (filtro.getCodSector() != null) {
            sql.append(" and n.codigo_sector = ?cod_sector");
        }

        // EXCLUYENDO INFORMACIÓN NULA
        if (filtro.isAgrupamientoPredio()) {
            sql.append(" and not (cupo.id_predio is null");
            sql.append(" and jornada.id_predio is null");
            sql.append(" and etnias.id_predio is null)");
        } else {
            sql.append(String.format(" and not (cupo.%s is null", strSQLNivelAgrupamiento));
            sql.append(String.format(" and sat.%s is null)", strSQLNivelAgrupamiento));
        }
        // ORDER BY
        sql.append(" order by ").append(orden.toString());


        String auxSql = sql.toString().replace(ParamSistema.SQL_FILTROS_POR_ATRIBUTOS, this.getSQLFiltrosAtributos(filtro));
        auxSql = auxSql.replaceAll("\\?start", "");
        auxSql = auxSql.replaceAll("\\?end", "");
        // otros filtros
        if (filtro.getCodZona() != null) {
            auxSql = auxSql.replaceAll("\\?cod_zona", "'" + filtro.getCodZona() + "'");
        }
        if (filtro.getCodSector() != null) {
            auxSql = auxSql.replaceAll("\\?cod_sector", "'" + filtro.getCodSector() + "'");
        }

        Query query = tpm.getEm().createNativeQuery(auxSql);
        query.setParameter("id_tnt", tpm.getCurrentTenant());
        query.setParameter("periodo", filtro.getPeriodo());
        query.setParameter("idioma", filtro.getIdioma());
        query.setParameter("id_nivel0", filtro.getIdNivel0());
        if (filtro.getIdNivel1() != null) {
            query.setParameter("id_nivel1", filtro.getIdNivel1());
        }
        if (filtro.getIdNivel2() != null) {
            query.setParameter("id_nivel2", filtro.getIdNivel2());
        }
        if (filtro.getIdNivel3() != null) {
            query.setParameter("id_nivel3", filtro.getIdNivel3());
        }
        if (filtro.getIdNivel4() != null) {
            query.setParameter("id_nivel4", filtro.getIdNivel4());
        }
        if (filtro.getIdNivel5() != null) {
            query.setParameter("id_nivel5", filtro.getIdNivel5());
        }
        if (filtro.getIdEstablecimiento() != null) {
            query.setParameter("id_establecimiento", filtro.getIdEstablecimiento());
        }
        if (filtro.getIdSede() != null) {
            query.setParameter("id_sede", filtro.getIdSede());
        }
        if (filtro.getIdPredio() != null) {
            query.setParameter("id_predio", filtro.getIdPredio());
        }


        return query.getResultList();
    }

    private List<Object[]> consultarRedistribucionTiempoRealOracle(FiltroAmbitoRedistribucion filtro) {
        String codInstrumento = this.consultarCodInstrumentoPorPeriodo(filtro.getPeriodo());
        StringBuilder sql = new StringBuilder();
        StringBuilder orden = new StringBuilder();
//SELECT
        sql.append(" select distinct ");
        if (filtro.isAgrupamientoPredio()) {
            orden.append(" n.codigo_nivel1,n.nombre_nivel1");
            orden.append(",n.codigo_nivel2,n.nombre_nivel2");
            orden.append(",n.codigo_nivel3,n.nombre_nivel3");
            orden.append(",n.codigo_nivel4,n.nombre_nivel4");
            orden.append(",n.codigo_nivel5,n.nombre_nivel5");
            orden.append(" ,n.codigo_establecimiento, n.nombre_establecimiento");
            orden.append(" ,n.codigo_sede, n.nombre_sede");
            orden.append(" ,n.codigo_predio, n.nombre_predio");
            // datos informativos
            orden.append(" ,n.direccion_predio, n.propiedad_predio");
            orden.append(" ,n.nombre_zona, n.nombre_sector, n.nombre_clima");
            sql.append(orden.toString());
            // indicadores
            sql.append(" ,etnias.etnias");
            //alterno_varia_horario_tot_estu
            sql.append(" ,jornada.alterno_varia_horario_tot_estu");
            sql.append(" ,round(char_to_double(jornada.alterno_varia_horario_cupos))");
            sql.append(" ,jornada.alterno_varia_horario_util_est");
            //completa_total_estudiantes
            sql.append(" ,jornada.completa_total_estudiantes");
            sql.append(" ,round(char_to_double(jornada.completa_total_cupos))");
            sql.append(" ,jornada.completa_total_util_estandar");
            //doble_maana_tarde_tot_estud
            sql.append(" ,jornada.doble_maana_tarde_tot_estud");
            sql.append(" ,round(char_to_double(jornada.doble_mañana_tarde_cupos))");
            sql.append(" ,jornada.doble_maana_tarde_util_estanda");
            //horario_ampliado_tot_estudiant
            sql.append(" ,jornada.horario_ampliado_tot_estudiant");
            sql.append(" ,round(char_to_double(jornada.horario_ampliado_cupos))");
            sql.append(" ,jornada.horario_ampliado_utiliz_estand");
            //mañana_total_estudiantes
            sql.append(" ,jornada.mañana_total_estudiantes");
            sql.append(" ,round(char_to_double(jornada.mañana_cupos))");
            sql.append(" ,jornada.mañana_utilizacion_estandar");
            //nocturna_total_estudiantes
            sql.append(" ,jornada.nocturna_total_estudiantes");
            sql.append(" ,round(char_to_double(jornada.nocturna_cupos))");
            sql.append(" ,jornada.nocturna_utilizacion_estandar");
            //tarde_total_estudiantes
            sql.append(" ,jornada.tarde_total_estudiantes");
            sql.append(" ,round(char_to_double(jornada.tarde_cupos))");
            sql.append(" ,jornada.tarde_utilizacion_estandar");
            //triple_jornada_tot_estudiantes
            sql.append(" ,jornada.triple_jornada_tot_estudiantes");
            sql.append(" ,round(char_to_double(jornada.triple_jornada_cupos))");
            sql.append(" ,jornada.triple_jornada_util_estandar");
            //vespertina_total_estudiantes
            sql.append(" ,jornada.vespertina_total_estudiantes");
            sql.append(" ,round(char_to_double(jornada.vespertina_cupos))");
            sql.append(" ,jornada.vespertina_util_estandar");
            //otra_total_estudiantes
            sql.append(" ,jornada.otra_total_estudiantes");
            sql.append(" ,round(char_to_double(jornada.otra_cupos))");
            sql.append(" ,jornada.otra_utilizacion_estandar");
            //indicadores
            // utilizacion
            sql.append(" ,cupo.utilizacion_total");
            // total cupos
            sql.append(" ,round(char_to_double(cupo.cupos_total))");

        } else {
            if (filtro.isAgrupamientoNivel0()) {
                orden.append(" n.nombre_nivel0");
            }
            if (filtro.isAgrupamientoNivel1()) {
                orden.append(" n.codigo_nivel1,n.nombre_nivel1");
            }
            if (filtro.isAgrupamientoNivel2()) {
                orden.append(" n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
            }
            if (filtro.isAgrupamientoNivel3()) {
                orden.append(" n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
            }
            if (filtro.isAgrupamientoNivel4()) {
                orden.append(" n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
                orden.append(",n.codigo_nivel4,n.nombre_nivel4");
            }
            if (filtro.isAgrupamientoNivel5()) {
                orden.append(" n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
                orden.append(",n.codigo_nivel4,n.nombre_nivel4");
                orden.append(",n.codigo_nivel5,n.nombre_nivel5");
            }
            if (filtro.isAgrupamientoEstablecimiento()) {
                orden.append(" n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
                orden.append(",n.codigo_nivel4,n.nombre_nivel4");
                orden.append(",n.codigo_nivel5,n.nombre_nivel5");
                orden.append(" ,n.codigo_establecimiento, n.nombre_establecimiento");
            }
            if (filtro.isAgrupamientoSede()) {
                orden.append(" n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
                orden.append(",n.codigo_nivel4,n.nombre_nivel4");
                orden.append(",n.codigo_nivel5,n.nombre_nivel5");
                orden.append(" ,n.codigo_establecimiento, n.nombre_establecimiento");
                orden.append(" ,n.codigo_sede, n.nombre_sede");
            }
            sql.append(orden.toString());
            // indicadores
            // saturacion
            sql.append(" ,sat.saturados");
            sql.append(" ,sat.sub_utilizados");
            // utilizacion
            sql.append(" ,cupo.utilizacion_total");
            // total cupos
            sql.append(" ,round(cupo.cupos_total,2) ");
            // total predios
            sql.append(" ,coalesce(total_predio.total,0)");
        }
// FROM 
        sql.append(" from ind_auxiliar_indicador aux");
        sql.append(" inner join ind_auxiliar_consultas n on n.id_predio = aux.id_predio and n.periodo = aux.periodo and n.id_tnt = aux.id_tnt");
        String strSQLNivelAgrupamiento = this.getSQLNivelAgrupamiento(filtro);
        //  cupos total
        sql.append(" left join (");
        sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_REDISTRUBUCION_CUPOS_TOTAL, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
        sql.append(String.format(" ) cupo on cupo.%1$s = n.%1$s", strSQLNivelAgrupamiento));
        sql.append(" and cupo.periodo = aux.periodo and cupo.id_tnt = aux.id_tnt");

        if (filtro.isAgrupamientoPredio()) {
            Parametro formatoSQLCuposJornada = facParam.consultarParametro(ParamSistema.SQL_FORMATO_CONSULTAR_IND_REDISTRUBUCION_CUPOS_JORNADA.name());
            String sqlCuposJornada = this.consultarFormulaSQLIndicador(ParamIndicador.IND_REDISTRUBUCION_CUPOS_JORNADA, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());

            sql.append(" left join (");
            sql.append(String.format(formatoSQLCuposJornada.getValor(), sqlCuposJornada));
            sql.append(" ) jornada on jornada.id_predio = aux.id_predio");

            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ETNIAS_PREDIO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) etnias on etnias.id_predio = aux.id_predio");
        } else {
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_REDISTRUBUCION_PREDIOS_SATURADOS, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
            sql.append(String.format(" ) sat on sat.%1$s = n.%1$s", strSQLNivelAgrupamiento));
            sql.append(" and sat.periodo = aux.periodo and sat.id_tnt = aux.id_tnt");

            //TotalPredios
            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_TOTAL_PREDIOS, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) total_predio on total_predio.id_predio = aux.id_predio and total_predio.id_tnt = aux.id_tnt");
        }

// WHERE
        sql.append(" where aux.id_tnt = ?id_tnt and aux.periodo = ?periodo");
        if (filtro.getIdNivel0() != null) {
            sql.append(" and n.id_nivel0 = ?id_nivel0");
        }
        if (filtro.getIdNivel1() != null) {
            sql.append(" and n.id_nivel1 = ?id_nivel1");
        }
        if (filtro.getIdNivel2() != null) {
            sql.append(" and n.id_nivel2 = ?id_nivel2");
        }
        if (filtro.getIdNivel3() != null) {
            sql.append(" and n.id_nivel3 = ?id_nivel3");
        }
        if (filtro.getIdNivel4() != null) {
            sql.append(" and n.id_nivel4 = ?id_nivel4");
        }
        if (filtro.getIdNivel5() != null) {
            sql.append(" and n.id_nivel5 = ?id_nivel5");
        }
        if (filtro.getIdEstablecimiento() != null) {
            sql.append(" and n.id_establecimiento = ?id_establecimiento");
        }
        if (filtro.getIdSede() != null) {
            sql.append(" and n.id_sede = ?id_sede");
        }
        if (filtro.getIdPredio() != null) {
            sql.append(" and n.id_predio = ?id_predio");
        }
        // otros filtros
        if (filtro.getCodZona() != null) {
            sql.append(" and n.codigo_zona = ?cod_zona");
        }
        if (filtro.getCodSector() != null) {
            sql.append(" and n.codigo_sector = ?cod_sector");
        }

        // EXCLUYENDO INFORMACIÓN NULA
        if (filtro.isAgrupamientoPredio()) {
            sql.append(" and not (cupo.id_predio is null");
            sql.append(" and jornada.id_predio is null");
            sql.append(" and etnias.id_predio is null)");
        } else {
            sql.append(String.format(" and not (cupo.%s is null", strSQLNivelAgrupamiento));
            sql.append(String.format(" and sat.%s is null)", strSQLNivelAgrupamiento));
        }
        // ORDER BY
        sql.append(" order by ").append(orden.toString());

        String auxSql = sql.toString();
        if (ParamBaseDatos.POSTGRE.equals(UtilProperties.getDbMotor())) {
            auxSql = auxSql.replaceAll("\\?start", "");
            auxSql = auxSql.replaceAll("\\?end", "");
        }

        Query query = tpm.getEm().createNativeQuery(auxSql.replace(ParamSistema.SQL_FILTROS_POR_ATRIBUTOS, this.getSQLFiltrosAtributos(filtro)));
        query.setParameter("id_tnt", tpm.getCurrentTenant());
        query.setParameter("periodo", filtro.getPeriodo());
        query.setParameter("idioma", filtro.getIdioma());
        query.setParameter("id_nivel0", filtro.getIdNivel0());
        if (filtro.getIdNivel1() != null) {
            query.setParameter("id_nivel1", filtro.getIdNivel1());
        }
        if (filtro.getIdNivel2() != null) {
            query.setParameter("id_nivel2", filtro.getIdNivel2());
        }
        if (filtro.getIdNivel3() != null) {
            query.setParameter("id_nivel3", filtro.getIdNivel3());
        }
        if (filtro.getIdNivel4() != null) {
            query.setParameter("id_nivel4", filtro.getIdNivel4());
        }
        if (filtro.getIdNivel5() != null) {
            query.setParameter("id_nivel5", filtro.getIdNivel5());
        }
        if (filtro.getIdEstablecimiento() != null) {
            query.setParameter("id_establecimiento", filtro.getIdEstablecimiento());
        }
        if (filtro.getIdSede() != null) {
            query.setParameter("id_sede", filtro.getIdSede());
        }
        if (filtro.getIdPredio() != null) {
            query.setParameter("id_predio", filtro.getIdPredio());
        }
        // otros filtros
        if (filtro.getCodZona() != null) {
            query.setParameter("cod_zona", filtro.getCodZona());
        }
        if (filtro.getCodSector() != null) {
            query.setParameter("cod_sector", filtro.getCodSector());
        }

        return query.getResultList();
    }

    private List<Object[]> consultarRedistribucionIndicadoresPostgre(FiltroAmbitoRedistribucion filtro) {
        StringBuilder sql = new StringBuilder();
        StringBuilder agrupamiento = new StringBuilder();
//SELECT
        sql.append(" select ");
        if (filtro.isAgrupamientoPredio()) {
            agrupamiento.append(" n.codigo_nivel1,n.nombre_nivel1");
            agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
            agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
            agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
            agrupamiento.append(",n.codigo_nivel5,n.nombre_nivel5");
            agrupamiento.append(" ,n.codigo_establecimiento, n.nombre_establecimiento");
            agrupamiento.append(" ,n.codigo_sede, n.nombre_sede");
            agrupamiento.append(" ,n.codigo_predio, n.nombre_predio");
            // datos informativos
            agrupamiento.append(" ,n.direccion_predio, n.propiedad_predio");
            agrupamiento.append(" ,n.nombre_zona, n.nombre_sector, n.nombre_clima");

            // indicadores            
            agrupamiento.append(" ,etnias.valor");
            //alterno_varia_horario_total_estudiantes
            agrupamiento.append(" ,jornada.alterno_varia_horario_total_estudiantes");
            agrupamiento.append(" ,case when to_number(jornada.alterno_varia_horario_cupos,'9999999.999') >= 0 then ceil(to_number(jornada.alterno_varia_horario_cupos,'9999999.999')) else floor(to_number(jornada.alterno_varia_horario_cupos,'9999999.999')) end");
            agrupamiento.append(" ,jornada.alterno_varia_horario_utilizacion_estandar");
            //completa_total_estudiantes
            agrupamiento.append(" ,jornada.completa_total_estudiantes");
            agrupamiento.append(" ,case when to_number(jornada.completa_total_cupos,'9999999.999') >= 0 then ceil(to_number(jornada.completa_total_cupos,'9999999.999')) else floor(to_number(jornada.completa_total_cupos,'9999999.999')) end");
            agrupamiento.append(" ,jornada.completa_total_utilizacion_estandar");
            //doble_mañana_tarde_total_estudiantes
            agrupamiento.append(" ,jornada.doble_mañana_tarde_total_estudiantes");
            agrupamiento.append(" ,case when to_number(jornada.doble_mañana_tarde_cupos,'9999999.999') >= 0 then ceil(to_number(jornada.doble_mañana_tarde_cupos,'9999999.999')) else floor(to_number(jornada.doble_mañana_tarde_cupos,'9999999.999')) end");
            agrupamiento.append(" ,jornada.doble_mañana_tarde_utilizacion_estandar");
            //horario_ampliado_total_estudiantes
            agrupamiento.append(" ,jornada.horario_ampliado_total_estudiantes");
            agrupamiento.append(" ,case when to_number(jornada.horario_ampliado_cupos,'9999999.999') >= 0 then ceil(to_number(jornada.horario_ampliado_cupos,'9999999.999')) else floor(to_number(jornada.horario_ampliado_cupos,'9999999.999')) end");
            agrupamiento.append(" ,jornada.horario_ampliado_utilizacion_estandar");
            //mañana_total_estudiantes
            agrupamiento.append(" ,jornada.mañana_total_estudiantes");
            agrupamiento.append(" ,case when to_number(jornada.mañana_cupos,'9999999.999') >= 0 then ceil(to_number(jornada.mañana_cupos,'9999999.999')) else floor(to_number(jornada.mañana_cupos,'9999999.999')) end");
            agrupamiento.append(" ,jornada.mañana_utilizacion_estandar");
            //nocturna_total_estudiantes
            agrupamiento.append(" ,jornada.nocturna_total_estudiantes");
            agrupamiento.append(" ,case when to_number(jornada.nocturna_cupos,'9999999.999') >= 0 then ceil(to_number(jornada.nocturna_cupos,'9999999.999')) else floor(to_number(jornada.nocturna_cupos,'9999999.999')) end");
            agrupamiento.append(" ,jornada.nocturna_utilizacion_estandar");
            //tarde_total_estudiantes
            agrupamiento.append(" ,jornada.tarde_total_estudiantes");
            agrupamiento.append(" ,case when to_number(jornada.tarde_cupos,'9999999.999') >= 0 then ceil(to_number(jornada.tarde_cupos,'9999999.999')) else floor(to_number(jornada.tarde_cupos,'9999999.999')) end");
            agrupamiento.append(" ,jornada.tarde_utilizacion_estandar");
            //triple_jornada_total_estudiantes
            agrupamiento.append(" ,jornada.triple_jornada_total_estudiantes");
            agrupamiento.append(" ,case when to_number(jornada.triple_jornada_cupos,'9999999.999') >= 0 then ceil(to_number(jornada.triple_jornada_cupos,'9999999.999')) else floor(to_number(jornada.triple_jornada_cupos,'9999999.999')) end");
            agrupamiento.append(" ,jornada.triple_jornada_utilizacion_estandar");
            //vespertina_total_estudiantes
            agrupamiento.append(" ,jornada.vespertina_total_estudiantes");
            agrupamiento.append(" ,case when to_number(jornada.vespertina_cupos,'9999999.999') >= 0 then ceil(to_number(jornada.vespertina_cupos,'9999999.999')) else floor(to_number(jornada.vespertina_cupos,'9999999.999')) end");
            agrupamiento.append(" ,jornada.vespertina_utilizacion_estandar");
            //otra_total_estudiantes
            agrupamiento.append(" ,jornada.otra_total_estudiantes");
            agrupamiento.append(" ,case when to_number(jornada.otra_cupos,'9999999.999') >= 0 then ceil(to_number(jornada.otra_cupos,'9999999.999')) else floor(to_number(jornada.otra_cupos,'9999999.999')) end");
            agrupamiento.append(" ,jornada.otra_utilizacion_estandar");
            // utilizacion
            agrupamiento.append(" ,util_total.valor");
            // total cupos
            agrupamiento.append(" ,case when to_number(cupo_total.valor,'9999999.999') >= 0 then ceil(to_number(cupo_total.valor,'9999999.999')) else floor(to_number(cupo_total.valor,'9999999.999')) end");

            sql.append(agrupamiento.toString());
        } else {
            if (filtro.isAgrupamientoNivel0()) {
                agrupamiento.append(" n.nombre_nivel0");
            }
            if (filtro.isAgrupamientoNivel1()) {
                agrupamiento.append(" n.codigo_nivel1,n.nombre_nivel1");
            }
            if (filtro.isAgrupamientoNivel2()) {
                agrupamiento.append(" n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
            }
            if (filtro.isAgrupamientoNivel3()) {
                agrupamiento.append(" n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
            }
            if (filtro.isAgrupamientoNivel4()) {
                agrupamiento.append(" n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
            }
            if (filtro.isAgrupamientoNivel5()) {
                agrupamiento.append(" n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
                agrupamiento.append(",n.codigo_nivel5,n.nombre_nivel5");
            }
            if (filtro.isAgrupamientoEstablecimiento()) {
                agrupamiento.append(" n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
                agrupamiento.append(",n.codigo_nivel5,n.nombre_nivel5");
                agrupamiento.append(" ,n.codigo_establecimiento, n.nombre_establecimiento");
            }
            if (filtro.isAgrupamientoSede()) {
                agrupamiento.append(" n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
                agrupamiento.append(",n.codigo_nivel5,n.nombre_nivel5");
                agrupamiento.append(" ,n.codigo_establecimiento, n.nombre_establecimiento");
                agrupamiento.append(" ,n.codigo_sede, n.nombre_sede");
            }
            // indicadores
            // saturacion
            agrupamiento.append(" ,saturado.valor");
            agrupamiento.append(" ,sub_utilizado.valor");
            // utilizacion
            agrupamiento.append(" ,util_total.valor");
            // total cupos
            agrupamiento.append(" ,case when to_number(cupo_total.valor,'9999999.999') >= 0 then ceil(to_number(cupo_total.valor,'9999999.999')) else floor(to_number(cupo_total.valor,'9999999.999')) end");
            // total predio
            agrupamiento.append(" ,total_predio.valor");
            sql.append(agrupamiento.toString());
        }
// FROM 
        sql.append(" from cier.ind_auxiliar_indicador aux");
        sql.append(" inner join cier.ind_auxiliar_consultas n on n.id_predio = aux.id_predio and n.periodo = aux.periodo and n.id_tnt = aux.id_tnt");

        String strSQLNivelAgrupamiento = this.getSQLNivelAgrupamiento(filtro);
        String strSQLConsultarIndicador = this.getSQLConsultarIndicadorAlmacenado();

        //  cupos total
        sql.append(" left join (");
        sql.append(strSQLConsultarIndicador);
        sql.append(" ) as cupo_total on cupo_total.id_tnt = aux.id_tnt and cupo_total.periodo = aux.periodo");
        sql.append(String.format(" and cupo_total.cod_indicador = '%s'", ParamIndicador.IND_REDISTRUBUCION_CUPOS_TOTAL));
        sql.append(" and cupo_total.nivel_agrupamiento = ?nivel_agrupamiento");
        sql.append(" and cupo_total.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

        // utilizacion total
        sql.append(" left join (");
        sql.append(strSQLConsultarIndicador);
        sql.append(" ) as util_total on util_total.id_tnt = aux.id_tnt and util_total.periodo = aux.periodo");
        sql.append(String.format(" and util_total.cod_indicador = '%s'", ParamIndicador.IND_REDISTRUBUCION_UTILIZACION_ESTADAR_TOTAL));
        sql.append(" and util_total.nivel_agrupamiento = ?nivel_agrupamiento");
        sql.append(" and util_total.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

        if (filtro.isAgrupamientoPredio()) {
            StringBuilder sqlJornada = new StringBuilder();
            // JORNADA total estudiantes ,cupos ,utilizacion      
            sqlJornada.append(" select aux.periodo, aux.id_dig_instrumento,aux.id_predio");
            sqlJornada.append(" ,jor_nom.cod_valor codigo_jornada, jor_est.valor total_estudiantes_jornada");
            sqlJornada.append(" ,jor_cupo.valor cupos_jornada ,jor_util.valor utilizacion_estandar_jornada");
            //FROM
            sqlJornada.append(" from cier.ind_auxiliar_indicador aux");
            // nombre jornada   
            sqlJornada.append(" inner join (");
            sqlJornada.append(strSQLConsultarIndicador);
            sqlJornada.append(" ) as jor_nom on jor_nom.id_tnt = aux.id_tnt and jor_nom.periodo = aux.periodo");
            sqlJornada.append(String.format(" and jor_nom.cod_indicador = '%s'", ParamIndicador.IND_JORNADAS_PREDIO));
            sqlJornada.append(" and jor_nom.nivel_agrupamiento = ?nivel_agrupamiento");
            sqlJornada.append(" and jor_nom.id_entidad_nivel = aux.id_predio");
            // total estudiantes  jornada
            sqlJornada.append(" left join (");
            sqlJornada.append(strSQLConsultarIndicador);
            sqlJornada.append(" ) as jor_est on jor_est.id_tnt = aux.id_tnt and jor_est.periodo = aux.periodo");
            sqlJornada.append(String.format(" and jor_est.cod_indicador = '%s'", ParamIndicador.IND_TOTAL_ESTUDIANTES_JORNADAS_PREDIO));
            sqlJornada.append(" and jor_est.nivel_agrupamiento = ?nivel_agrupamiento");
            sqlJornada.append(" and jor_est.id_entidad_nivel = aux.id_predio");
            sqlJornada.append(" and jor_est.cod_valor = jor_nom.cod_valor");
            // cupos jornada
            sqlJornada.append(" left join (");
            sqlJornada.append(strSQLConsultarIndicador);
            sqlJornada.append(" ) as jor_cupo on jor_cupo.id_tnt = aux.id_tnt and jor_cupo.periodo = aux.periodo");
            sqlJornada.append(String.format(" and jor_cupo.cod_indicador = '%s'", ParamIndicador.IND_REDISTRUBUCION_CUPOS_JORNADA));
            sqlJornada.append(" and jor_cupo.nivel_agrupamiento = ?nivel_agrupamiento");
            sqlJornada.append(" and jor_cupo.id_entidad_nivel = aux.id_predio");
            sqlJornada.append(" and jor_cupo.cod_valor = jor_nom.cod_valor");
            // utilizacion jornada
            sqlJornada.append(" left join (");
            sqlJornada.append(strSQLConsultarIndicador);
            sqlJornada.append(" ) as jor_util on jor_util.id_tnt = aux.id_tnt and jor_util.periodo = aux.periodo");
            sqlJornada.append(String.format(" and jor_util.cod_indicador = '%s'", ParamIndicador.IND_REDISTRUBUCION_UTILIZACION_ESTADAR_JORNADA));
            sqlJornada.append(" and jor_util.nivel_agrupamiento = ?nivel_agrupamiento");
            sqlJornada.append(" and jor_util.id_entidad_nivel = aux.id_predio");
            sqlJornada.append(" and jor_util.cod_valor = jor_nom.cod_valor");
            // GROUP BY
            sqlJornada.append(" group by aux.periodo,aux.id_dig_instrumento,aux.id_predio");
            sqlJornada.append(" ,jor_nom.cod_valor,jor_est.valor,jor_cupo.valor,jor_util.valor");

            Parametro formatoSQLCuposJornada = facParam.consultarParametro(ParamSistema.SQL_FORMATO_CONSULTAR_IND_REDISTRUBUCION_CUPOS_JORNADA.name());
            sql.append(" left join (");
            sql.append(String.format(formatoSQLCuposJornada.getValor(), sqlJornada));
            sql.append(" ) as jornada on jornada.id_dig_instrumento = aux.id_dig_instrumento and jornada.id_predio = aux.id_predio");

            // etnias
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) as etnias on etnias.id_tnt = aux.id_tnt and etnias.periodo = aux.periodo");
            sql.append(String.format(" and etnias.cod_indicador = '%s'", ParamIndicador.IND_ETNIAS_PREDIO));
            sql.append(" and etnias.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and etnias.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
        } else {
            // predios saturados
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) as saturado on saturado.id_tnt = aux.id_tnt and saturado.periodo = aux.periodo");
            sql.append(String.format(" and saturado.cod_indicador = '%s'", ParamIndicador.IND_REDISTRUBUCION_PREDIOS_SATURADOS));
            sql.append(" and saturado.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and saturado.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            // predios sub utilizado
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) as sub_utilizado on sub_utilizado.id_tnt = aux.id_tnt and sub_utilizado.periodo = aux.periodo");
            sql.append(String.format(" and sub_utilizado.cod_indicador = '%s'", ParamIndicador.IND_REDISTRUBUCION_PREDIOS_SUBUTILIZADOS));
            sql.append(" and sub_utilizado.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and sub_utilizado.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            // Total de predios
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) as total_predio on total_predio.id_tnt = aux.id_tnt and total_predio.periodo = aux.periodo");
            sql.append(String.format(" and total_predio.cod_indicador = '%s'", ParamIndicador.IND_TOTAL_PREDIOS));
            sql.append(" and total_predio.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and total_predio.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
        }

// WHERE
        sql.append(" where aux.id_tnt = ?id_tnt and aux.periodo = ?periodo");
        if (filtro.getIdNivel0() != null) {
            sql.append(" and n.id_nivel0 = ?id_nivel0");
        }
        if (filtro.getIdNivel1() != null) {
            sql.append(" and n.id_nivel1 = ?id_nivel1");
        }
        if (filtro.getIdNivel2() != null) {
            sql.append(" and n.id_nivel2 = ?id_nivel2");
        }
        if (filtro.getIdNivel3() != null) {
            sql.append(" and n.id_nivel3 = ?id_nivel3");
        }
        if (filtro.getIdNivel4() != null) {
            sql.append(" and n.id_nivel4 = ?id_nivel4");
        }
        if (filtro.getIdNivel5() != null) {
            sql.append(" and n.id_nivel5 = ?id_nivel5");
        }
        if (filtro.getIdEstablecimiento() != null) {
            sql.append(" and n.id_establecimiento = ?id_establecimiento");
        }
        if (filtro.getIdSede() != null) {
            sql.append(" and n.id_sede = ?id_sede");
        }
        if (filtro.getIdPredio() != null) {
            sql.append(" and n.id_predio = ?id_predio");
        }
        // GROUP BY 
        sql.append(" group by ");
        sql.append(agrupamiento.toString());
        // ORDER BY
        sql.append(" order by ");
        sql.append(agrupamiento.toString());

        Query query = tpm.getEm().createNativeQuery(sql.toString());
        query.setParameter("id_tnt", tpm.getCurrentTenant());
        query.setParameter("periodo", filtro.getPeriodo());
        query.setParameter("idioma", filtro.getIdioma());
        query.setParameter("id_nivel0", filtro.getIdNivel0());
        query.setParameter("nivel_agrupamiento", filtro.getAgrupamiento());

        if (filtro.getIdNivel1() != null) {
            query.setParameter("id_nivel1", filtro.getIdNivel1());
        }
        if (filtro.getIdNivel2() != null) {
            query.setParameter("id_nivel2", filtro.getIdNivel2());
        }
        if (filtro.getIdNivel3() != null) {
            query.setParameter("id_nivel3", filtro.getIdNivel3());
        }
        if (filtro.getIdNivel4() != null) {
            query.setParameter("id_nivel4", filtro.getIdNivel4());
        }
        if (filtro.getIdNivel5() != null) {
            query.setParameter("id_nivel5", filtro.getIdNivel5());
        }
        if (filtro.getIdEstablecimiento() != null) {
            query.setParameter("id_establecimiento", filtro.getIdEstablecimiento());
        }
        if (filtro.getIdSede() != null) {
            query.setParameter("id_sede", filtro.getIdSede());
        }
        if (filtro.getIdPredio() != null) {
            query.setParameter("id_predio", filtro.getIdPredio());
        }

        return query.getResultList();
    }

    private List<Object[]> consultarRedistribucionIndicadoresOracle(FiltroAmbitoRedistribucion filtro) {
        StringBuilder sql = new StringBuilder();
        StringBuilder agrupamiento = new StringBuilder();
        //SELECT
        sql.append(" select ");
        if (filtro.isAgrupamientoPredio()) {
            agrupamiento.append(" n.codigo_nivel1,n.nombre_nivel1");
            agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
            agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
            agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
            agrupamiento.append(",n.codigo_nivel5,n.nombre_nivel5");
            agrupamiento.append(" ,n.codigo_establecimiento, n.nombre_establecimiento");
            agrupamiento.append(" ,n.codigo_sede, n.nombre_sede");
            agrupamiento.append(" ,n.codigo_predio, n.nombre_predio");
            // datos informativos
            agrupamiento.append(" ,n.direccion_predio, n.propiedad_predio");
            agrupamiento.append(" ,n.nombre_zona, n.nombre_sector, n.nombre_clima");

            // indicadores            
            agrupamiento.append(" ,etnias.valor");
            //alterno_varia_horario_tot_estu
            agrupamiento.append(" ,jornada.alterno_varia_horario_tot_estu");
            agrupamiento.append(" ,round(char_to_double(jornada.alterno_varia_horario_cupos))");
            agrupamiento.append(" ,jornada.alterno_varia_horario_util_est");
            //completa_total_estudiantes
            agrupamiento.append(" ,jornada.completa_total_estudiantes");
            agrupamiento.append(" ,round(char_to_double(jornada.completa_total_cupos))");
            agrupamiento.append(" ,jornada.completa_total_util_estandar");
            //doble_maana_tarde_tot_estud
            agrupamiento.append(" ,jornada.doble_maana_tarde_tot_estud");
            agrupamiento.append(" ,round(char_to_double(jornada.doble_mañana_tarde_cupos))");
            agrupamiento.append(" ,jornada.doble_maana_tarde_util_estanda");
            //horario_ampliado_tot_estudiant
            agrupamiento.append(" ,jornada.horario_ampliado_tot_estudiant");
            agrupamiento.append(" ,round(char_to_double(jornada.horario_ampliado_cupos))");
            agrupamiento.append(" ,jornada.horario_ampliado_utiliz_estand");
            //mañana_total_estudiantes
            agrupamiento.append(" ,jornada.mañana_total_estudiantes");
            agrupamiento.append(" ,round(char_to_double(jornada.mañana_cupos))");
            agrupamiento.append(" ,jornada.mañana_utilizacion_estandar");
            //nocturna_total_estudiantes
            agrupamiento.append(" ,jornada.nocturna_total_estudiantes");
            agrupamiento.append(" ,round(char_to_double(jornada.nocturna_cupos))");
            agrupamiento.append(" ,jornada.nocturna_utilizacion_estandar");
            //tarde_total_estudiantes
            agrupamiento.append(" ,jornada.tarde_total_estudiantes");
            agrupamiento.append(" ,round(char_to_double(jornada.tarde_cupos))");
            agrupamiento.append(" ,jornada.tarde_utilizacion_estandar");
            //triple_jornada_tot_estudiantes
            agrupamiento.append(" ,jornada.triple_jornada_tot_estudiantes");
            agrupamiento.append(" ,round(char_to_double(jornada.triple_jornada_cupos))");
            agrupamiento.append(" ,jornada.triple_jornada_util_estandar");
            //vespertina_total_estudiantes
            agrupamiento.append(" ,jornada.vespertina_total_estudiantes");
            agrupamiento.append(" ,round(char_to_double(jornada.vespertina_cupos))");
            agrupamiento.append(" ,jornada.vespertina_util_estandar");
            //otra_total_estudiantes
            agrupamiento.append(" ,jornada.otra_total_estudiantes");
            agrupamiento.append(" ,round(char_to_double(jornada.otra_cupos))");
            agrupamiento.append(" ,jornada.otra_utilizacion_estandar");
            // utilizacion
            agrupamiento.append(" ,util_total.valor");
            // total cupos
            agrupamiento.append(" ,round(char_to_double(cupo_total.valor))");

            sql.append(agrupamiento.toString());
        } else {
            if (filtro.isAgrupamientoNivel0()) {
                agrupamiento.append(" n.nombre_nivel0");
            }
            if (filtro.isAgrupamientoNivel1()) {
                agrupamiento.append(" n.codigo_nivel1,n.nombre_nivel1");
            }
            if (filtro.isAgrupamientoNivel2()) {
                agrupamiento.append(" n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
            }
            if (filtro.isAgrupamientoNivel3()) {
                agrupamiento.append(" n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
            }
            if (filtro.isAgrupamientoNivel4()) {
                agrupamiento.append(" n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
            }
            if (filtro.isAgrupamientoNivel5()) {
                agrupamiento.append(" n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
                agrupamiento.append(",n.codigo_nivel5,n.nombre_nivel5");
            }
            if (filtro.isAgrupamientoEstablecimiento()) {
                agrupamiento.append(" n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
                agrupamiento.append(",n.codigo_nivel5,n.nombre_nivel5");
                agrupamiento.append(" ,n.codigo_establecimiento, n.nombre_establecimiento");
            }
            if (filtro.isAgrupamientoSede()) {
                agrupamiento.append(" n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
                agrupamiento.append(",n.codigo_nivel5,n.nombre_nivel5");
                agrupamiento.append(" ,n.codigo_establecimiento, n.nombre_establecimiento");
                agrupamiento.append(" ,n.codigo_sede, n.nombre_sede");
            }
            // indicadores
            // saturacion
            agrupamiento.append(" ,saturado.valor");
            agrupamiento.append(" ,sub_utilizado.valor");
            // utilizacion
            agrupamiento.append(" ,util_total.valor");
            // total cupos
            agrupamiento.append(" ,round(char_to_double(cupo_total.valor),2)");
            // total predio
            agrupamiento.append(" ,total_predio.valor");
            sql.append(agrupamiento.toString());
        }
// FROM 
        sql.append(" from ind_auxiliar_indicador aux");
        sql.append(" inner join ind_auxiliar_consultas n on n.id_predio = aux.id_predio and n.periodo = aux.periodo and n.id_tnt = aux.id_tnt");

        String strSQLNivelAgrupamiento = this.getSQLNivelAgrupamiento(filtro);
        String strSQLConsultarIndicador = this.getSQLConsultarIndicadorAlmacenado();

        //  cupos total
        sql.append(" left join (");
        sql.append(strSQLConsultarIndicador);
        sql.append(" ) cupo_total on cupo_total.id_tnt = aux.id_tnt and cupo_total.periodo = aux.periodo");
        sql.append(String.format(" and cupo_total.cod_indicador = '%s'", ParamIndicador.IND_REDISTRUBUCION_CUPOS_TOTAL));
        sql.append(" and cupo_total.nivel_agrupamiento = ?nivel_agrupamiento");
        sql.append(" and cupo_total.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

        // utilizacion total
        sql.append(" left join (");
        sql.append(strSQLConsultarIndicador);
        sql.append(" ) util_total on util_total.id_tnt = aux.id_tnt and util_total.periodo = aux.periodo");
        sql.append(String.format(" and util_total.cod_indicador = '%s'", ParamIndicador.IND_REDISTRUBUCION_UTILIZACION_ESTADAR_TOTAL));
        sql.append(" and util_total.nivel_agrupamiento = ?nivel_agrupamiento");
        sql.append(" and util_total.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

        if (filtro.isAgrupamientoPredio()) {
            StringBuilder sqlJornada = new StringBuilder();
            // JORNADA total estudiantes ,cupos ,utilizacion      
            sqlJornada.append(" select aux.id_tnt,aux.periodo, aux.id_dig_instrumento,aux.id_predio");
            sqlJornada.append(" ,jor_nom.cod_valor codigo_jornada, jor_est.valor total_estudiantes_jornada");
            sqlJornada.append(" ,jor_cupo.valor cupos_jornada ,jor_util.valor utilizacion_estandar_jornada");
            //FROM
            sqlJornada.append(" from ind_auxiliar_indicador aux");
            // nombre jornada   
            sqlJornada.append(" inner join (");
            sqlJornada.append(strSQLConsultarIndicador);
            sqlJornada.append(" ) jor_nom on jor_nom.id_tnt = aux.id_tnt and jor_nom.periodo = aux.periodo");
            sqlJornada.append(String.format(" and jor_nom.cod_indicador = '%s'", ParamIndicador.IND_JORNADAS_PREDIO));
            sqlJornada.append(" and jor_nom.nivel_agrupamiento = ?nivel_agrupamiento");
            sqlJornada.append(" and jor_nom.id_entidad_nivel = aux.id_predio");
            // total estudiantes  jornada
            sqlJornada.append(" left join (");
            sqlJornada.append(strSQLConsultarIndicador);
            sqlJornada.append(" ) jor_est on jor_est.id_tnt = aux.id_tnt and jor_est.periodo = aux.periodo");
            sqlJornada.append(String.format(" and jor_est.cod_indicador = '%s'", ParamIndicador.IND_TOTAL_ESTUDIANTES_JORNADAS_PREDIO));
            sqlJornada.append(" and jor_est.nivel_agrupamiento = ?nivel_agrupamiento");
            sqlJornada.append(" and jor_est.id_entidad_nivel = aux.id_predio");
            sqlJornada.append(" and jor_est.cod_valor = jor_nom.cod_valor");
            // cupos jornada
            sqlJornada.append(" left join (");
            sqlJornada.append(strSQLConsultarIndicador);
            sqlJornada.append(" ) jor_cupo on jor_cupo.id_tnt = aux.id_tnt and jor_cupo.periodo = aux.periodo");
            sqlJornada.append(String.format(" and jor_cupo.cod_indicador = '%s'", ParamIndicador.IND_REDISTRUBUCION_CUPOS_JORNADA));
            sqlJornada.append(" and jor_cupo.nivel_agrupamiento = ?nivel_agrupamiento");
            sqlJornada.append(" and jor_cupo.id_entidad_nivel = aux.id_predio");
            sqlJornada.append(" and jor_cupo.cod_valor = jor_nom.cod_valor");
            // utilizacion jornada
            sqlJornada.append(" left join (");
            sqlJornada.append(strSQLConsultarIndicador);
            sqlJornada.append(" ) jor_util on jor_util.id_tnt = aux.id_tnt and jor_util.periodo = aux.periodo");
            sqlJornada.append(String.format(" and jor_util.cod_indicador = '%s'", ParamIndicador.IND_REDISTRUBUCION_UTILIZACION_ESTADAR_JORNADA));
            sqlJornada.append(" and jor_util.nivel_agrupamiento = ?nivel_agrupamiento");
            sqlJornada.append(" and jor_util.id_entidad_nivel = aux.id_predio");
            sqlJornada.append(" and jor_util.cod_valor = jor_nom.cod_valor");
            // GROUP BY
            sqlJornada.append(" group by aux.id_tnt,aux.periodo,aux.id_dig_instrumento,aux.id_predio");
            sqlJornada.append(" ,jor_nom.cod_valor,jor_est.valor,jor_cupo.valor,jor_util.valor");

            Parametro formatoSQLCuposJornada = facParam.consultarParametro(ParamSistema.SQL_FORMATO_CONSULTAR_IND_REDISTRUBUCION_CUPOS_JORNADA.name());
            sql.append(" left join (");
            sql.append(String.format(formatoSQLCuposJornada.getValor(), sqlJornada));
            sql.append(" ) jornada on jornada.id_tnt = aux.id_tnt and jornada.id_predio = aux.id_predio");

            // etnias
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) etnias on etnias.id_tnt = aux.id_tnt and etnias.periodo = aux.periodo");
            sql.append(String.format(" and etnias.cod_indicador = '%s'", ParamIndicador.IND_ETNIAS_PREDIO));
            sql.append(" and etnias.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and etnias.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
        } else {
            // predios saturados
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) saturado on saturado.id_tnt = aux.id_tnt and saturado.periodo = aux.periodo");
            sql.append(String.format(" and saturado.cod_indicador = '%s'", ParamIndicador.IND_REDISTRUBUCION_PREDIOS_SATURADOS));
            sql.append(" and saturado.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and saturado.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            // predios sub utilizado
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) sub_utilizado on sub_utilizado.id_tnt = aux.id_tnt and sub_utilizado.periodo = aux.periodo");
            sql.append(String.format(" and sub_utilizado.cod_indicador = '%s'", ParamIndicador.IND_REDISTRUBUCION_PREDIOS_SUBUTILIZADOS));
            sql.append(" and sub_utilizado.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and sub_utilizado.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            // Total de predios
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) total_predio on total_predio.id_tnt = aux.id_tnt and total_predio.periodo = aux.periodo");
            sql.append(String.format(" and total_predio.cod_indicador = '%s'", ParamIndicador.IND_TOTAL_PREDIOS));
            sql.append(" and total_predio.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and total_predio.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
        }

// WHERE
        sql.append(" where aux.id_tnt = ?id_tnt and aux.periodo = ?periodo");
        if (filtro.getIdNivel0() != null) {
            sql.append(" and n.id_nivel0 = ?id_nivel0");
        }
        if (filtro.getIdNivel1() != null) {
            sql.append(" and n.id_nivel1 = ?id_nivel1");
        }
        if (filtro.getIdNivel2() != null) {
            sql.append(" and n.id_nivel2 = ?id_nivel2");
        }
        if (filtro.getIdNivel3() != null) {
            sql.append(" and n.id_nivel3 = ?id_nivel3");
        }
        if (filtro.getIdNivel4() != null) {
            sql.append(" and n.id_nivel4 = ?id_nivel4");
        }
        if (filtro.getIdNivel5() != null) {
            sql.append(" and n.id_nivel5 = ?id_nivel5");
        }
        if (filtro.getIdEstablecimiento() != null) {
            sql.append(" and n.id_establecimiento = ?id_establecimiento");
        }
        if (filtro.getIdSede() != null) {
            sql.append(" and n.id_sede = ?id_sede");
        }
        if (filtro.getIdPredio() != null) {
            sql.append(" and n.id_predio = ?id_predio");
        }
        // GROUP BY 
        sql.append(" group by ");
        sql.append(agrupamiento.toString());
        // ORDER BY
        sql.append(" order by ");
        sql.append(agrupamiento.toString());

        Query query = tpm.getEm().createNativeQuery(sql.toString());
        query.setParameter("id_tnt", tpm.getCurrentTenant());
        query.setParameter("periodo", filtro.getPeriodo());
        query.setParameter("idioma", filtro.getIdioma());
        query.setParameter("id_nivel0", filtro.getIdNivel0());
        query.setParameter("nivel_agrupamiento", filtro.getAgrupamiento());

        if (filtro.getIdNivel1() != null) {
            query.setParameter("id_nivel1", filtro.getIdNivel1());
        }
        if (filtro.getIdNivel2() != null) {
            query.setParameter("id_nivel2", filtro.getIdNivel2());
        }
        if (filtro.getIdNivel3() != null) {
            query.setParameter("id_nivel3", filtro.getIdNivel3());
        }
        if (filtro.getIdNivel4() != null) {
            query.setParameter("id_nivel4", filtro.getIdNivel4());
        }
        if (filtro.getIdNivel5() != null) {
            query.setParameter("id_nivel5", filtro.getIdNivel5());
        }
        if (filtro.getIdEstablecimiento() != null) {
            query.setParameter("id_establecimiento", filtro.getIdEstablecimiento());
        }
        if (filtro.getIdSede() != null) {
            query.setParameter("id_sede", filtro.getIdSede());
        }
        if (filtro.getIdPredio() != null) {
            query.setParameter("id_predio", filtro.getIdPredio());
        }

        return query.getResultList();
    }

    @Override
    public List<Object[]> consultarAmbientes(FiltroAmbitoAmbiente filtro) {
        if (filtro.isConsultaDeTiempoReal()) {
            return this.consultarAmbientesTiempoReal(filtro);
        } else {
            return consultarAmbientesIndicadores(filtro);
        }
    }

    private List<Object[]> consultarAmbientesTiempoReal(FiltroAmbitoAmbiente filtro) {
        String codInstrumento = this.consultarCodInstrumentoPorPeriodo(filtro.getPeriodo());
        StringBuilder sql = new StringBuilder();
        StringBuilder agrupamiento = new StringBuilder();
//SELECT
        sql.append(" select ");
        String funcion = "";
        if (ParamBaseDatos.ORACLE.equals(UtilProperties.getDbMotor())) {
            funcion = "nvl";
        } else {
            funcion = "coalesce";
        }

        if (filtro.isAgrupamientoPredio()) {
            sql.append(" distinct ");
            sql.append(" n.codigo_nivel1,n.nombre_nivel1");
            sql.append(",n.codigo_nivel2,n.nombre_nivel2");
            sql.append(",n.codigo_nivel3,n.nombre_nivel3");
            sql.append(",n.codigo_nivel4,n.nombre_nivel4");
            sql.append(",n.codigo_nivel5,n.nombre_nivel5");
            sql.append(", n.codigo_establecimiento, n.nombre_establecimiento");
            sql.append(", n.codigo_sede, n.nombre_sede");
            sql.append(", n.codigo_predio, n.nombre_predio");

            // *indicadores
            // #  espacios por tipo
            sql.append(" ,").append(funcion).append("(tbl_tipo_espacio.valor,0)");
            // Proporción espacios
            sql.append(" ,").append(funcion).append("(tbl_tipo_espacio.valor,0)/case when tbl_total_espacio.valor = 0 then 1 else tbl_total_espacio.valor end  proporcion_espacios");
            // Area tipo espacio  (m2)
            sql.append(" ,tbl_niv_pred.area_tipo_espacio");
            // Número de estudiantes de la mayor jornada
            sql.append(" ,tbl_niv_pred.num_estudiantes_max_jornada");
            // m2/alumno (relacion de m2 por estudiante)
            sql.append(" ,tbl_niv_pred.m2_alumno");
            // condicion de m2/alumno (condicion relacion de m2 por estudiante)
            sql.append(" ,tbl_niv_pred.condicion_m2_alumno");
            // deficit_estandar
            sql.append(" ,tbl_niv_pred.deficit_estandar");
            // cumplimiento_norma
            sql.append(" ,tbl_niv_pred.cumplimiento_norma");

            //*otros
            sql.append(" , n.direccion_predio direccion_predio, n.nombre_zona zona");
            sql.append(" , n.nombre_sector sector, n.nombre_clima clima");
            //etnias
            sql.append(" , 'JornadaEstudiantesPorSede'");
            //propiedad del predio
            sql.append(" , '0'");
            //accesibilidad externa
            sql.append(" , 'CondicionRiesgos'");

            sql.append(" , 'AccesoDiscapacitados'");

        } else {
            if (filtro.isAgrupamientoEstablecimiento() || filtro.isAgrupamientoSede()) {
                agrupamiento.append(" n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
                agrupamiento.append(",n.codigo_nivel5,n.nombre_nivel5");
                agrupamiento.append(", n.codigo_establecimiento, n.nombre_establecimiento");
                if (filtro.isAgrupamientoSede()) {
                    agrupamiento.append(", n.codigo_sede, n.nombre_sede");
                }
                // select
                if (filtro.getUnidadFuncional().equals("BIBLIOTECA")) {
                    sql.append(" distinct ");
                    sql.append(agrupamiento.toString());
                    // #  espacios por tipo
                    sql.append(" ,").append(funcion).append("(tbl_tipo_espacio.valor,0) tipo_espacio");
                    // Proporción espacios
                    sql.append(" ,").append(funcion).append("(tbl_tipo_espacio.valor,0)/case when tbl_total_espacio.valor is null or tbl_total_espacio.valor = 0 then 1 else tbl_total_espacio.valor end  proporcion_espacios");
                    // m2/alumno (relacion de m2 por estudiante)
                    sql.append(" ,tbl_ind.m2_alumno");
                    // condicion de m2/alumno (condicion relacion de m2 por estudiante)
                    sql.append(" ,tbl_ind.condicion_m2_alumno");
                    // deficit_estandar
                    sql.append(" ,tbl_ind.deficit_estandar");
                    // cumplimiento_norma
                    sql.append(" ,tbl_ind.cumplimiento_norma");
                } else {
                    sql.append(agrupamiento.toString());
                    // #  espacios por tipo
                    sql.append(" ,sum(").append(funcion).append("(tbl_tipo_espacio.valor,0))");
                    // Proporción espacios
                    sql.append(" ,sum(").append(funcion).append("(tbl_tipo_espacio.valor,0)/case when tbl_total_espacio.valor = 0 then 1 else tbl_total_espacio.valor end)  proporcion_espacios ");
                    // Numero de Predios no idoneos
                    sql.append(" ,sum(case when cumplimiento_norma<100 then 1 else 0 end) predios_no_idoneos");
                    // Total de predios
                    sql.append(" ,count(distinct tbl_niv_est.id_predio) total_predio");
                    // Proporcion predios
                    sql.append(" ,").append(funcion).append("(sum(case when cumplimiento_norma<100 then 1 else 0 end),0)/case when count(distinct tbl_niv_est.id_predio) = 0 then 1 else count(distinct tbl_niv_est.id_predio) end  proporcion_predios");
                    // Acumulado deficit
                    sql.append(" ,sum(deficit_estandar) sum_deficit_estandar");
                    // Cumplimiento Norma 
                    if (filtro.getUnidadFuncional().equals("EXPANSIONES_RECREATIVAS")) {
                        sql.append(" ,(sum(area_tipo_espacio)/(sum(area_total)*estandar/100))*100 cumplimiento_norma");
                    } else {
                        sql.append(" ,(sum(area_tipo_espacio)/(sum(num_estudiantes_max_jornada)*estandar))*100  cumplimiento_norma");
                    }
                }
            } else {
                if (filtro.isAgrupamientoNivel0()) {
                    agrupamiento.append(" n.nombre_nivel0");
                }
                if (filtro.isAgrupamientoNivel1()) {
                    agrupamiento.append(" n.codigo_nivel1,n.nombre_nivel1");
                }
                if (filtro.isAgrupamientoNivel2()) {
                    agrupamiento.append("n.codigo_nivel1,n.nombre_nivel1");
                    agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                }
                if (filtro.isAgrupamientoNivel3()) {
                    agrupamiento.append("n.codigo_nivel1,n.nombre_nivel1");
                    agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                    agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                }
                if (filtro.isAgrupamientoNivel4()) {
                    agrupamiento.append("n.codigo_nivel1,n.nombre_nivel1");
                    agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                    agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                    agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
                }
                if (filtro.isAgrupamientoNivel5()) {
                    agrupamiento.append("n.codigo_nivel1,n.nombre_nivel1");
                    agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                    agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                    agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
                    agrupamiento.append(",n.codigo_nivel5,n.nombre_nivel5");
                }

                // select
                sql.append(agrupamiento.toString());

                //# de establecimientos que no cumplen la norma (est. no idoneos)
                sql.append(" ,est_no_idoneos.total");
                //Total Establecimientos
                sql.append(" ,count(distinct n.id_establecimiento) total_establecimientos");
                // Proporcion Establecimiento
                sql.append(" ,est_no_idoneos.total/case when count(distinct n.id_establecimiento) = 0 then 1 else count(distinct n.id_establecimiento) end  porcion_establecimientos");

                if (!filtro.getUnidadFuncional().equals("BIBLIOTECA")) {
                    //# de Predios que no cumplen la norma (predios no idoneos)
                    sql.append(" ,sum(case when cumplimiento_norma<100  then 1 else 0 end) predios_no_idoneos");
                    //Total Predios
                    sql.append(" ,count(distinct tbl_niv_est.id_predio) total_predio");
                    //Proporcion Predios
                    sql.append(" ,").append(funcion).append("(sum(case when cumplimiento_norma<100 then 1 else 0 end),0)/case when count(distinct tbl_niv_est.id_predio) = 0 then 1 else count(distinct tbl_niv_est.id_predio) end  proporcion_predios");
                }
                //Acumulado Deficit
                sql.append(" ,sum(deficit_estandar) sum_deficit_estandar");
                //Cumplimiento de Norma
                if (filtro.getUnidadFuncional().equals("EXPANSIONES_RECREATIVAS")) {
                    sql.append(" ,(sum(area_tipo_espacio)/(sum(area_total)*estandar/100))*100 cumplimiento_norma");
                } else {
                    if (filtro.getUnidadFuncional().equals("BIBLIOTECA")) {
                        sql.append(" ,sum(area_biblioteca)/((sum(estudiantes_max_jornada)*estandar_proporcion_biblioteca/100)*estandar_biblioteca)*100 cumplimiento_norma");
                    } else {
                        sql.append(" ,(sum(area_tipo_espacio)/(sum(num_estudiantes_max_jornada)*estandar))*100  cumplimiento_norma");
                    }
                }
            }
        }
// FROM 
        sql.append(" from ind_auxiliar_indicador aux");
        sql.append(" inner join ind_auxiliar_consultas n on n.id_predio = aux.id_predio and n.periodo = aux.periodo and n.id_tnt = aux.id_tnt");

        //estandar de la unidad Funcional seleccioanda
        StringBuilder estandar = new StringBuilder();
        estandar.append("ESTANDAR_");
        estandar.append(filtro.getUnidadFuncional());
        ParamIndicador indicadorUnidad = filtro.getUnidadFuncional().equals("EXPANSIONES_RECREATIVAS")
                ? ParamIndicador.IND_AMBIENTE_EXPANSIONES_RECREATIVAS_CUMPLIMIENTO_NORMA
                : ParamIndicador.IND_AMBIENTE_AREA_TIPO_ESPACIO;

        if (filtro.isAgrupamientoPredio()) {
            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_AMBIENTE_ESPACIOS_TIPO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) tbl_tipo_espacio on tbl_tipo_espacio.id_predio = aux.id_predio");

            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_TOTAL_ESPACIOS, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) tbl_total_espacio on tbl_total_espacio.id_predio = aux.id_predio");

            sql.append(" inner join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(indicadorUnidad, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) tbl_niv_pred on tbl_niv_pred.id_predio = aux.id_predio");
        } else {
            if (filtro.isAgrupamientoEstablecimiento() || filtro.isAgrupamientoSede()) {
                if (filtro.getUnidadFuncional().equals("BIBLIOTECA")) {
                    sql.append(" left join");
                    sql.append(" (");
                    sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_AMBIENTE_ESPACIOS_TIPO, ParamNivelConsul.ESTABLECIMIENTO, codInstrumento, filtro.getPeriodo()));
                    sql.append(" ) tbl_tipo_espacio on tbl_tipo_espacio.id_establecimiento = n.id_establecimiento and tbl_tipo_espacio.periodo = aux.periodo");

                    sql.append(" left join");
                    sql.append(" (");
                    sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_TOTAL_ESPACIOS, ParamNivelConsul.ESTABLECIMIENTO, codInstrumento, filtro.getPeriodo()));
                    sql.append(" ) tbl_total_espacio on tbl_total_espacio.id_establecimiento = n.id_establecimiento and tbl_total_espacio.periodo = aux.periodo");

                    sql.append(" left join");
                    sql.append(" (");
                    sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_AMBIENTE_BIBLIOTECA_M2_ALUMNO, ParamNivelConsul.ESTABLECIMIENTO, codInstrumento, filtro.getPeriodo()));
                    sql.append(" ) tbl_ind on tbl_ind.id_establecimiento = n.id_establecimiento and tbl_ind.periodo = aux.periodo");
                } else {
                    sql.append(" left join");
                    sql.append(" (");
                    sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_AMBIENTE_ESPACIOS_TIPO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
                    sql.append(" ) tbl_tipo_espacio on tbl_tipo_espacio.id_predio = aux.id_predio");

                    sql.append(" left join");
                    sql.append(" (");
                    sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_TOTAL_ESPACIOS, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
                    sql.append(" ) tbl_total_espacio on tbl_total_espacio.id_predio = aux.id_predio");

                    sql.append(" inner join");
                    sql.append(" (");
                    sql.append(this.consultarFormulaSQLIndicador(indicadorUnidad, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
                    sql.append(" ) tbl_niv_est on tbl_niv_est.id_predio = aux.id_predio");

                    agrupamiento.append(" ,estandar");
                }
            } else {
                if (filtro.getUnidadFuncional().equals("BIBLIOTECA")) {
                    sql.append(" inner join");
                    sql.append(" (");
                    sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_AMBIENTE_BIBLIOTECA_CUMPLIMIENTO_NORMA, ParamNivelConsul.ESTABLECIMIENTO, codInstrumento, filtro.getPeriodo()));
                    sql.append(" ) tbl_niv_est on tbl_niv_est.periodo=aux.periodo and tbl_niv_est.id_establecimiento = n.id_establecimiento");

                    if (filtro.isAgrupamientoNivel3()) {
                        //Para calcular la cantidad de Establecimientos que no cumplen la norma, es decir, total de establecimientos no_idoneos 
                        sql.append(" inner join");
                        sql.append(" (");
                        sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_AMBIENTE_BIBLIOTECA_NUMERO_ESTABLECIMIENTOS_NO_IDONEOS, ParamNivelConsul.TRES, codInstrumento, filtro.getPeriodo()));
                        sql.append(" ) est_no_idoneos on est_no_idoneos.periodo=aux.periodo and est_no_idoneos.id_nivel3=n.id_nivel3");
                    } else {
                        if (filtro.isAgrupamientoNivel2()) {
                            //Para calcular la cantidad de Establecimientos que no cumplen la norma, es decir, total de establecimientos no_idoneos 
                            sql.append(" inner join");
                            sql.append(" (");
                            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_AMBIENTE_BIBLIOTECA_NUMERO_ESTABLECIMIENTOS_NO_IDONEOS, ParamNivelConsul.DOS, codInstrumento, filtro.getPeriodo()));
                            sql.append(" ) est_no_idoneos on est_no_idoneos.periodo=aux.periodo and est_no_idoneos.id_nivel2=n.id_nivel2");
                        } else {
                            if (filtro.isAgrupamientoNivel1()) {
                                //Para calcular la cantidad de Establecimientos que no cumplen la norma, es decir, total de establecimientos no_idoneos 
                                sql.append(" inner join");
                                sql.append(" (");
                                sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_AMBIENTE_BIBLIOTECA_NUMERO_ESTABLECIMIENTOS_NO_IDONEOS, ParamNivelConsul.UNO, codInstrumento, filtro.getPeriodo()));
                                sql.append(" ) est_no_idoneos on est_no_idoneos.periodo=aux.periodo and est_no_idoneos.id_nivel1=n.id_nivel1");
                            } else {
                                //Para calcular la cantidad de Establecimientos que no cumplen la norma, es decir, total de establecimientos no_idoneos 
                                sql.append(" inner join");
                                sql.append(" (");
                                sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_AMBIENTE_BIBLIOTECA_NUMERO_ESTABLECIMIENTOS_NO_IDONEOS, ParamNivelConsul.CERO, codInstrumento, filtro.getPeriodo()));
                                sql.append(" ) est_no_idoneos on est_no_idoneos.periodo=aux.periodo and est_no_idoneos.id_nivel0=n.id_nivel0");
                            }
                        }
                    }
                    agrupamiento.append(" ,est_no_idoneos.total,estandar_proporcion_biblioteca,estandar_biblioteca");
                } else {
                    String formula_idoneidad = filtro.getUnidadFuncional().equals("EXPANSIONES_RECREATIVAS")
                            ? "(sum(area_tipo_espacio)/(sum(area_total)*estandar/100))*100 idoneidad"
                            : "(sum(area_tipo_espacio)/(sum(num_estudiantes_max_jornada)*estandar))*100  idoneidad";

                    sql.append(" inner join");
                    sql.append(" (");
                    sql.append(this.consultarFormulaSQLIndicador(indicadorUnidad, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
                    sql.append(" ) tbl_niv_est on tbl_niv_est.id_predio = aux.id_predio");

                    if (filtro.isAgrupamientoNivel3()) {
                        //Para calcular la cantidad de Establecimientos que no cumplen la norma, es decir, total de establecimientos no_idoneos 
                        sql.append(" ,(select id_nivel3,").append(funcion).append("(sum(case when idoneidad<100 then 1 else 0 end),0)");
                        sql.append(" total from( select n2.id_nivel3,  n2.id_establecimiento,").append(formula_idoneidad);
                        sql.append(" from ind_auxiliar_indicador aux inner join ind_auxiliar_consultas n2 on n2.id_predio = aux.id_predio and n2.periodo = aux.periodo and n2.id_tnt = aux.id_tnt");
                        sql.append(" inner join(");
                        sql.append(this.consultarFormulaSQLIndicador(indicadorUnidad, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
                        sql.append(" ) tbl_niv_est on tbl_niv_est.id_predio = aux.id_predio");
                        sql.append(" where aux.id_tnt = ?id_tnt and aux.periodo = ?periodo");
                        if (filtro.getCodZona() != null) {
                            sql.append(" and n2.codigo_zona = ?codigo_zona");
                        }
                        if (filtro.getCodSector() != null) {
                            sql.append(" and n2.codigo_sector = ?codigo_sector");
                        }
                        sql.append(" group by  n2.id_nivel3, n2.id_establecimiento ,estandar");
                        sql.append(" )subtb_idoneidad  group by id_nivel3 ) est_no_idoneos");

                        agrupamiento.append("  ,n.nombre_nivel3 ,estandar,est_no_idoneos.total");
                    } else {
                        if (filtro.isAgrupamientoNivel2()) {
                            //Para calcular la cantidad de Establecimientos que no cumplen la norma, es decir, total de establecimientos no_idoneos 
                            sql.append(" ,(select id_nivel2,").append(funcion).append("(sum(case when idoneidad<100 then 1 else 0 end),0)");
                            sql.append(" total from( select n2.id_nivel2,  n2.id_establecimiento,").append(formula_idoneidad);
                            sql.append(" from ind_auxiliar_indicador aux inner join ind_auxiliar_consultas n2 on n2.id_predio = aux.id_predio and n2.periodo = aux.periodo and n2.id_tnt = aux.id_tnt");
                            sql.append(" inner join(");
                            sql.append(this.consultarFormulaSQLIndicador(indicadorUnidad, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
                            sql.append(" ) tbl_niv_est on tbl_niv_est.id_predio = aux.id_predio");
                            sql.append(" where aux.id_tnt = ?id_tnt and aux.periodo = ?periodo");
                            if (filtro.getCodZona() != null) {
                                sql.append(" and n2.codigo_zona = ?codigo_zona");
                            }
                            if (filtro.getCodSector() != null) {
                                sql.append(" and n2.codigo_sector = ?codigo_sector");
                            }
                            sql.append(" group by  n2.id_nivel2, n2.id_establecimiento ,estandar");
                            sql.append(" )subtb_idoneidad  group by id_nivel2 ) est_no_idoneos");

                            agrupamiento.append("  ,n.nombre_nivel2 ,estandar,est_no_idoneos.total");
                        } else {
                            if (filtro.isAgrupamientoNivel1()) {
                                //Para calcular la cantidad de Establecimientos que no cumplen la norma, es decir, total de establecimientos no_idoneos 
                                sql.append(" ,(select id_nivel1,").append(funcion).append("(sum(case when idoneidad<100 then 1 else 0 end),0)");
                                sql.append(" total from( select n2.id_nivel1,  n2.id_establecimiento,").append(formula_idoneidad);
                                sql.append(" from ind_auxiliar_indicador aux inner join ind_auxiliar_consultas n2 on n2.id_predio = aux.id_predio and n2.periodo = aux.periodo and n2.id_tnt = aux.id_tnt");
                                sql.append(" inner join(");
                                sql.append(this.consultarFormulaSQLIndicador(indicadorUnidad, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
                                sql.append(" ) tbl_niv_est on tbl_niv_est.id_predio = aux.id_predio");
                                sql.append(" where aux.id_tnt = ?id_tnt and aux.periodo = ?periodo");
                                if (filtro.getCodZona() != null) {
                                    sql.append(" and n2.codigo_zona = ?codigo_zona");
                                }
                                if (filtro.getCodSector() != null) {
                                    sql.append(" and n2.codigo_sector = ?codigo_sector");
                                }
                                sql.append(" group by  n2.id_nivel1, n2.id_establecimiento ,estandar");
                                sql.append(" )subtb_idoneidad  group by id_nivel1 ) est_no_idoneos");

                                agrupamiento.append("  ,n.nombre_nivel1 ,estandar,est_no_idoneos.total");
                            } else {
                                if (filtro.isAgrupamientoNivel0()) {
                                    //Para calcular la cantidad de Establecimientos que no cumplen la norma, es decir, total de establecimientos no_idoneos 
                                    sql.append(" ,(select id_nivel0,").append(funcion).append("(sum(case when idoneidad<100 then 1 else 0 end),0)");
                                    sql.append(" total from( select n2.id_nivel0,  n2.id_establecimiento,").append(formula_idoneidad);
                                    sql.append(" from ind_auxiliar_indicador aux inner join ind_auxiliar_consultas n2 on n2.id_predio = aux.id_predio and n2.periodo = aux.periodo and n2.id_tnt = aux.id_tnt");
                                    sql.append(" inner join(");
                                    sql.append(this.consultarFormulaSQLIndicador(indicadorUnidad, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
                                    sql.append(" ) tbl_niv_est on tbl_niv_est.id_predio = aux.id_predio");
                                    sql.append(" where aux.id_tnt = ?id_tnt and aux.periodo = ?periodo");
                                    if (filtro.getCodZona() != null) {
                                        sql.append(" and n2.codigo_zona = ?codigo_zona");
                                    }
                                    if (filtro.getCodSector() != null) {
                                        sql.append(" and n2.codigo_sector = ?codigo_sector");
                                    }
                                    sql.append(" group by  n2.id_nivel0, n2.id_establecimiento ,estandar");
                                    sql.append(" )subtb_idoneidad  group by id_nivel0 ) est_no_idoneos");

                                    agrupamiento.append("  ,n.nombre_nivel0 ,estandar,est_no_idoneos.total");
                                } else {
                                    //Para calcular la cantidad de Establecimientos que no cumplen la norma, es decir, total de establecimientos no_idoneos 
                                    sql.append(" ,(select ").append(funcion).append("(sum(case when idoneidad<100 then 1 else 0 end),0)");
                                    sql.append(" total from( select  n2.id_establecimiento,").append(formula_idoneidad);
                                    sql.append(" from ind_auxiliar_indicador aux inner join ind_auxiliar_consultas n2 on n2.id_predio = aux.id_predio and n2.periodo = aux.periodo and n2.id_tnt = aux.id_tnt");
                                    sql.append(" inner join(");
                                    sql.append(this.consultarFormulaSQLIndicador(indicadorUnidad, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
                                    sql.append(" ) tbl_niv_est on tbl_niv_est.id_predio = aux.id_predio");
                                    sql.append(" where aux.id_tnt = ?id_tnt and aux.periodo = ?periodo");
                                    if (filtro.getCodZona() != null) {
                                        sql.append(" and n2.codigo_zona = ?codigo_zona");
                                    }
                                    if (filtro.getCodSector() != null) {
                                        sql.append(" and n2.codigo_sector = ?codigo_sector");
                                    }
                                    sql.append(" group by  n2.id_establecimiento ,estandar");
                                    sql.append(" )subtb_idoneidad) est_no_idoneos");

                                    agrupamiento.append(" ,estandar,est_no_idoneos.total");
                                }
                            }
                        }
                    }
                }
            }
        }


// WHERE
        sql.append(" where aux.id_tnt = ?id_tnt and aux.periodo = ?periodo");
        if (filtro.isAgrupamientoNivel0()) {
            sql.append(" and n.id_nivel0=est_no_idoneos.id_nivel0");
        }
        if (filtro.isAgrupamientoNivel1()) {
            sql.append(" and n.id_nivel1=est_no_idoneos.id_nivel1");
        }
        if (filtro.isAgrupamientoNivel2()) {
            sql.append(" and n.id_nivel2=est_no_idoneos.id_nivel2");
        }
        if (filtro.isAgrupamientoNivel3()) {
            sql.append(" and n.id_nivel3=est_no_idoneos.id_nivel3");
        }

        if (filtro.getIdNivel0() != null) {
            sql.append(" and n.id_nivel0 = ?id_nivel0");
        }
        if (filtro.getIdNivel1() != null) {
            sql.append(" and n.id_nivel1 = ?id_nivel1");
        }
        if (filtro.getIdNivel2() != null) {
            sql.append(" and n.id_nivel2 = ?id_nivel2");
        }
        if (filtro.getIdNivel3() != null) {
            sql.append(" and n.id_nivel3 = ?id_nivel3");
        }
        if (filtro.getIdNivel4() != null) {
            sql.append(" and n.id_nivel4 = ?id_nivel4");
        }
        if (filtro.getIdNivel5() != null) {
            sql.append(" and n.id_nivel5 = ?id_nivel5");
        }
        if (filtro.getIdEstablecimiento() != null) {
            sql.append(" and n.id_establecimiento = ?id_establecimiento");
        }
        if (filtro.getIdSede() != null) {
            sql.append(" and n.id_sede = ?id_sede");
        }
        if (filtro.getIdPredio() != null) {
            sql.append(" and n.id_predio = ?id_predio");
        }

        // otros filtros
        if (filtro.getCodZona() != null) {
            sql.append(" and n.codigo_zona = ?codigo_zona");
        }
        if (filtro.getCodSector() != null) {
            sql.append(" and n.codigo_sector = ?codigo_sector");
        }

        // GROUP BY 
        if (!filtro.isAgrupamientoPredio() && !filtro.getUnidadFuncional().equals("BIBLIOTECA")
                || !filtro.isAgrupamientoEstablecimiento() && filtro.getUnidadFuncional().equals("BIBLIOTECA")) {
            sql.append(" group by ");
            sql.append(agrupamiento.toString());
        }

        String sqlaux = sql.toString();
        if (ParamBaseDatos.ORACLE.equals(UtilProperties.getDbMotor())) {
            sqlaux = sqlaux.replaceAll("estandarAmb_", "'" + estandar.toString() + "'");
            sqlaux = sqlaux.replaceAll("amb_", "'" + filtro.getUnidadFuncional() + "'");
        } else {
            sqlaux = sqlaux.replaceAll("\\?cod_estandar", "'" + estandar.toString() + "'");
            sqlaux = sqlaux.replaceAll("\\?unidad_funcional", "'" + filtro.getUnidadFuncional() + "'");
        }

        if (ParamBaseDatos.POSTGRE.equals(UtilProperties.getDbMotor())) {
            sqlaux = sqlaux.replaceAll("\\?start", "");
            sqlaux = sqlaux.replaceAll("\\?end", "");
        }

        Query query = tpm.getEm().createNativeQuery(sqlaux);
        //query.setParameter("cod_estandar", estandar.toString());
        //query.setParameter("unidad_funcional", filtro.getUnidadFuncional());
        query.setParameter("id_tnt", tpm.getCurrentTenant());
        query.setParameter("periodo", filtro.getPeriodo());
        query.setParameter("idioma", filtro.getIdioma());
        query.setParameter("id_nivel0", filtro.getIdNivel0());
        if (filtro.getIdNivel1() != null) {
            query.setParameter("id_nivel1", filtro.getIdNivel1());
        }
        if (filtro.getIdNivel2() != null) {
            query.setParameter("id_nivel2", filtro.getIdNivel2());
        }
        if (filtro.getIdNivel3() != null) {
            query.setParameter("id_nivel3", filtro.getIdNivel3());
        }
        if (filtro.getIdNivel4() != null) {
            query.setParameter("id_nivel4", filtro.getIdNivel4());
        }
        if (filtro.getIdNivel5() != null) {
            query.setParameter("id_nivel5", filtro.getIdNivel5());
        }
        if (filtro.getIdEstablecimiento() != null) {
            query.setParameter("id_establecimiento", filtro.getIdEstablecimiento());
        }
        if (filtro.getIdSede() != null) {
            query.setParameter("id_sede", filtro.getIdSede());
        }
        if (filtro.getIdPredio() != null) {
            query.setParameter("id_predio", filtro.getIdPredio());
        }
        // otros filtros
        if (filtro.getCodZona() != null) {
            query.setParameter("codigo_zona", filtro.getCodZona());
        }
        if (filtro.getCodSector() != null) {
            query.setParameter("codigo_sector", filtro.getCodSector());
        }

        return query.getResultList();
    }

    private List<Object[]> consultarAmbientesIndicadores(FiltroAmbitoAmbiente filtro) {
        StringBuilder sql = new StringBuilder();
        StringBuilder agrupamiento = new StringBuilder();
//SELECT
        sql.append(" select distinct ");
        if (filtro.isAgrupamientoPredio()) {
            sql.append(" n.codigo_nivel1,n.nombre_nivel1");
            sql.append(",n.codigo_nivel2,n.nombre_nivel2");
            sql.append(",n.codigo_nivel3,n.nombre_nivel3");
            sql.append(",n.codigo_nivel4,n.nombre_nivel4");
            sql.append(",n.codigo_nivel5,n.nombre_nivel5");
            sql.append(", n.codigo_establecimiento, n.nombre_establecimiento");
            sql.append(", n.codigo_sede, n.nombre_sede");
            sql.append(", n.codigo_predio, n.nombre_predio");

            // *indicadores 
            // #  espacios por tipo
            sql.append(" ,coalesce(tbl_tipo_espacio.valor,'0')");
            // Proporción espacios
            sql.append(" ,to_number(coalesce(tbl_tipo_espacio.valor,'0'),'9999999')/to_number(case when tbl_total_espacio.valor = '0' then '1' else tbl_total_espacio.valor end ,'9999999') proporcion_espacios");
            // Area tipo espacio  (m2)
            sql.append(" ,coalesce(area_tipo_espacio.valor,'0')");
            // Número de estudiantes de la mayor jornada
            sql.append(" ,num_estudiantes_max_jornada.valor");
            // m2/alumno (relacion de m2 por estudiante)
            sql.append(" ,m2_alumno.valor");
            // condicion de m2/alumno (condicion relacion de m2 por estudiante)
            sql.append(" ,condicion_m2_alumno.valor");
            // deficit_estandar
            sql.append(" ,deficit_estandar.valor");
            // cumplimiento_norma
            sql.append(" ,cumplimiento_norma.valor");

            //*otros
            sql.append(" , n.direccion_predio direccion_predio, n.nombre_zona zona");
            sql.append(" , n.nombre_sector sector, n.nombre_clima clima");
            //etnias
            sql.append(" , 'JornadaEstudiantesPorSede'");
            //propiedad del predio
            sql.append(" , '0'");
            //accesibilidad externa
            sql.append(" , 'CondicionRiesgos'");

            sql.append(" , 'AccesoDiscapacitados'");

        } else {
            if (filtro.isAgrupamientoEstablecimiento() || filtro.isAgrupamientoSede()) {
                agrupamiento.append(" n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
                agrupamiento.append(",n.codigo_nivel5,n.nombre_nivel5");
                agrupamiento.append(", n.codigo_establecimiento, n.nombre_establecimiento");
                if (filtro.isAgrupamientoSede()) {
                    agrupamiento.append(", n.codigo_sede, n.nombre_sede");
                }

                // select
                sql.append(agrupamiento.toString());
                // #  espacios por tipo
                sql.append(" ,coalesce(tbl_tipo_espacio.valor,'0')");
                // Proporción espacios
                sql.append(" ,to_number(coalesce(tbl_tipo_espacio.valor,'0'),'9999999')/to_number(case when tbl_total_espacio.valor is null or tbl_total_espacio.valor = '0' then '1' else tbl_total_espacio.valor end ,'9999999') proporcion_espacios ");

                if (filtro.getUnidadFuncional().equals("BIBLIOTECA")) {
                    // m2/alumno (relacion de m2 por estudiante)
                    sql.append(" ,m2_alumno.valor");
                    // condicion de m2/alumno (condicion relacion de m2 por estudiante)
                    sql.append(" ,condicion_m2_alumno.valor");
                    // deficit_estandar
                    sql.append(" ,deficit_estandar.valor");
                    // cumplimiento_norma
                    sql.append(" ,cumplimiento_norma.valor");
                } else {
                    // Numero de Predios no idoneos
                    sql.append(" ,coalesce(predios_no_idoneos.valor,'0')");
                    // Total de predios
                    sql.append(" ,coalesce(total_predio.valor,'0')");
                    // Proporcion predios
                    sql.append(" ,to_number(coalesce(predios_no_idoneos.valor,'0'),'9999999')/to_number(case when total_predio.valor = '0' then '1' else total_predio.valor end ,'9999999') proporcion_predios");
                    // Acumulado deficit
                    sql.append(" ,deficit_estandar.valor");
                    // Cumplimiento Norma 
                    sql.append(" ,cumplimiento_norma.valor");
                }
            } else {
                if (filtro.isAgrupamientoNivel0()) {
                    agrupamiento.append(" n.nombre_nivel0");
                }
                if (filtro.isAgrupamientoNivel1()) {
                    agrupamiento.append(" n.codigo_nivel1,n.nombre_nivel1");
                }
                if (filtro.isAgrupamientoNivel2()) {
                    agrupamiento.append("n.codigo_nivel1,n.nombre_nivel1");
                    agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                }
                if (filtro.isAgrupamientoNivel3()) {
                    agrupamiento.append("n.codigo_nivel1,n.nombre_nivel1");
                    agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                    agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                }
                if (filtro.isAgrupamientoNivel4()) {
                    agrupamiento.append("n.codigo_nivel1,n.nombre_nivel1");
                    agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                    agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                    agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
                }
                if (filtro.isAgrupamientoNivel5()) {
                    agrupamiento.append("n.codigo_nivel1,n.nombre_nivel1");
                    agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                    agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                    agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
                    agrupamiento.append(",n.codigo_nivel5,n.nombre_nivel5");
                }

                // select
                sql.append(agrupamiento.toString());

                //# de establecimientos que no cumplen la norma (est. no idoneos)
                sql.append(" ,coalesce(est_no_idoneos.valor,'0')");
                //Total Establecimientos
                sql.append(" ,coalesce(total_establecimientos.valor,'0')");
                // Proporcion Establecimiento
                sql.append(" ,to_number(coalesce(est_no_idoneos.valor,'0'),'9999999')/to_number(case when total_establecimientos.valor = '0' then '1' else total_establecimientos.valor end ,'9999999') porcion_establecimientos");
                if (!filtro.getUnidadFuncional().equals("BIBLIOTECA")) {
                    // Numero de Predios no idoneos
                    sql.append(" ,coalesce(predios_no_idoneos.valor,'0')");
                    // Total de predios
                    sql.append(" ,coalesce(total_predio.valor,'0')");
                    // Proporcion predios
                    sql.append(" ,to_number(coalesce(predios_no_idoneos.valor,'0'),'9999999')/to_number(case when total_predio.valor = '0' then '1' else total_predio.valor end ,'9999999') proporcion_predios");
                }
                //Acumulado Deficit
                sql.append(" ,deficit_estandar.valor");
                //Cumplimiento de Norma
                sql.append(" ,cumplimiento_norma.valor");
            }
        }
// FROM 
        sql.append(" from ind_auxiliar_indicador aux");
        sql.append(" inner join ind_auxiliar_consultas n on n.id_predio = aux.id_predio and n.periodo = aux.periodo and n.id_tnt = aux.id_tnt");

        String strSQLNivelAgrupamiento = this.getSQLNivelAgrupamiento(filtro);
        String strSQLConsultarIndicador = this.getSQLConsultarIndicadorAlmacenado();

        if (filtro.isAgrupamientoPredio()) {
            //tipo de espacios
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_tipo_espacio on tbl_tipo_espacio.id_tnt = aux.id_tnt and tbl_tipo_espacio.periodo = aux.periodo");
            sql.append(String.format(" and tbl_tipo_espacio.cod_indicador = '%s'", ParamIndicador.IND_AMBIENTE_ESPACIOS_TIPO));
            sql.append(" and tbl_tipo_espacio.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_tipo_espacio.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            sql.append(" and tbl_tipo_espacio.cod_valor = ?unidad_funcional");

            //total de espacios
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_total_espacio on tbl_total_espacio.id_tnt = aux.id_tnt and tbl_total_espacio.periodo = aux.periodo");
            sql.append(String.format(" and tbl_total_espacio.cod_indicador = '%s'", ParamIndicador.IND_TOTAL_ESPACIOS));
            sql.append(" and tbl_total_espacio.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_total_espacio.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            //area tipo de espacio
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) area_tipo_espacio on area_tipo_espacio.id_tnt = aux.id_tnt and area_tipo_espacio.periodo = aux.periodo");
            sql.append(String.format(" and area_tipo_espacio.cod_indicador = '%s'", ParamIndicador.IND_AMBIENTE_AREA_TIPO_ESPACIO));
            sql.append(" and area_tipo_espacio.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and area_tipo_espacio.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            sql.append(" and area_tipo_espacio.cod_valor = ?unidad_funcional");

            // Número de estudiantes de la mayor jornada
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) num_estudiantes_max_jornada on num_estudiantes_max_jornada.id_tnt = aux.id_tnt and num_estudiantes_max_jornada.periodo = aux.periodo");
            sql.append(String.format(" and num_estudiantes_max_jornada.cod_indicador = '%s'", ParamIndicador.IND_TOTAL_ESTUDIANTES_MAXIMA_JORNADA));
            sql.append(" and num_estudiantes_max_jornada.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and num_estudiantes_max_jornada.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            // m2/alumno (relacion de m2 por estudiante)
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) m2_alumno on m2_alumno.id_tnt = aux.id_tnt and m2_alumno.periodo = aux.periodo");
            sql.append(String.format(" and m2_alumno.cod_indicador = '%s'", ParamIndicador.IND_AMBIENTE_M2_ALUMNO));
            sql.append(" and m2_alumno.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and m2_alumno.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            sql.append(" and m2_alumno.cod_valor = ?unidad_funcional");

            // condicion de m2/alumno (condicion relacion de m2 por estudiante)
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) condicion_m2_alumno on condicion_m2_alumno.id_tnt = aux.id_tnt and condicion_m2_alumno.periodo = aux.periodo");
            sql.append(String.format(" and condicion_m2_alumno.cod_indicador = '%s'", ParamIndicador.IND_AMBIENTE_CONDICION_M2_ALUMNO));
            sql.append(" and condicion_m2_alumno.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and condicion_m2_alumno.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            sql.append(" and condicion_m2_alumno.cod_valor = ?unidad_funcional");

        } else {
            if (filtro.isAgrupamientoEstablecimiento() || filtro.isAgrupamientoSede()) {
                // #  espacios por tipo
                sql.append(" left join (");
                sql.append(strSQLConsultarIndicador);
                sql.append(" ) tbl_tipo_espacio on tbl_tipo_espacio.id_tnt = aux.id_tnt and tbl_tipo_espacio.periodo = aux.periodo");
                sql.append(String.format(" and tbl_tipo_espacio.cod_indicador = '%s'", ParamIndicador.IND_AMBIENTE_ESPACIOS_TIPO));
                sql.append(" and tbl_tipo_espacio.nivel_agrupamiento = ?nivel_agrupamiento");
                sql.append(" and tbl_tipo_espacio.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
                sql.append(" and tbl_tipo_espacio.cod_valor = ?unidad_funcional");

                // total espacios
                sql.append(" left join (");
                sql.append(strSQLConsultarIndicador);
                sql.append(" ) tbl_total_espacio on tbl_total_espacio.id_tnt = aux.id_tnt and tbl_total_espacio.periodo = aux.periodo");
                sql.append(String.format(" and tbl_total_espacio.cod_indicador = '%s'", ParamIndicador.IND_TOTAL_ESPACIOS));
                sql.append(" and tbl_total_espacio.nivel_agrupamiento = ?nivel_agrupamiento");
                sql.append(" and tbl_total_espacio.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

                if (filtro.getUnidadFuncional().equals("BIBLIOTECA")) {
                    // m2/alumno (relacion de m2 por estudiante)
                    sql.append(" left join (");
                    sql.append(strSQLConsultarIndicador);
                    sql.append(" ) m2_alumno on m2_alumno.id_tnt = aux.id_tnt and m2_alumno.periodo = aux.periodo");
                    sql.append(String.format(" and m2_alumno.cod_indicador = '%s'", ParamIndicador.IND_AMBIENTE_BIBLIOTECA_M2_ALUMNO));
                    sql.append(" and m2_alumno.nivel_agrupamiento = ?nivel_agrupamiento");
                    sql.append(" and m2_alumno.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

                    // condicion de m2/alumno (condicion relacion de m2 por estudiante)
                    sql.append(" left join (");
                    sql.append(strSQLConsultarIndicador);
                    sql.append(" ) condicion_m2_alumno on condicion_m2_alumno.id_tnt = aux.id_tnt and condicion_m2_alumno.periodo = aux.periodo");
                    sql.append(String.format(" and condicion_m2_alumno.cod_indicador = '%s'", ParamIndicador.IND_AMBIENTE_BIBLIOTECA_CONDICION_M2_ALUMNO));
                    sql.append(" and condicion_m2_alumno.nivel_agrupamiento = ?nivel_agrupamiento");
                    sql.append(" and condicion_m2_alumno.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
                } else {
                    // Numero de Predios no idoneos
                    if (filtro.getUnidadFuncional().equals("EXPANSIONES_RECREATIVAS")) {
                        sql.append(" left join (");
                        sql.append(strSQLConsultarIndicador);
                        sql.append(" ) predios_no_idoneos on predios_no_idoneos.id_tnt = aux.id_tnt and predios_no_idoneos.periodo = aux.periodo");
                        sql.append(String.format(" and predios_no_idoneos.cod_indicador = '%s'", ParamIndicador.IND_AMBIENTE_EXPANSIONES_RECREATIVAS_NUMERO_PREDIOS_NO_IDONEOS));
                        sql.append(" and predios_no_idoneos.nivel_agrupamiento = ?nivel_agrupamiento");
                        sql.append(" and predios_no_idoneos.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
                    } else {
                        sql.append(" left join (");
                        sql.append(strSQLConsultarIndicador);
                        sql.append(" ) predios_no_idoneos on predios_no_idoneos.id_tnt = aux.id_tnt and predios_no_idoneos.periodo = aux.periodo");
                        sql.append(String.format(" and predios_no_idoneos.cod_indicador = '%s'", ParamIndicador.IND_AMBIENTE_NUMERO_PREDIOS_NO_IDONEOS));
                        sql.append(" and predios_no_idoneos.nivel_agrupamiento = ?nivel_agrupamiento");
                        sql.append(" and predios_no_idoneos.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
                        sql.append(" and predios_no_idoneos.cod_valor = ?unidad_funcional");
                    }

                    // Total de predios
                    sql.append(" left join (");
                    sql.append(strSQLConsultarIndicador);
                    sql.append(" ) total_predio on total_predio.id_tnt = aux.id_tnt and total_predio.periodo = aux.periodo");
                    sql.append(String.format(" and total_predio.cod_indicador = '%s'", ParamIndicador.IND_TOTAL_PREDIOS));
                    sql.append(" and total_predio.nivel_agrupamiento = ?nivel_agrupamiento");
                    sql.append(" and total_predio.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
                }
            } else {
                //# de establecimientos que no cumplen la norma (est. no idoneos)
                if (filtro.getUnidadFuncional().equals("BIBLIOTECA")) {
                    sql.append(" left join (");
                    sql.append(strSQLConsultarIndicador);
                    sql.append(" ) est_no_idoneos on est_no_idoneos.id_tnt = aux.id_tnt and est_no_idoneos.periodo = aux.periodo");
                    sql.append(String.format(" and est_no_idoneos.cod_indicador = '%s'", ParamIndicador.IND_AMBIENTE_BIBLIOTECA_NUMERO_ESTABLECIMIENTOS_NO_IDONEOS));
                    sql.append(" and est_no_idoneos.nivel_agrupamiento = ?nivel_agrupamiento");
                    sql.append(" and est_no_idoneos.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
                } else {
                    if (filtro.getUnidadFuncional().equals("EXPANSIONES_RECREATIVAS")) {
                        sql.append(" left join (");
                        sql.append(strSQLConsultarIndicador);
                        sql.append(" ) est_no_idoneos on est_no_idoneos.id_tnt = aux.id_tnt and est_no_idoneos.periodo = aux.periodo");
                        sql.append(String.format(" and est_no_idoneos.cod_indicador = '%s'", ParamIndicador.IND_AMBIENTE_EXPANSIONES_RECREATIVAS_NUMERO_ESTABLECIMIENTOS_NO_IDONEOS));
                        sql.append(" and est_no_idoneos.nivel_agrupamiento = ?nivel_agrupamiento");
                        sql.append(" and est_no_idoneos.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
                    } else {
                        sql.append(" left join (");
                        sql.append(strSQLConsultarIndicador);
                        sql.append(" ) est_no_idoneos on est_no_idoneos.id_tnt = aux.id_tnt and est_no_idoneos.periodo = aux.periodo");
                        sql.append(String.format(" and est_no_idoneos.cod_indicador = '%s'", ParamIndicador.IND_AMBIENTE_NUMERO_ESTABLECIMIENTOS_NO_IDONEOS));
                        sql.append(" and est_no_idoneos.nivel_agrupamiento = ?nivel_agrupamiento");
                        sql.append(" and est_no_idoneos.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
                        sql.append(" and est_no_idoneos.cod_valor = ?unidad_funcional");
                    }
                }

                //Total Establecimientos
                sql.append(" left join (");
                sql.append(strSQLConsultarIndicador);
                sql.append(" ) total_establecimientos on total_establecimientos.id_tnt = aux.id_tnt and total_establecimientos.periodo = aux.periodo");
                sql.append(String.format(" and total_establecimientos.cod_indicador = '%s'", ParamIndicador.IND_TOTAL_ESTABLECIMIENTOS));
                sql.append(" and total_establecimientos.nivel_agrupamiento = ?nivel_agrupamiento");
                sql.append(" and total_establecimientos.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
                if (!filtro.getUnidadFuncional().equals("BIBLIOTECA")) {
                    // Numero de Predios no idoneos
                    if (filtro.getUnidadFuncional().equals("EXPANSIONES_RECREATIVAS")) {
                        sql.append(" left join (");
                        sql.append(strSQLConsultarIndicador);
                        sql.append(" ) predios_no_idoneos on predios_no_idoneos.id_tnt = aux.id_tnt and predios_no_idoneos.periodo = aux.periodo");
                        sql.append(String.format(" and predios_no_idoneos.cod_indicador = '%s'", ParamIndicador.IND_AMBIENTE_EXPANSIONES_RECREATIVAS_NUMERO_PREDIOS_NO_IDONEOS));
                        sql.append(" and predios_no_idoneos.nivel_agrupamiento = ?nivel_agrupamiento");
                        sql.append(" and predios_no_idoneos.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
                    } else {
                        sql.append(" left join (");
                        sql.append(strSQLConsultarIndicador);
                        sql.append(" ) predios_no_idoneos on predios_no_idoneos.id_tnt = aux.id_tnt and predios_no_idoneos.periodo = aux.periodo");
                        sql.append(String.format(" and predios_no_idoneos.cod_indicador = '%s'", ParamIndicador.IND_AMBIENTE_NUMERO_PREDIOS_NO_IDONEOS));
                        sql.append(" and predios_no_idoneos.nivel_agrupamiento = ?nivel_agrupamiento");
                        sql.append(" and predios_no_idoneos.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
                        sql.append(" and predios_no_idoneos.cod_valor = ?unidad_funcional");
                    }

                    // Total de predios
                    sql.append(" left join (");
                    sql.append(strSQLConsultarIndicador);
                    sql.append(" ) total_predio on total_predio.id_tnt = aux.id_tnt and total_predio.periodo = aux.periodo");
                    sql.append(String.format(" and total_predio.cod_indicador = '%s'", ParamIndicador.IND_TOTAL_PREDIOS));
                    sql.append(" and total_predio.nivel_agrupamiento = ?nivel_agrupamiento");
                    sql.append(" and total_predio.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
                }
            }
        }
        // deficit_estandar Y Cumplimiento norma
        if (filtro.getUnidadFuncional().equals("BIBLIOTECA")) {
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) deficit_estandar on deficit_estandar.id_tnt = aux.id_tnt and deficit_estandar.periodo = aux.periodo");
            sql.append(String.format(" and deficit_estandar.cod_indicador = '%s'", ParamIndicador.IND_AMBIENTE_BIBLIOTECA_DEFICIT_ESTANDAR));
            sql.append(" and deficit_estandar.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and deficit_estandar.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) cumplimiento_norma on cumplimiento_norma.id_tnt = aux.id_tnt and cumplimiento_norma.periodo = aux.periodo");
            sql.append(String.format(" and cumplimiento_norma.cod_indicador = '%s'", ParamIndicador.IND_AMBIENTE_BIBLIOTECA_CUMPLIMIENTO_NORMA));
            sql.append(" and cumplimiento_norma.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and cumplimiento_norma.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
        } else {
            if (filtro.getUnidadFuncional().equals("EXPANSIONES_RECREATIVAS")) {
                sql.append(" left join (");
                sql.append(strSQLConsultarIndicador);
                sql.append(" ) deficit_estandar on deficit_estandar.id_tnt = aux.id_tnt and deficit_estandar.periodo = aux.periodo");
                sql.append(String.format(" and deficit_estandar.cod_indicador = '%s'", ParamIndicador.IND_AMBIENTE_EXPANSIONES_RECREATIVAS_DEFICIT_ESTANDAR));
                sql.append(" and deficit_estandar.nivel_agrupamiento = ?nivel_agrupamiento");
                sql.append(" and deficit_estandar.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

                sql.append(" left join (");
                sql.append(strSQLConsultarIndicador);
                sql.append(" ) cumplimiento_norma on cumplimiento_norma.id_tnt = aux.id_tnt and cumplimiento_norma.periodo = aux.periodo");
                sql.append(String.format(" and cumplimiento_norma.cod_indicador = '%s'", ParamIndicador.IND_AMBIENTE_EXPANSIONES_RECREATIVAS_CUMPLIMIENTO_NORMA));
                sql.append(" and cumplimiento_norma.nivel_agrupamiento = ?nivel_agrupamiento");
                sql.append(" and cumplimiento_norma.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            } else {
                sql.append(" left join (");
                sql.append(strSQLConsultarIndicador);
                sql.append(" ) deficit_estandar on deficit_estandar.id_tnt = aux.id_tnt and deficit_estandar.periodo = aux.periodo");
                sql.append(String.format(" and deficit_estandar.cod_indicador = '%s'", ParamIndicador.IND_AMBIENTE_DEFICIT_ESTANDAR));
                sql.append(" and deficit_estandar.nivel_agrupamiento = ?nivel_agrupamiento");
                sql.append(" and deficit_estandar.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
                sql.append(" and deficit_estandar.cod_valor = ?unidad_funcional");

                sql.append(" left join (");
                sql.append(strSQLConsultarIndicador);
                sql.append(" ) cumplimiento_norma on cumplimiento_norma.id_tnt = aux.id_tnt and cumplimiento_norma.periodo = aux.periodo");
                sql.append(String.format(" and cumplimiento_norma.cod_indicador = '%s'", ParamIndicador.IND_AMBIENTE_CUMPLIMIENTO_NORMA));
                sql.append(" and cumplimiento_norma.nivel_agrupamiento = ?nivel_agrupamiento");
                sql.append(" and cumplimiento_norma.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
                sql.append(" and cumplimiento_norma.cod_valor = ?unidad_funcional");
            }
        }

// WHERE
        sql.append(" where aux.id_tnt = ?id_tnt and aux.periodo = ?periodo");
        if (filtro.isAgrupamientoPredio()) {
            sql.append(" and n.principal_establecimiento = 1");
        }
        if (filtro.getIdNivel0() != null) {
            sql.append(" and n.id_nivel0 = ?id_nivel0");
        }
        if (filtro.getIdNivel1() != null) {
            sql.append(" and n.id_nivel1 = ?id_nivel1");
        }
        if (filtro.getIdNivel2() != null) {
            sql.append(" and n.id_nivel2 = ?id_nivel2");
        }
        if (filtro.getIdNivel3() != null) {
            sql.append(" and n.id_nivel3 = ?id_nivel3");
        }
        if (filtro.getIdNivel4() != null) {
            sql.append(" and n.id_nivel4 = ?id_nivel4");
        }
        if (filtro.getIdNivel5() != null) {
            sql.append(" and n.id_nivel5 = ?id_nivel5");
        }
        if (filtro.getIdEstablecimiento() != null) {
            sql.append(" and n.id_establecimiento = ?id_establecimiento");
        }
        if (filtro.getIdSede() != null) {
            sql.append(" and n.id_sede = ?id_sede");
        }
        if (filtro.getIdPredio() != null) {
            sql.append(" and n.id_predio = ?id_predio");
        }

        Query query = tpm.getEm().createNativeQuery(sql.toString());
        query.setParameter("unidad_funcional", filtro.getUnidadFuncional());
        query.setParameter("id_tnt", tpm.getCurrentTenant());
        query.setParameter("periodo", filtro.getPeriodo());
        query.setParameter("idioma", filtro.getIdioma());
        query.setParameter("id_nivel0", filtro.getIdNivel0());
        query.setParameter("nivel_agrupamiento", filtro.getAgrupamiento());
        if (filtro.getIdNivel1() != null) {
            query.setParameter("id_nivel1", filtro.getIdNivel1());
        }
        if (filtro.getIdNivel2() != null) {
            query.setParameter("id_nivel2", filtro.getIdNivel2());
        }
        if (filtro.getIdNivel3() != null) {
            query.setParameter("id_nivel3", filtro.getIdNivel3());
        }
        if (filtro.getIdNivel4() != null) {
            query.setParameter("id_nivel4", filtro.getIdNivel4());
        }
        if (filtro.getIdNivel5() != null) {
            query.setParameter("id_nivel5", filtro.getIdNivel5());
        }
        if (filtro.getIdEstablecimiento() != null) {
            query.setParameter("id_establecimiento", filtro.getIdEstablecimiento());
        }
        if (filtro.getIdSede() != null) {
            query.setParameter("id_sede", filtro.getIdSede());
        }
        if (filtro.getIdPredio() != null) {
            query.setParameter("id_predio", filtro.getIdPredio());
        }
        return query.getResultList();
    }

    @Override
    public List<Object[]> consultarAmpliacion(FiltroAmbitoAmpliacion filtro) {
        if (filtro.isConsultaDeTiempoReal()) {
            if (ParamBaseDatos.POSTGRE.equals(UtilProperties.getDbMotor())) {
                return this.consultarAmpliacionTiempoRealPostgre(filtro);
            } else {
                return this.consultarAmpliacionTiempoRealOracle(filtro);
            }
        } else {
            return this.consultarAmpliacionIndicadores(filtro);
        }
    }

    private List<Object[]> consultarAmpliacionTiempoRealPostgre(FiltroAmbitoAmpliacion filtro) {
        String codInstrumento = this.consultarCodInstrumentoPorPeriodo(filtro.getPeriodo());
        StringBuilder sql = new StringBuilder();
        StringBuilder ordenar = new StringBuilder();
//SELECT
        sql.append(" select distinct");
        if (filtro.isAgrupamientoPredio()) {
            ordenar.append(" n.codigo_nivel1,n.nombre_nivel1");
            ordenar.append(",n.codigo_nivel2,n.nombre_nivel2");
            ordenar.append(",n.codigo_nivel3,n.nombre_nivel3");
            ordenar.append(",n.codigo_nivel4,n.nombre_nivel4");
            ordenar.append(",n.codigo_nivel5,n.nombre_nivel5");
            ordenar.append(" ,n.codigo_establecimiento, n.nombre_establecimiento");
            ordenar.append(" ,n.codigo_sede, n.nombre_sede");
            ordenar.append(" ,n.codigo_predio, n.nombre_predio");
            // datos informativos
            ordenar.append(" ,n.direccion_predio, n.propiedad_predio");
            ordenar.append(" ,n.nombre_zona, n.nombre_sector, n.nombre_clima");
            sql.append(ordenar.toString());
            // indicadores
            sql.append(" ,etnias.etnias");
        } else {
            if (filtro.isAgrupamientoNivel0()) {
                ordenar.append(" n.nombre_nivel0");
            }
            if (filtro.isAgrupamientoNivel1()) {
                ordenar.append(" n.codigo_nivel1,n.nombre_nivel1");
            }
            if (filtro.isAgrupamientoNivel2()) {
                ordenar.append(" n.codigo_nivel1,n.nombre_nivel1");
                ordenar.append(",n.codigo_nivel2,n.nombre_nivel2");
            }
            if (filtro.isAgrupamientoNivel3()) {
                ordenar.append(" n.codigo_nivel1,n.nombre_nivel1");
                ordenar.append(",n.codigo_nivel2,n.nombre_nivel2");
                ordenar.append(",n.codigo_nivel3,n.nombre_nivel3");
            }
            if (filtro.isAgrupamientoNivel4()) {
                ordenar.append(" n.codigo_nivel1,n.nombre_nivel1");
                ordenar.append(",n.codigo_nivel2,n.nombre_nivel2");
                ordenar.append(",n.codigo_nivel3,n.nombre_nivel3");
                ordenar.append(",n.codigo_nivel4,n.nombre_nivel4");
            }
            if (filtro.isAgrupamientoNivel5()) {
                ordenar.append(" n.codigo_nivel1,n.nombre_nivel1");
                ordenar.append(",n.codigo_nivel2,n.nombre_nivel2");
                ordenar.append(",n.codigo_nivel3,n.nombre_nivel3");
                ordenar.append(",n.codigo_nivel4,n.nombre_nivel4");
                ordenar.append(",n.codigo_nivel5,n.nombre_nivel5");
            }
            if (filtro.isAgrupamientoEstablecimiento()) {
                ordenar.append(" n.codigo_nivel1,n.nombre_nivel1");
                ordenar.append(",n.codigo_nivel2,n.nombre_nivel2");
                ordenar.append(",n.codigo_nivel3,n.nombre_nivel3");
                ordenar.append(",n.codigo_nivel4,n.nombre_nivel4");
                ordenar.append(",n.codigo_nivel5,n.nombre_nivel5");
                ordenar.append(" ,n.codigo_establecimiento, n.nombre_establecimiento");
            }
            if (filtro.isAgrupamientoSede()) {
                ordenar.append(" n.codigo_nivel1,n.nombre_nivel1");
                ordenar.append(",n.codigo_nivel2,n.nombre_nivel2");
                ordenar.append(",n.codigo_nivel3,n.nombre_nivel3");
                ordenar.append(",n.codigo_nivel4,n.nombre_nivel4");
                ordenar.append(",n.codigo_nivel5,n.nombre_nivel5");
                ordenar.append(" ,n.codigo_establecimiento, n.nombre_establecimiento");
                ordenar.append(" ,n.codigo_sede, n.nombre_sede");
            }
            sql.append(ordenar.toString());
        }
        // indicadores  
        // predio
        sql.append(" ,predio1.area_real_predio");
        sql.append(" ,predio1.estandar_predio");
        sql.append(" ,predio1.estandar_lote");
        sql.append(" ,predio1.idoneidad_predio");
        sql.append(" ,case when predio2.cupos_predio >= 0 then ceil(predio2.cupos_predio) else floor(predio2.cupos_predio) end");
        sql.append(" ,predio3.m2_requeridos_predio");
        //area
        sql.append(" ,construccion1.area_cubierta_construccion");
        sql.append(" ,construccion1.estandar_construccion");
        sql.append(" ,construccion1.est_const");
        sql.append(" ,construccion1.idoneidad_construccion");
        sql.append(" ,construccion2.m2_requeridos_construccion");
        //aula
        sql.append(" ,ambiente_aula1.area_aula");
        sql.append(" ,ambiente_aula1.total_ambiente_aula");
        sql.append(" ,ambiente_aula1.estandar_aula");
        sql.append(" ,ambiente_aula1.idoneidad_aula");
        sql.append(" ,ambiente_aula2.m2_requeridos_aula");
        sql.append(" ,case when ambiente_aula2.espacios_requeridos_aula >= 0 then ceil(ambiente_aula2.espacios_requeridos_aula) else floor(ambiente_aula2.espacios_requeridos_aula) end");
        // infraestructura de construccion
        sql.append(" ,inf_constr.area_construccion_primer_piso");
        sql.append(" ,inf_constr.posibilidad_construccion_primer_piso");
        sql.append(" ,inf_constr.posibilidad_construccion_altura");
        sql.append(" ,inf_constr.posibilidad_construccion_total");
        // m2 ampliar cobertura y numero de alumnos
        sql.append(" ,cobertura.m2_ampliar_cobertura");
        sql.append(" ,cobertura.numero_alumnos_nuevos");

// FROM 
        sql.append(" from cier.ind_auxiliar_indicador aux");
        sql.append(" inner join cier.ind_auxiliar_consultas n on n.id_predio = aux.id_predio and n.periodo = aux.periodo and n.id_tnt = aux.id_tnt");
        if (filtro.isAgrupamientoPredio()) {
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ETNIAS_PREDIO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) as etnias on etnias.id_dig_instrumento = aux.id_dig_instrumento and etnias.id_predio = aux.id_predio");
        }
        String strSQLNivelAgrupamiento = this.getSQLNivelAgrupamiento(filtro);
        //  predios1
        sql.append(" left join (");
        sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_AMPLIACION_ESTANDAR_PREDIO, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
        sql.append(String.format(" ) as predio1 on predio1.%1$s = n.%1$s", strSQLNivelAgrupamiento));
        sql.append(" and predio1.periodo = aux.periodo and predio1.id_tnt = aux.id_tnt");
        //  predios2
        sql.append(" left join (");
        sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_AMPLIACION_CUPOS_PREDIO, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
        sql.append(String.format(" ) as predio2 on predio2.%1$s = n.%1$s", strSQLNivelAgrupamiento));
        sql.append(" and predio2.periodo = aux.periodo and predio2.id_tnt = aux.id_tnt");
        //  predios3
        sql.append(" left join (");
        sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_AMPLIACION_M2_REQUERIDOS_PREDIO, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
        sql.append(String.format(" ) as predio3 on predio3.%1$s = n.%1$s", strSQLNivelAgrupamiento));
        sql.append(" and predio3.periodo = aux.periodo and predio3.id_tnt = aux.id_tnt");
        //construccion1
        sql.append(" left join (");
        sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_AMPLIACION_ESTANDAR_CONSTRUCCION, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
        sql.append(String.format(" ) as construccion1 on construccion1.%1$s = n.%1$s", strSQLNivelAgrupamiento));
        sql.append(" and construccion1.periodo = aux.periodo and construccion1.id_tnt = aux.id_tnt");
        //construccion2
        sql.append(" left join (");
        sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_AMPLIACION_M2_REQUERIDOS_CONSTRUCCION, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
        sql.append(String.format(" ) as construccion2 on construccion2.%1$s = n.%1$s", strSQLNivelAgrupamiento));
        sql.append(" and construccion2.periodo = aux.periodo and construccion2.id_tnt = aux.id_tnt");
        //ambiente_aula1
        sql.append(" left join (");
        sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_AMPLIACION_ESTANDAR_AULA, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
        sql.append(String.format(" ) as ambiente_aula1 on ambiente_aula1.%1$s = n.%1$s", strSQLNivelAgrupamiento));
        sql.append(" and ambiente_aula1.periodo = aux.periodo and ambiente_aula1.id_tnt = aux.id_tnt");
        //ambiente_aula2
        sql.append(" left join (");
        sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_AMPLIACION_M2_REQUERIDOS_AULA, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
        sql.append(String.format(" ) as ambiente_aula2 on ambiente_aula2.%1$s = n.%1$s", strSQLNivelAgrupamiento));
        sql.append(" and ambiente_aula2.periodo = aux.periodo and ambiente_aula2.id_tnt = aux.id_tnt");
        //inf_constr        
        sql.append(" left join (");
        sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_AMPLIACION_POSIBILIDAD_CONSTRUCCION_TOTAL, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
        sql.append(String.format(" ) as inf_constr on inf_constr.%1$s = n.%1$s", strSQLNivelAgrupamiento));
        sql.append(" and inf_constr.periodo = aux.periodo and inf_constr.id_tnt = aux.id_tnt");
        //m2 ampliar cobertura y numero de alumnos       
        sql.append(" left join (");
        sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_AMPLIACION_M2_AMPLIAR_COBERTURA, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
        sql.append(String.format(" ) as cobertura on cobertura.%1$s = n.%1$s", strSQLNivelAgrupamiento));
        sql.append(" and cobertura.periodo = aux.periodo and cobertura.id_tnt = aux.id_tnt");
// WHERE
        sql.append(" where aux.id_tnt = ?id_tnt and aux.periodo = ?periodo");
        if (filtro.getIdNivel0() != null) {
            sql.append(" and n.id_nivel0 = ?id_nivel0");
        }
        if (filtro.getIdNivel1() != null) {
            sql.append(" and n.id_nivel1 = ?id_nivel1");
        }
        if (filtro.getIdNivel2() != null) {
            sql.append(" and n.id_nivel2 = ?id_nivel2");
        }
        if (filtro.getIdNivel3() != null) {
            sql.append(" and n.id_nivel3 = ?id_nivel3");
        }
        if (filtro.getIdNivel4() != null) {
            sql.append(" and n.id_nivel4 = ?id_nivel4");
        }
        if (filtro.getIdNivel5() != null) {
            sql.append(" and n.id_nivel5 = ?id_nivel5");
        }
        if (filtro.getIdEstablecimiento() != null) {
            sql.append(" and n.id_establecimiento = ?id_establecimiento");
        }
        if (filtro.getIdSede() != null) {
            sql.append(" and n.id_sede = ?id_sede");
        }
        if (filtro.getIdPredio() != null) {
            sql.append(" and n.id_predio = ?id_predio");
        }
        // otros filtros
        if (filtro.getCodZona() != null) {
            sql.append(" and n.codigo_zona = ?cod_zona");
        }
        if (filtro.getCodSector() != null) {
            sql.append(" and n.codigo_sector = ?cod_sector");
        }
        // area predio
        if (Cumplimiento.SI.equals(filtro.getCumplimientoAreaPredio())) {
            sql.append(" and (coalesce(predio1.idoneidad_predio,0)/100) >= 1");
        } else if (Cumplimiento.NO.equals(filtro.getCumplimientoAreaPredio())) {
            sql.append(" and (coalesce(predio1.idoneidad_predio,0)/100) < 1");
        }
        // construccion
        if (Cumplimiento.SI.equals(filtro.getCumplimientoAreaConstruccion())) {
            sql.append(" and (coalesce(construccion1.idoneidad_construccion,0)/100) >= 1");
        } else if (Cumplimiento.NO.equals(filtro.getCumplimientoAreaConstruccion())) {
            sql.append(" and (coalesce(construccion1.idoneidad_construccion,0)/100) < 1");
        }
        // ambiente_aula
        if (Cumplimiento.SI.equals(filtro.getCumplimientoAreaAmbienteAula())) {
            sql.append(" and (coalesce(ambiente_aula1.idoneidad_aula,0)/100) >= 1");
        } else if (Cumplimiento.NO.equals(filtro.getCumplimientoAreaAmbienteAula())) {
            sql.append(" and (coalesce(ambiente_aula1.idoneidad_aula,0)/100) < 1");
        }

        // ORDER BY
        sql.append(" order by ").append(ordenar.toString());

        String auxSql = sql.toString();
        auxSql = auxSql.replace(ParamSistema.SQL_FILTROS_POR_ATRIBUTOS, this.getSQLFiltrosAtributos(filtro));
        auxSql = auxSql.replaceAll("\\?start", "");
        auxSql = auxSql.replaceAll("\\?end", "");
        if (filtro.getCodZona() != null) {
            auxSql = auxSql.replaceAll("\\?cod_zona", "'" + filtro.getCodZona() + "'");
        }
        if (filtro.getCodSector() != null) {
            auxSql = auxSql.replaceAll("\\?cod_sector", "'" + filtro.getCodSector() + "'");
        }

        Query query = tpm.getEm().createNativeQuery(auxSql);
        query.setParameter("id_tnt", tpm.getCurrentTenant());
        query.setParameter("periodo", filtro.getPeriodo());
        query.setParameter("idioma", filtro.getIdioma());
        if (filtro.getIdNivel0() != null) {
            query.setParameter("id_nivel0", filtro.getIdNivel0());
        }
        if (filtro.getIdNivel1() != null) {
            query.setParameter("id_nivel1", filtro.getIdNivel1());
        }
        if (filtro.getIdNivel2() != null) {
            query.setParameter("id_nivel2", filtro.getIdNivel2());
        }
        if (filtro.getIdNivel3() != null) {
            query.setParameter("id_nivel3", filtro.getIdNivel3());
        }
        if (filtro.getIdNivel4() != null) {
            query.setParameter("id_nivel4", filtro.getIdNivel4());
        }
        if (filtro.getIdNivel5() != null) {
            query.setParameter("id_nivel5", filtro.getIdNivel5());
        }
        if (filtro.getIdEstablecimiento() != null) {
            query.setParameter("id_establecimiento", filtro.getIdEstablecimiento());
        }
        if (filtro.getIdSede() != null) {
            query.setParameter("id_sede", filtro.getIdSede());
        }
        if (filtro.getIdPredio() != null) {
            query.setParameter("id_predio", filtro.getIdPredio());
        }

        return query.getResultList();
    }

    private List<Object[]> consultarAmpliacionTiempoRealOracle(FiltroAmbitoAmpliacion filtro) {
        String codInstrumento = this.consultarCodInstrumentoPorPeriodo(filtro.getPeriodo());
        StringBuilder sql = new StringBuilder();
        StringBuilder ordenar = new StringBuilder();
//SELECT
        sql.append(" select distinct");
        if (filtro.isAgrupamientoPredio()) {
            ordenar.append(" n.codigo_nivel1,n.nombre_nivel1");
            ordenar.append(",n.codigo_nivel2,n.nombre_nivel2");
            ordenar.append(",n.codigo_nivel3,n.nombre_nivel3");
            ordenar.append(",n.codigo_nivel4,n.nombre_nivel4");
            ordenar.append(",n.codigo_nivel5,n.nombre_nivel5");
            ordenar.append(" ,n.codigo_establecimiento, n.nombre_establecimiento");
            ordenar.append(" ,n.codigo_sede, n.nombre_sede");
            ordenar.append(" ,n.codigo_predio, n.nombre_predio");
            // datos informativos
            ordenar.append(" ,n.direccion_predio, n.propiedad_predio");
            ordenar.append(" ,n.nombre_zona, n.nombre_sector, n.nombre_clima");
            sql.append(ordenar.toString());
            // indicadores
            sql.append(" ,etnias.etnias");
        } else {
            if (filtro.isAgrupamientoNivel0()) {
                ordenar.append(" n.nombre_nivel0");
            }
            if (filtro.isAgrupamientoNivel1()) {
                ordenar.append(" n.codigo_nivel1,n.nombre_nivel1");
            }
            if (filtro.isAgrupamientoNivel2()) {
                ordenar.append(" n.codigo_nivel1,n.nombre_nivel1");
                ordenar.append(",n.codigo_nivel2,n.nombre_nivel2");
            }
            if (filtro.isAgrupamientoNivel3()) {
                ordenar.append(" n.codigo_nivel1,n.nombre_nivel1");
                ordenar.append(",n.codigo_nivel2,n.nombre_nivel2");
                ordenar.append(",n.codigo_nivel3,n.nombre_nivel3");
            }
            if (filtro.isAgrupamientoNivel4()) {
                ordenar.append(" n.codigo_nivel1,n.nombre_nivel1");
                ordenar.append(",n.codigo_nivel2,n.nombre_nivel2");
                ordenar.append(",n.codigo_nivel3,n.nombre_nivel3");
                ordenar.append(",n.codigo_nivel4,n.nombre_nivel4");
            }
            if (filtro.isAgrupamientoNivel5()) {
                ordenar.append(" n.codigo_nivel1,n.nombre_nivel1");
                ordenar.append(",n.codigo_nivel2,n.nombre_nivel2");
                ordenar.append(",n.codigo_nivel3,n.nombre_nivel3");
                ordenar.append(",n.codigo_nivel4,n.nombre_nivel4");
                ordenar.append(",n.codigo_nivel5,n.nombre_nivel5");
            }
            if (filtro.isAgrupamientoEstablecimiento()) {
                ordenar.append(" n.codigo_nivel1,n.nombre_nivel1");
                ordenar.append(",n.codigo_nivel2,n.nombre_nivel2");
                ordenar.append(",n.codigo_nivel3,n.nombre_nivel3");
                ordenar.append(",n.codigo_nivel4,n.nombre_nivel4");
                ordenar.append(",n.codigo_nivel5,n.nombre_nivel5");
                ordenar.append(" ,n.codigo_establecimiento, n.nombre_establecimiento");
            }
            if (filtro.isAgrupamientoSede()) {
                ordenar.append(" n.codigo_nivel1,n.nombre_nivel1");
                ordenar.append(",n.codigo_nivel2,n.nombre_nivel2");
                ordenar.append(",n.codigo_nivel3,n.nombre_nivel3");
                ordenar.append(",n.codigo_nivel4,n.nombre_nivel4");
                ordenar.append(",n.codigo_nivel5,n.nombre_nivel5");
                ordenar.append(" ,n.codigo_establecimiento, n.nombre_establecimiento");
                ordenar.append(" ,n.codigo_sede, n.nombre_sede");
            }
            sql.append(ordenar.toString());
        }
        // indicadores  
        // predio
        sql.append(" ,predio1.area_real_predio");
        sql.append(" ,predio1.estandar_predio");
        sql.append(" ,predio1.estandar_lote");
        sql.append(" ,predio1.idoneidad_predio");
        sql.append(" ,round(char_to_double(predio2.cupos_predio))");
        sql.append(" ,predio3.m2_requeridos_predio");
        //area
        sql.append(" ,construccion1.area_cubierta_construccion");
        sql.append(" ,construccion1.estandar_construccion");
        sql.append(" ,construccion1.est_const");
        sql.append(" ,construccion1.idoneidad_construccion");
        sql.append(" ,construccion2.m2_requeridos_construccion");
        //aula
        sql.append(" ,ambiente_aula1.area_aula");
        sql.append(" ,ambiente_aula1.total_ambiente_aula");
        sql.append(" ,ambiente_aula1.estandar_aula");
        sql.append(" ,ambiente_aula1.idoneidad_aula");
        sql.append(" ,ambiente_aula2.m2_requeridos_aula");
        sql.append(" ,round(char_to_double(ambiente_aula2.espacios_requeridos_aula))");
        // infraestructura de construccion
        sql.append(" ,inf_constr.area_const_primer_piso");
        sql.append(" ,inf_constr.posib_const_primer_piso");
        sql.append(" ,inf_constr.posib_const_altura");
        sql.append(" ,inf_constr.posib_const_total");
        // m2 ampliar cobertura y numero de alumnos
        sql.append(" ,cobertura.m2_ampliar_cobertura");
        sql.append(" ,cobertura.numero_alumnos_nuevos");

// FROM 
        sql.append(" from ind_auxiliar_indicador aux");
        sql.append(" inner join ind_auxiliar_consultas n on n.id_predio = aux.id_predio and n.periodo = aux.periodo and n.id_tnt = aux.id_tnt");
        if (filtro.isAgrupamientoPredio()) {
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ETNIAS_PREDIO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) etnias on etnias.id_predio = aux.id_predio");
        }
        String strSQLNivelAgrupamiento = this.getSQLNivelAgrupamiento(filtro);
        //  predios1
        sql.append(" left join (");
        sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_AMPLIACION_ESTANDAR_PREDIO, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
        sql.append(String.format(" ) predio1 on predio1.%1$s = n.%1$s", strSQLNivelAgrupamiento));
        sql.append(" and predio1.periodo = aux.periodo and predio1.id_tnt = aux.id_tnt");
        //  predios2
        sql.append(" left join (");
        sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_AMPLIACION_CUPOS_PREDIO, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
        sql.append(String.format(" ) predio2 on predio2.%1$s = n.%1$s", strSQLNivelAgrupamiento));
        sql.append(" and predio2.periodo = aux.periodo and predio2.id_tnt = aux.id_tnt");
        //  predios3
        sql.append(" left join (");
        sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_AMPLIACION_M2_REQUERIDOS_PREDIO, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
        sql.append(String.format(" ) predio3 on predio3.%1$s = n.%1$s", strSQLNivelAgrupamiento));
        sql.append(" and predio3.periodo = aux.periodo and predio3.id_tnt = aux.id_tnt");
        //construccion1
        sql.append(" left join (");
        sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_AMPLIACION_ESTANDAR_CONSTRUCCION, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
        sql.append(String.format(" ) construccion1 on construccion1.%1$s = n.%1$s", strSQLNivelAgrupamiento));
        sql.append(" and construccion1.periodo = aux.periodo and construccion1.id_tnt = aux.id_tnt");
        //construccion2
        sql.append(" left join (");
        sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_AMPLIACION_M2_REQUERIDOS_CONSTRUCCION, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
        sql.append(String.format(" ) construccion2 on construccion2.%1$s = n.%1$s", strSQLNivelAgrupamiento));
        sql.append(" and construccion2.periodo = aux.periodo and construccion2.id_tnt = aux.id_tnt");
        //ambiente_aula1
        sql.append(" left join (");
        sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_AMPLIACION_ESTANDAR_AULA, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
        sql.append(String.format(" ) ambiente_aula1 on ambiente_aula1.%1$s = n.%1$s", strSQLNivelAgrupamiento));
        sql.append(" and ambiente_aula1.periodo = aux.periodo and ambiente_aula1.id_tnt = aux.id_tnt");
        //ambiente_aula2
        sql.append(" left join (");
        sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_AMPLIACION_M2_REQUERIDOS_AULA, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
        sql.append(String.format(" ) ambiente_aula2 on ambiente_aula2.%1$s = n.%1$s", strSQLNivelAgrupamiento));
        sql.append(" and ambiente_aula2.periodo = aux.periodo and ambiente_aula2.id_tnt = aux.id_tnt");
        //inf_constr        
        sql.append(" left join (");
        sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_AMPLIACION_POSIBILIDAD_CONSTRUCCION_ALTURA, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
        sql.append(String.format(" ) inf_constr on inf_constr.%1$s = n.%1$s", strSQLNivelAgrupamiento));
        sql.append(" and inf_constr.periodo = aux.periodo and inf_constr.id_tnt = aux.id_tnt");
        //m2 ampliar cobertura y numero de alumnos       
        sql.append(" left join (");
        sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_AMPLIACION_M2_AMPLIAR_COBERTURA, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
        sql.append(String.format(" ) cobertura on cobertura.%1$s = n.%1$s", strSQLNivelAgrupamiento));
        sql.append(" and cobertura.periodo = aux.periodo and cobertura.id_tnt = aux.id_tnt");
// WHERE
        sql.append(" where aux.id_tnt = ?id_tnt and aux.periodo = ?periodo");
        if (filtro.getIdNivel0() != null) {
            sql.append(" and n.id_nivel0 = ?id_nivel0");
        }
        if (filtro.getIdNivel1() != null) {
            sql.append(" and n.id_nivel1 = ?id_nivel1");
        }
        if (filtro.getIdNivel2() != null) {
            sql.append(" and n.id_nivel2 = ?id_nivel2");
        }
        if (filtro.getIdNivel3() != null) {
            sql.append(" and n.id_nivel3 = ?id_nivel3");
        }
        if (filtro.getIdNivel4() != null) {
            sql.append(" and n.id_nivel4 = ?id_nivel4");
        }
        if (filtro.getIdNivel5() != null) {
            sql.append(" and n.id_nivel5 = ?id_nivel5");
        }
        if (filtro.getIdEstablecimiento() != null) {
            sql.append(" and n.id_establecimiento = ?id_establecimiento");
        }
        if (filtro.getIdSede() != null) {
            sql.append(" and n.id_sede = ?id_sede");
        }
        if (filtro.getIdPredio() != null) {
            sql.append(" and n.id_predio = ?id_predio");
        }
        // otros filtros
        if (filtro.getCodZona() != null) {
            sql.append(" and n.codigo_zona = ?cod_zona");
        }
        if (filtro.getCodSector() != null) {
            sql.append(" and n.codigo_sector = ?cod_sector");
        }
        // area predio
        if (Cumplimiento.SI.equals(filtro.getCumplimientoAreaPredio())) {
            sql.append(" and (coalesce(predio1.idoneidad_predio,0)/100) >= 1");
        } else if (Cumplimiento.NO.equals(filtro.getCumplimientoAreaPredio())) {
            sql.append(" and (coalesce(predio1.idoneidad_predio,0)/100) < 1");
        }
        // construccion
        if (Cumplimiento.SI.equals(filtro.getCumplimientoAreaConstruccion())) {
            sql.append(" and (coalesce(construccion1.idoneidad_construccion,0)/100) >= 1");
        } else if (Cumplimiento.NO.equals(filtro.getCumplimientoAreaConstruccion())) {
            sql.append(" and (coalesce(construccion1.idoneidad_construccion,0)/100) < 1");
        }
        // ambiente_aula
        if (Cumplimiento.SI.equals(filtro.getCumplimientoAreaAmbienteAula())) {
            sql.append(" and (coalesce(ambiente_aula1.idoneidad_aula,0)/100) >= 1");
        } else if (Cumplimiento.NO.equals(filtro.getCumplimientoAreaAmbienteAula())) {
            sql.append(" and (coalesce(ambiente_aula1.idoneidad_aula,0)/100) < 1");
        }

        // ORDER BY
        sql.append(" order by ").append(ordenar.toString());
        Query query = tpm.getEm().createNativeQuery(sql.toString().replace(ParamSistema.SQL_FILTROS_POR_ATRIBUTOS, this.getSQLFiltrosAtributos(filtro)));
        query.setParameter("id_tnt", tpm.getCurrentTenant());
        query.setParameter("periodo", filtro.getPeriodo());
        query.setParameter("idioma", filtro.getIdioma());
        if (filtro.getIdNivel0() != null) {
            query.setParameter("id_nivel0", filtro.getIdNivel0());
        }
        if (filtro.getIdNivel1() != null) {
            query.setParameter("id_nivel1", filtro.getIdNivel1());
        }
        if (filtro.getIdNivel2() != null) {
            query.setParameter("id_nivel2", filtro.getIdNivel2());
        }
        if (filtro.getIdNivel3() != null) {
            query.setParameter("id_nivel3", filtro.getIdNivel3());
        }
        if (filtro.getIdNivel4() != null) {
            query.setParameter("id_nivel4", filtro.getIdNivel4());
        }
        if (filtro.getIdNivel5() != null) {
            query.setParameter("id_nivel5", filtro.getIdNivel5());
        }
        if (filtro.getIdEstablecimiento() != null) {
            query.setParameter("id_establecimiento", filtro.getIdEstablecimiento());
        }
        if (filtro.getIdSede() != null) {
            query.setParameter("id_sede", filtro.getIdSede());
        }
        if (filtro.getIdPredio() != null) {
            query.setParameter("id_predio", filtro.getIdPredio());
        }
        // otros filtros
        if (filtro.getCodZona() != null) {
            query.setParameter("cod_zona", filtro.getCodZona());
        }
        if (filtro.getCodSector() != null) {
            query.setParameter("cod_sector", filtro.getCodSector());
        }

        return query.getResultList();
    }

    private List<Object[]> consultarAmpliacionIndicadores(FiltroAmbitoAmpliacion filtro) {

        StringBuilder sql = new StringBuilder();
        StringBuilder ordenar = new StringBuilder();
// SELECT
        sql.append(" select distinct");
        if (filtro.isAgrupamientoPredio()) {
            ordenar.append(" n.codigo_nivel1,n.nombre_nivel1");
            ordenar.append(",n.codigo_nivel2,n.nombre_nivel2");
            ordenar.append(",n.codigo_nivel3,n.nombre_nivel3");
            ordenar.append(",n.codigo_nivel4,n.nombre_nivel4");
            ordenar.append(",n.codigo_nivel5,n.nombre_nivel5");
            ordenar.append(" ,n.codigo_establecimiento, n.nombre_establecimiento");
            ordenar.append(" ,n.codigo_sede, n.nombre_sede");
            ordenar.append(" ,n.codigo_predio, n.nombre_predio");
            //otros
            ordenar.append(" ,n.direccion_predio, n.propiedad_predio");
            ordenar.append(" ,n.nombre_zona, n.nombre_sector, n.nombre_clima");
            //etnias
            ordenar.append(" ,etnias.valor");
        }
        if (filtro.isAgrupamientoNivel0()) {
            ordenar.append(" n.nombre_nivel0");
        }
        if (filtro.isAgrupamientoNivel1()) {
            ordenar.append(" n.codigo_nivel1,n.nombre_nivel1");
        }
        if (filtro.isAgrupamientoNivel2()) {
            ordenar.append(" n.codigo_nivel1,n.nombre_nivel1");
            ordenar.append(",n.codigo_nivel2,n.nombre_nivel2");
        }
        if (filtro.isAgrupamientoNivel3()) {
            ordenar.append(" n.codigo_nivel1,n.nombre_nivel1");
            ordenar.append(",n.codigo_nivel2,n.nombre_nivel2");
            ordenar.append(",n.codigo_nivel3,n.nombre_nivel3");
        }
        if (filtro.isAgrupamientoNivel4()) {
            ordenar.append(" n.codigo_nivel1,n.nombre_nivel1");
            ordenar.append(",n.codigo_nivel2,n.nombre_nivel2");
            ordenar.append(",n.codigo_nivel3,n.nombre_nivel3");
            ordenar.append(",n.codigo_nivel4,n.nombre_nivel4");
        }
        if (filtro.isAgrupamientoNivel5()) {
            ordenar.append(" n.codigo_nivel1,n.nombre_nivel1");
            ordenar.append(",n.codigo_nivel2,n.nombre_nivel2");
            ordenar.append(",n.codigo_nivel3,n.nombre_nivel3");
            ordenar.append(",n.codigo_nivel4,n.nombre_nivel4");
            ordenar.append(",n.codigo_nivel5,n.nombre_nivel5");
        }
        if (filtro.isAgrupamientoEstablecimiento()) {
            ordenar.append(" n.codigo_nivel1,n.nombre_nivel1");
            ordenar.append(",n.codigo_nivel2,n.nombre_nivel2");
            ordenar.append(",n.codigo_nivel3,n.nombre_nivel3");
            ordenar.append(",n.codigo_nivel4,n.nombre_nivel4");
            ordenar.append(",n.codigo_nivel5,n.nombre_nivel5");
            ordenar.append(" ,n.codigo_establecimiento, n.nombre_establecimiento");
        }
        if (filtro.isAgrupamientoSede()) {
            ordenar.append(" n.codigo_nivel1,n.nombre_nivel1");
            ordenar.append(",n.codigo_nivel2,n.nombre_nivel2");
            ordenar.append(",n.codigo_nivel3,n.nombre_nivel3");
            ordenar.append(",n.codigo_nivel4,n.nombre_nivel4");
            ordenar.append(",n.codigo_nivel5,n.nombre_nivel5");
            ordenar.append(" ,n.codigo_establecimiento, n.nombre_establecimiento");
            ordenar.append(" ,n.codigo_sede, n.nombre_sede");
        }
        sql.append(ordenar.toString());
        // indicadores              
        // PREDIO
        //area_real_predio
        sql.append(" ,predio1.valor");
        //estandar_predio
        sql.append(" ,predio2.valor");
        //estandar_lote
        sql.append(" ,tbl_estandar_lote.valor");
        //idoneidad_predio
        sql.append(" ,predio3.valor");
        //cupos_predio            
        sql.append(" ,round(char_to_double(predio4.valor))");
        //m2_requeridos_predio
        sql.append(" ,predio5.valor");
        //AREA
        //area_cubierta_construccion
        sql.append(" ,construccion1.valor");
        //estandar_construccion
        sql.append(" ,construccion2.valor");
        //estandar_construccion de centralizado ind_estandar_lote
        sql.append(" ,tbl_estandar_construccion.valor");
        //idoneidad_construccion
        sql.append(" ,construccion3.valor");
        //m2_requeridos_construccion
        sql.append(" ,construccion4.valor");
        //AULA
        //area_aula
        sql.append(" ,ambiente_aula1.valor");
        //total_ambiente_aula
        sql.append(" ,ambiente_aula2.valor");
        //estandar_aula
        sql.append(" ,ambiente_aula3.valor");
        //idoneidad_aula
        sql.append(" ,ambiente_aula4.valor");
        //m2_requeridos_aula
        sql.append(" ,ambiente_aula5.valor");
        //espacios_requeridos_aula
        sql.append(" ,round(char_to_double(ambiente_aula6.valor))");
        // INFRAESTRUCTURA
        //area_construccion_primer_piso
        sql.append(" ,inf_constr1.valor");
        //posibilidad_construccion_primer_piso
        sql.append(" ,inf_constr2.valor");
        //posibilidad_construccion_altura
        sql.append(" ,inf_constr3.valor");
        //posibilidad_construccion_total
        sql.append(" ,inf_constr4.valor");
        // m2 ampliar cobertura
        sql.append(" ,m2_ampliar_cobertura.valor");
        //numero de alumnos
        sql.append(" ,numero_alumnos_nuevos.valor");
// FROM 
        sql.append(" from ind_auxiliar_indicador aux");
        sql.append(" inner join ind_auxiliar_consultas n on n.id_predio = aux.id_predio and n.periodo = aux.periodo and n.id_tnt = aux.id_tnt");

        String strSQLNivelAgrupamiento = this.getSQLNivelAgrupamiento(filtro);
        String strSQLConsultarIndicador = this.getSQLConsultarIndicadorAlmacenado();

        if (filtro.isAgrupamientoPredio()) {
            // etnias
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) etnias on etnias.id_tnt = aux.id_tnt and etnias.periodo = aux.periodo");
            sql.append(String.format(" and etnias.cod_indicador = '%s'", ParamIndicador.IND_ETNIAS_PREDIO));
            sql.append(" and etnias.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and etnias.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
        }

        //PREDIO
        //area_real_predio
        sql.append(" left join (");
        sql.append(strSQLConsultarIndicador);
        sql.append(" ) predio1 on predio1.id_tnt = aux.id_tnt and predio1.periodo = aux.periodo");
        sql.append(String.format(" and predio1.cod_indicador = '%s'", ParamIndicador.IND_AREA_REAL_PREDIO));
        sql.append(" and predio1.nivel_agrupamiento = ?nivel_agrupamiento");
        sql.append(" and predio1.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
        //estandar_predio
        sql.append(" left join (");
        sql.append(strSQLConsultarIndicador);
        sql.append(" ) predio2 on predio2.id_tnt = aux.id_tnt and predio2.periodo = aux.periodo");
        sql.append(String.format(" and predio2.cod_indicador = '%s'", ParamIndicador.IND_AMPLIACION_ESTANDAR_PREDIO));
        sql.append(" and predio2.nivel_agrupamiento = ?nivel_agrupamiento");
        sql.append(" and predio2.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
        //idoneidad_predio
        sql.append(" left join (");
        sql.append(strSQLConsultarIndicador);
        sql.append(" ) predio3 on predio3.id_tnt = aux.id_tnt and predio3.periodo = aux.periodo");
        sql.append(String.format(" and predio3.cod_indicador = '%s'", ParamIndicador.IND_AMPLIACION_IDONEIDAD_PREDIO));
        sql.append(" and predio3.nivel_agrupamiento = ?nivel_agrupamiento");
        sql.append(" and predio3.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
        //cupos_predio            
        sql.append(" left join (");
        sql.append(strSQLConsultarIndicador);
        sql.append(" ) predio4 on predio4.id_tnt = aux.id_tnt and predio4.periodo = aux.periodo");
        sql.append(String.format(" and predio4.cod_indicador = '%s'", ParamIndicador.IND_AMPLIACION_CUPOS_PREDIO));
        sql.append(" and predio4.nivel_agrupamiento = ?nivel_agrupamiento");
        sql.append(" and predio4.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
        //m2_requeridos_predio
        sql.append(" left join (");
        sql.append(strSQLConsultarIndicador);
        sql.append(" ) predio5 on predio5.id_tnt = aux.id_tnt and predio5.periodo = aux.periodo");
        sql.append(String.format(" and predio5.cod_indicador = '%s'", ParamIndicador.IND_AMPLIACION_M2_REQUERIDOS_PREDIO));
        sql.append(" and predio5.nivel_agrupamiento = ?nivel_agrupamiento");
        sql.append(" and predio5.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

        //AREA
        //area_cubierta_construccion
        sql.append(" left join (");
        sql.append(strSQLConsultarIndicador);
        sql.append(" ) construccion1 on construccion1.id_tnt = aux.id_tnt and construccion1.periodo = aux.periodo");
        sql.append(String.format(" and construccion1.cod_indicador = '%s'", ParamIndicador.IND_TOTAL_AREA_CONSTRUCCION_PREDIO));
        sql.append(" and construccion1.nivel_agrupamiento = ?nivel_agrupamiento");
        sql.append(" and construccion1.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
        //estandar_construccion
        sql.append(" left join (");
        sql.append(strSQLConsultarIndicador);
        sql.append(" ) construccion2 on construccion2.id_tnt = aux.id_tnt and construccion2.periodo = aux.periodo");
        sql.append(String.format(" and construccion2.cod_indicador = '%s'", ParamIndicador.IND_AMPLIACION_ESTANDAR_CONSTRUCCION));
        sql.append(" and construccion2.nivel_agrupamiento = ?nivel_agrupamiento");
        sql.append(" and construccion2.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
        //idoneidad_construccion
        sql.append(" left join (");
        sql.append(strSQLConsultarIndicador);
        sql.append(" ) construccion3 on construccion3.id_tnt = aux.id_tnt and construccion3.periodo = aux.periodo");
        sql.append(String.format(" and construccion3.cod_indicador = '%s'", ParamIndicador.IND_AMPLIACION_IDONEIDAD_CONSTRUCCION));
        sql.append(" and construccion3.nivel_agrupamiento = ?nivel_agrupamiento");
        sql.append(" and construccion3.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
        //m2_requeridos_construccion
        sql.append(" left join (");
        sql.append(strSQLConsultarIndicador);
        sql.append(" ) construccion4 on construccion4.id_tnt = aux.id_tnt and construccion4.periodo = aux.periodo");
        sql.append(String.format(" and construccion4.cod_indicador = '%s'", ParamIndicador.IND_AMPLIACION_M2_REQUERIDOS_CONSTRUCCION));
        sql.append(" and construccion4.nivel_agrupamiento = ?nivel_agrupamiento");
        sql.append(" and construccion4.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

        //AULA 
        //area_aula
        sql.append(" left join (");
        sql.append(strSQLConsultarIndicador);
        sql.append(" ) ambiente_aula1 on ambiente_aula1.id_tnt = aux.id_tnt and ambiente_aula1.periodo = aux.periodo");
        sql.append(String.format(" and ambiente_aula1.cod_indicador = '%s'", ParamIndicador.IND_AMPLIACION_AREA_AULA));
        sql.append(" and ambiente_aula1.nivel_agrupamiento = ?nivel_agrupamiento");
        sql.append(" and ambiente_aula1.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
        //total_ambiente_aula
        sql.append(" left join (");
        sql.append(strSQLConsultarIndicador);
        sql.append(" ) ambiente_aula2 on ambiente_aula2.id_tnt = aux.id_tnt and ambiente_aula2.periodo = aux.periodo");
        sql.append(String.format(" and ambiente_aula2.cod_indicador = '%s'", ParamIndicador.IND_AMPLIACION_NUM_TOTAL_AULA));
        sql.append(" and ambiente_aula2.nivel_agrupamiento = ?nivel_agrupamiento");
        sql.append(" and ambiente_aula2.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
        //estandar_aula
        sql.append(" left join (");
        sql.append(strSQLConsultarIndicador);
        sql.append(" ) ambiente_aula3 on ambiente_aula3.id_tnt = aux.id_tnt and ambiente_aula3.periodo = aux.periodo");
        sql.append(String.format(" and ambiente_aula3.cod_indicador = '%s'", ParamIndicador.IND_AMPLIACION_ESTANDAR_AULA));
        sql.append(" and ambiente_aula3.nivel_agrupamiento = ?nivel_agrupamiento");
        sql.append(" and ambiente_aula3.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
        //idoneidad_aula
        sql.append(" left join (");
        sql.append(strSQLConsultarIndicador);
        sql.append(" ) ambiente_aula4 on ambiente_aula4.id_tnt = aux.id_tnt and ambiente_aula4.periodo = aux.periodo");
        sql.append(String.format(" and ambiente_aula4.cod_indicador = '%s'", ParamIndicador.IND_AMPLIACION_IDONEIDAD_AULA));
        sql.append(" and ambiente_aula4.nivel_agrupamiento = ?nivel_agrupamiento");
        sql.append(" and ambiente_aula4.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
        //m2_requeridos_aula
        sql.append(" left join (");
        sql.append(strSQLConsultarIndicador);
        sql.append(" ) ambiente_aula5 on ambiente_aula5.id_tnt = aux.id_tnt and ambiente_aula5.periodo = aux.periodo");
        sql.append(String.format(" and ambiente_aula5.cod_indicador = '%s'", ParamIndicador.IND_AMPLIACION_M2_REQUERIDOS_AULA));
        sql.append(" and ambiente_aula5.nivel_agrupamiento = ?nivel_agrupamiento");
        sql.append(" and ambiente_aula5.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
        //espacios_requeridos_aula
        sql.append(" left join (");
        sql.append(strSQLConsultarIndicador);
        sql.append(" ) ambiente_aula6 on ambiente_aula6.id_tnt = aux.id_tnt and ambiente_aula6.periodo = aux.periodo");
        sql.append(String.format(" and ambiente_aula6.cod_indicador = '%s'", ParamIndicador.IND_AMPLIACION_ESPACIO_REQUERIDOS_AULA));
        sql.append(" and ambiente_aula6.nivel_agrupamiento = ?nivel_agrupamiento");
        sql.append(" and ambiente_aula6.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

        // INFRAESTRUCTURA 
        //area_construccion_primer_piso
        sql.append(" left join (");
        sql.append(strSQLConsultarIndicador);
        sql.append(" ) inf_constr1 on inf_constr1.id_tnt = aux.id_tnt and inf_constr1.periodo = aux.periodo");
        sql.append(String.format(" and inf_constr1.cod_indicador = '%s'", ParamIndicador.IND_AMPLIACION_AREA_CONSTRUCCION_PRIMER_PISO));
        sql.append(" and inf_constr1.nivel_agrupamiento = ?nivel_agrupamiento");
        sql.append(" and inf_constr1.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
        //posibilidad_construccion_primer_piso
        sql.append(" left join (");
        sql.append(strSQLConsultarIndicador);
        sql.append(" ) inf_constr2 on inf_constr2.id_tnt = aux.id_tnt and inf_constr2.periodo = aux.periodo");
        sql.append(String.format(" and inf_constr2.cod_indicador = '%s'", ParamIndicador.IND_AMPLIACION_POSIBILIDAD_CONSTRUCCION_PRIMER_PISO));
        sql.append(" and inf_constr2.nivel_agrupamiento = ?nivel_agrupamiento");
        sql.append(" and inf_constr2.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
        //posibilidad_construccion_altura
        sql.append(" left join (");
        sql.append(strSQLConsultarIndicador);
        sql.append(" ) inf_constr3 on inf_constr3.id_tnt = aux.id_tnt and inf_constr3.periodo = aux.periodo");
        sql.append(String.format(" and inf_constr3.cod_indicador = '%s'", ParamIndicador.IND_AMPLIACION_POSIBILIDAD_CONSTRUCCION_ALTURA));
        sql.append(" and inf_constr3.nivel_agrupamiento = ?nivel_agrupamiento");
        sql.append(" and inf_constr3.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
        //posibilidad_construccion_total
        sql.append(" left join (");
        sql.append(strSQLConsultarIndicador);
        sql.append(" ) inf_constr4 on inf_constr4.id_tnt = aux.id_tnt and inf_constr4.periodo = aux.periodo");
        sql.append(String.format(" and inf_constr4.cod_indicador = '%s'", ParamIndicador.IND_AMPLIACION_POSIBILIDAD_CONSTRUCCION_TOTAL));
        sql.append(" and inf_constr4.nivel_agrupamiento = ?nivel_agrupamiento");
        sql.append(" and inf_constr4.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
        // m2 ampliar cobertura
        sql.append(" left join (");
        sql.append(strSQLConsultarIndicador);
        sql.append(" ) m2_ampliar_cobertura on m2_ampliar_cobertura.id_tnt = aux.id_tnt and m2_ampliar_cobertura.periodo = aux.periodo");
        sql.append(String.format(" and m2_ampliar_cobertura.cod_indicador = '%s'", ParamIndicador.IND_AMPLIACION_M2_AMPLIAR_COBERTURA));
        sql.append(" and m2_ampliar_cobertura.nivel_agrupamiento = ?nivel_agrupamiento");
        sql.append(" and m2_ampliar_cobertura.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
        //numero de alumnos
        sql.append(" left join (");
        sql.append(strSQLConsultarIndicador);
        sql.append(" ) numero_alumnos_nuevos on numero_alumnos_nuevos.id_tnt = aux.id_tnt and numero_alumnos_nuevos.periodo = aux.periodo");
        sql.append(String.format(" and numero_alumnos_nuevos.cod_indicador = '%s'", ParamIndicador.IND_AMPLIACION_ALUMNOS_NUEVOS_INFRAESTRUCTURA));
        sql.append(" and numero_alumnos_nuevos.nivel_agrupamiento = ?nivel_agrupamiento");
        sql.append(" and numero_alumnos_nuevos.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
        //estandar_lote
        sql.append(" left join (");
        sql.append(strSQLConsultarIndicador);
        sql.append(" ) tbl_estandar_lote on tbl_estandar_lote.id_tnt = aux.id_tnt and tbl_estandar_lote.periodo = aux.periodo");
        sql.append(String.format(" and tbl_estandar_lote.cod_indicador = '%s'", ParamIndicador.IND_ESTANDAR_LOTE));
        sql.append(" and tbl_estandar_lote.nivel_agrupamiento = ?nivel_agrupamiento");
        sql.append(" and tbl_estandar_lote.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
        //estandar_construccion de ind_estandar_lote
        sql.append(" left join (");
        sql.append(strSQLConsultarIndicador);
        sql.append(" ) tbl_estandar_construccion on tbl_estandar_construccion.id_tnt = aux.id_tnt and tbl_estandar_construccion.periodo = aux.periodo");
        sql.append(String.format(" and tbl_estandar_construccion.cod_indicador = '%s'", ParamIndicador.IND_ESTANDAR_CONSTRUCCION));
        sql.append(" and tbl_estandar_construccion.nivel_agrupamiento = ?nivel_agrupamiento");
        sql.append(" and tbl_estandar_construccion.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
// WHERE
        sql.append(" where aux.id_tnt = ?id_tnt and aux.periodo = ?periodo");
        if (filtro.isAgrupamientoPredio()) {
            sql.append(" and n.principal_establecimiento = 1");
        }
        if (filtro.getIdNivel0() != null) {
            sql.append(" and n.id_nivel0 = ?id_nivel0");
        }
        if (filtro.getIdNivel1() != null) {
            sql.append(" and n.id_nivel1 = ?id_nivel1");
        }
        if (filtro.getIdNivel2() != null) {
            sql.append(" and n.id_nivel2 = ?id_nivel2");
        }
        if (filtro.getIdNivel3() != null) {
            sql.append(" and n.id_nivel3 = ?id_nivel3");
        }
        if (filtro.getIdNivel4() != null) {
            sql.append(" and n.id_nivel4 = ?id_nivel4");
        }
        if (filtro.getIdNivel5() != null) {
            sql.append(" and n.id_nivel5 = ?id_nivel5");
        }
        if (filtro.getIdEstablecimiento() != null) {
            sql.append(" and n.id_establecimiento = ?id_establecimiento");
        }
        if (filtro.getIdSede() != null) {
            sql.append(" and n.id_sede = ?id_sede");
        }
        if (filtro.getIdPredio() != null) {
            sql.append(" and n.id_predio = ?id_predio");
        }

        // area predio
        if (Cumplimiento.SI.equals(filtro.getCumplimientoAreaPredio())) {
            sql.append(" and (coalesce(char_to_double(predio3.valor),0)/100) >= 1");
        } else if (Cumplimiento.NO.equals(filtro.getCumplimientoAreaPredio())) {
            sql.append(" and (coalesce(char_to_double(predio3.valor),0)/100) < 1");
        }
        // construccion
        if (Cumplimiento.SI.equals(filtro.getCumplimientoAreaConstruccion())) {
            sql.append(" and (coalesce(char_to_double(construccion3.valor),0)/100) >= 1");
        } else if (Cumplimiento.NO.equals(filtro.getCumplimientoAreaConstruccion())) {
            sql.append(" and (coalesce(char_to_double(construccion3.valor),0)/100) < 1");
        }
        // ambiente_aula
        if (Cumplimiento.SI.equals(filtro.getCumplimientoAreaAmbienteAula())) {
            sql.append(" and (coalesce(char_to_double(ambiente_aula4.valor),0)/100) >= 1");
        } else if (Cumplimiento.NO.equals(filtro.getCumplimientoAreaAmbienteAula())) {
            sql.append(" and (coalesce(char_to_double(ambiente_aula4.valor),0)/100) < 1");
        }
        // ORDER BY
        sql.append(" order by ").append(ordenar.toString());

        Query query = tpm.getEm().createNativeQuery(sql.toString());
        query.setParameter("id_tnt", tpm.getCurrentTenant());
        query.setParameter("periodo", filtro.getPeriodo());
        query.setParameter("idioma", filtro.getIdioma());
        query.setParameter("id_nivel0", filtro.getIdNivel0());
        query.setParameter("nivel_agrupamiento", filtro.getAgrupamiento());
        if (filtro.getIdNivel1() != null) {
            query.setParameter("id_nivel1", filtro.getIdNivel1());
        }
        if (filtro.getIdNivel2() != null) {
            query.setParameter("id_nivel2", filtro.getIdNivel2());
        }
        if (filtro.getIdNivel3() != null) {
            query.setParameter("id_nivel3", filtro.getIdNivel3());
        }
        if (filtro.getIdNivel4() != null) {
            query.setParameter("id_nivel4", filtro.getIdNivel4());
        }
        if (filtro.getIdNivel5() != null) {
            query.setParameter("id_nivel5", filtro.getIdNivel5());
        }
        if (filtro.getIdEstablecimiento() != null) {
            query.setParameter("id_establecimiento", filtro.getIdEstablecimiento());
        }
        if (filtro.getIdSede() != null) {
            query.setParameter("id_sede", filtro.getIdSede());
        }
        if (filtro.getIdPredio() != null) {
            query.setParameter("id_predio", filtro.getIdPredio());
        }
        return query.getResultList();
    }

    @Override
    public List<Object[]> consultarPropiedad(FiltroAmbitoPropiedad filtro) {
        if (filtro.isConsultaDeTiempoReal()) {
            if (ParamBaseDatos.POSTGRE.equals(UtilProperties.getDbMotor())) {
                return this.consultarPropiedadTiempoRealPostgree(filtro);
            } else {
                return this.consultarPropiedadTiempoRealOracle(filtro);
            }
        } else {
            return this.consultarPropiedadIndicadores(filtro);
        }
    }

    private List<Object[]> consultarPropiedadTiempoRealPostgree(FiltroAmbitoPropiedad filtro) {
        String codInstrumento = this.consultarCodInstrumentoPorPeriodo(filtro.getPeriodo());
        StringBuilder sql = new StringBuilder();
        StringBuilder orden = new StringBuilder();
//SELECT
        sql.append(" select distinct ");
        if (filtro.isAgrupamientoPredio()) {
            orden.append(" n.codigo_nivel1,n.nombre_nivel1");
            orden.append(",n.codigo_nivel2,n.nombre_nivel2");
            orden.append(",n.codigo_nivel3,n.nombre_nivel3");
            orden.append(",n.codigo_nivel4,n.nombre_nivel4");
            orden.append(",n.codigo_nivel5,n.nombre_nivel5");
            orden.append(" ,n.codigo_establecimiento, n.nombre_establecimiento");
            orden.append(" ,n.codigo_sede, n.nombre_sede");
            orden.append(" ,n.codigo_predio, n.nombre_predio");
            //otros
            orden.append(" ,n.direccion_predio, n.nombre_zona");
            orden.append(" ,n.nombre_sector, n.nombre_clima");
            //etnias
            orden.append(" ,etnias.etnias");
            sql.append(orden.toString());
            //indicadores            
            //propiedad
            sql.append(" ,propiedad1.propiedad_predio");
            sql.append(" ,coalesce(propiedad1.tipo_propietario_predio::text,'sql.ind.general.noAplica')");
            sql.append(" ,propiedad1.propiedad_verificable_predio");
            sql.append(" ,propiedad1.nombre_propietario_predio");
            sql.append(" ,propiedad1.arrendado_predio");
            sql.append(" ,propiedad1.costo_arriendo_predio");
            //servicios            
            sql.append(" ,servicios.disponibilidad_agua");
            sql.append(" ,servicios.condicion_agua");
            sql.append(" ,servicios.disponibilidad_energia_electrica");
            sql.append(" ,servicios.condicion_energia_electrica");
            sql.append(" ,servicios.disponibilidad_red_alcantarillado");
            sql.append(" ,servicios.condicion_red_alcantarillado");
            //estudiantes
            sql.append(" ,coalesce(total_est.total_estudiantes,0)");

        } else {
            if (filtro.isAgrupamientoNivel0()) {
                orden.append(" n.nombre_nivel0");
            }
            if (filtro.isAgrupamientoNivel1()) {
                orden.append(" n.codigo_nivel1,n.nombre_nivel1");
            }
            if (filtro.isAgrupamientoNivel2()) {
                orden.append("n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
            }
            if (filtro.isAgrupamientoNivel3()) {
                orden.append("n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
            }
            if (filtro.isAgrupamientoNivel4()) {
                orden.append("n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
                orden.append(",n.codigo_nivel4,n.nombre_nivel4");
            }
            if (filtro.isAgrupamientoNivel5()) {
                orden.append("n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
                orden.append(",n.codigo_nivel4,n.nombre_nivel4");
                orden.append(",n.codigo_nivel5,n.nombre_nivel5");
            }
            if (filtro.isAgrupamientoEstablecimiento()) {
                orden.append(" n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
                orden.append(",n.codigo_nivel4,n.nombre_nivel4");
                orden.append(",n.codigo_nivel5,n.nombre_nivel5");
                orden.append(", n.codigo_establecimiento, n.nombre_establecimiento");
            }
            if (filtro.isAgrupamientoSede()) {
                orden.append(" n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
                orden.append(",n.codigo_nivel4,n.nombre_nivel4");
                orden.append(",n.codigo_nivel5,n.nombre_nivel5");
                orden.append(", n.codigo_establecimiento, n.nombre_establecimiento");
                orden.append(", n.codigo_sede, n.nombre_sede");
            }
            // datos informativos
            sql.append(orden.toString());
            // indicadores
            //propiedad
            sql.append(" ,sum(propiedad2.total_predio_problema_legalizacion) total_predio_problema_legalizacion");
            sql.append(" ,sum(propiedad2.total_predio) total_predio");
            sql.append(" ,(sum(propiedad2.total_predio_problema_legalizacion)/sum(propiedad2.total_predio) * 100) proporcion_predio");
            sql.append(" ,sum(propiedad2.total_estudiantes_predio_problema_legalizacion) total_estudiantes_predio_problema_legalizacion");
            sql.append(" ,sum(propiedad2.total_estudiantes_predio) total_estudiantes_predio");
            sql.append(" ,(sum(propiedad2.total_estudiantes_predio_problema_legalizacion)/sum(propiedad2.total_estudiantes_predio) * 100) proporcion_estudiantes");
        }
// FROM 
        sql.append(" from cier.ind_auxiliar_indicador aux");
        sql.append(" inner join cier.ind_auxiliar_consultas n on n.id_predio = aux.id_predio and n.periodo = aux.periodo and n.id_tnt = aux.id_tnt");

        if (filtro.isAgrupamientoPredio()) {
            //etnias
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ETNIAS_PREDIO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) as etnias on etnias.id_dig_instrumento = aux.id_dig_instrumento and etnias.id_predio = aux.id_predio");
            //servicios
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_SERVICIO_DISPONIBILIDAD_AGUA, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) as servicios on servicios.id_dig_instrumento = aux.id_dig_instrumento and servicios.id_predio = aux.id_predio");
            //propiedad
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_PROPIEDAD_PREDIO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) as propiedad1 on propiedad1.id_dig_instrumento = aux.id_dig_instrumento and propiedad1.id_predio = aux.id_predio");
            //estudiantes
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_TOTAL_ESTUDIANTES, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) as total_est on total_est.id_dig_instrumento = aux.id_dig_instrumento and total_est.id_predio = aux.id_predio");
        } else {
            //propiedad
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_PROPIEDAD_TOTAL_PREDIO_PROBLEMA_LEGALIZACION, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) as propiedad2 on propiedad2.id_dig_instrumento = aux.id_dig_instrumento and propiedad2.id_predio = aux.id_predio");
        }

// WHERE
        sql.append(" where aux.id_tnt = ?id_tnt and aux.periodo = ?periodo");
        if (filtro.isAgrupamientoPredio()) {
            sql.append(" and n.principal_establecimiento = 1");
        }
        if (filtro.getIdNivel0() != null) {
            sql.append(" and n.id_nivel0 = ?id_nivel0");
        }
        if (filtro.getIdNivel1() != null) {
            sql.append(" and n.id_nivel1 = ?id_nivel1");
        }
        if (filtro.getIdNivel2() != null) {
            sql.append(" and n.id_nivel2 = ?id_nivel2");
        }
        if (filtro.getIdNivel3() != null) {
            sql.append(" and n.id_nivel3 = ?id_nivel3");
        }
        if (filtro.getIdNivel4() != null) {
            sql.append(" and n.id_nivel4 = ?id_nivel4");
        }
        if (filtro.getIdNivel5() != null) {
            sql.append(" and n.id_nivel5 = ?id_nivel5");
        }
        if (filtro.getIdEstablecimiento() != null) {
            sql.append(" and n.id_establecimiento = ?id_establecimiento");
        }
        if (filtro.getIdSede() != null) {
            sql.append(" and n.id_sede = ?id_sede");
        }
        if (filtro.getIdPredio() != null) {
            sql.append(" and n.id_predio = ?id_predio");
        }
        // otros filtros
        if (filtro.getCodZona() != null) {
            sql.append(" and n.codigo_zona = ?cod_zona");
        }
        if (filtro.getCodSector() != null) {
            sql.append(" and n.codigo_sector = ?cod_sector");
        }
        if (filtro.isAgrupamientoPredio() && filtro.getPropiedadVerificable() != null) {
            sql.append(" and propiedad1.propiedad_verificable_predio = ?propiedad_verificable_predio");
        }
        if (filtro.getCodPropietario() != null) {
            sql.append(" and propiedad1.cod_propietario in (");
            sql.append(filtro.getCodPropietario()).append(")");
        }
        // GROUP BY 
        if (!filtro.isAgrupamientoPredio()) {
            sql.append(" GROUP by ");
            sql.append(orden.toString());
        }
        // ORDER BY 
        sql.append(" ORDER by ");
        sql.append(orden.toString());

        String auxSql = sql.toString();
        auxSql = auxSql.replaceAll("\\?start", "");
        auxSql = auxSql.replaceAll("\\?end", "");

        Query query = tpm.getEm().createNativeQuery(auxSql);
        query.setParameter("id_tnt", tpm.getCurrentTenant());
        query.setParameter("periodo", filtro.getPeriodo());
        query.setParameter("idioma", filtro.getIdioma());
        query.setParameter("id_nivel0", filtro.getIdNivel0());
        if (filtro.getIdNivel1() != null) {
            query.setParameter("id_nivel1", filtro.getIdNivel1());
        }
        if (filtro.getIdNivel2() != null) {
            query.setParameter("id_nivel2", filtro.getIdNivel2());
        }
        if (filtro.getIdNivel3() != null) {
            query.setParameter("id_nivel3", filtro.getIdNivel3());
        }
        if (filtro.getIdNivel4() != null) {
            query.setParameter("id_nivel4", filtro.getIdNivel4());
        }
        if (filtro.getIdNivel5() != null) {
            query.setParameter("id_nivel5", filtro.getIdNivel5());
        }
        if (filtro.getIdEstablecimiento() != null) {
            query.setParameter("id_establecimiento", filtro.getIdEstablecimiento());
        }
        if (filtro.getIdSede() != null) {
            query.setParameter("id_sede", filtro.getIdSede());
        }
        if (filtro.getIdPredio() != null) {
            query.setParameter("id_predio", filtro.getIdPredio());
        }
        // otros filtros
        if (filtro.getCodZona() != null) {
            query.setParameter("cod_zona", filtro.getCodZona());
        }
        if (filtro.getCodSector() != null) {
            query.setParameter("cod_sector", filtro.getCodSector());
        }
        if (filtro.isAgrupamientoPredio() && filtro.getPropiedadVerificable() != null) {
            query.setParameter("propiedad_verificable_predio", filtro.getPropiedadVerificable());
        }
        return query.getResultList();
    }

    private List<Object[]> consultarPropiedadTiempoRealOracle(FiltroAmbitoPropiedad filtro) {
        String codInstrumento = this.consultarCodInstrumentoPorPeriodo(filtro.getPeriodo());
        StringBuilder sql = new StringBuilder();
        StringBuilder orden = new StringBuilder();
//SELECT
        sql.append(" select distinct ");
        if (filtro.isAgrupamientoPredio()) {
            orden.append(" n.codigo_nivel1,n.nombre_nivel1");
            orden.append(",n.codigo_nivel2,n.nombre_nivel2");
            orden.append(",n.codigo_nivel3,n.nombre_nivel3");
            orden.append(",n.codigo_nivel4,n.nombre_nivel4");
            orden.append(",n.codigo_nivel5,n.nombre_nivel5");
            orden.append(" ,n.codigo_establecimiento, n.nombre_establecimiento");
            orden.append(" ,n.codigo_sede, n.nombre_sede");
            orden.append(" ,n.codigo_predio, n.nombre_predio");
            //otros
            orden.append(" ,n.direccion_predio, n.nombre_zona");
            orden.append(" ,n.nombre_sector, n.nombre_clima");
            //etnias
            orden.append(" ,etnias.etnias");
            sql.append(orden.toString());
            //indicadores            
            //propiedad
            sql.append(" ,propiedad1.propiedad_predio");
            sql.append(" ,coalesce(to_char(propiedad1.tipo_propietario_predio),'sql.ind.general.noAplica')");
            sql.append(" ,propiedad1.propiedad_verificable_predio");
            sql.append(" ,propiedad1.nombre_propietario_predio");
            sql.append(" ,propiedad1.arrendado_predio");
            sql.append(" ,propiedad1.costo_arriendo_predio");
            //servicios            
            sql.append(" ,servicios.disponibilidad_agua");
            sql.append(" ,servicios.condicion_agua");
            sql.append(" ,servicios.disp_energia_electrica");
            sql.append(" ,servicios.cond_energia_electrica");
            sql.append(" ,servicios.disp_red_alcantarillado");
            sql.append(" ,servicios.cond_red_alcantarillado");
            //estudiantes
            sql.append(" ,coalesce(total_est.total_estudiantes,0)");

        } else {
            if (filtro.isAgrupamientoNivel0()) {
                orden.append(" n.nombre_nivel0");
            }
            if (filtro.isAgrupamientoNivel1()) {
                orden.append(" n.codigo_nivel1,n.nombre_nivel1");
            }
            if (filtro.isAgrupamientoNivel2()) {
                orden.append("n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
            }
            if (filtro.isAgrupamientoNivel3()) {
                orden.append("n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
            }
            if (filtro.isAgrupamientoNivel4()) {
                orden.append("n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
                orden.append(",n.codigo_nivel4,n.nombre_nivel4");
            }
            if (filtro.isAgrupamientoNivel5()) {
                orden.append("n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
                orden.append(",n.codigo_nivel4,n.nombre_nivel4");
                orden.append(",n.codigo_nivel5,n.nombre_nivel5");
            }
            if (filtro.isAgrupamientoEstablecimiento()) {
                orden.append(" n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
                orden.append(",n.codigo_nivel4,n.nombre_nivel4");
                orden.append(",n.codigo_nivel5,n.nombre_nivel5");
                orden.append(", n.codigo_establecimiento, n.nombre_establecimiento");
            }
            if (filtro.isAgrupamientoSede()) {
                orden.append(" n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
                orden.append(",n.codigo_nivel4,n.nombre_nivel4");
                orden.append(",n.codigo_nivel5,n.nombre_nivel5");
                orden.append(", n.codigo_establecimiento, n.nombre_establecimiento");
                orden.append(", n.codigo_sede, n.nombre_sede");
            }
            // datos informativos
            sql.append(orden.toString());
            // indicadores
            //propiedad
            sql.append(" ,sum(propiedad2.predios_problema_legalizacion) tot_pre_prob_legalizacion");
            sql.append(" ,sum(propiedad2.total_predio) total_predio");
            sql.append(" ,(sum(propiedad2.predios_problema_legalizacion)/sum(propiedad2.total_predio) * 100) proporcion_predio");
            sql.append(" ,sum(propiedad2.est_problema_legalizacion) tot_est_pre_problema_legal");
            sql.append(" ,sum(propiedad2.total_estudiantes_predio) total_estudiantes_predio");
            sql.append(" ,(sum(propiedad2.est_problema_legalizacion)/sum(propiedad2.total_estudiantes_predio) * 100) proporcion_estudiantes");
        }
// FROM 
        sql.append(" from ind_auxiliar_indicador aux");
        sql.append(" inner join ind_auxiliar_consultas n on n.id_predio = aux.id_predio and n.periodo = aux.periodo and n.id_tnt = aux.id_tnt");

        if (filtro.isAgrupamientoPredio()) {
            //etnias
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ETNIAS_PREDIO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) etnias on etnias.id_predio = aux.id_predio");
            //servicios
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_SERVICIO_DISPONIBILIDAD_AGUA, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) servicios on servicios.id_predio = aux.id_predio");
            //propiedad
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_PROPIEDAD_PREDIO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) propiedad1 on propiedad1.id_predio = aux.id_predio");
            //estudiantes
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_TOTAL_ESTUDIANTES, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) total_est on total_est.id_predio = aux.id_predio");
        } else {
            //propiedad
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_PROPIEDAD_TOTAL_PREDIO_PROBLEMA_LEGALIZACION, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) propiedad2 on propiedad2.id_predio = aux.id_predio");
        }

// WHERE
        sql.append(" where aux.id_tnt = ?id_tnt and aux.periodo = ?periodo");
        if (filtro.isAgrupamientoPredio()) {
            sql.append(" and n.principal_establecimiento = 1");
        }
        if (filtro.getIdNivel0() != null) {
            sql.append(" and n.id_nivel0 = ?id_nivel0");
        }
        if (filtro.getIdNivel1() != null) {
            sql.append(" and n.id_nivel1 = ?id_nivel1");
        }
        if (filtro.getIdNivel2() != null) {
            sql.append(" and n.id_nivel2 = ?id_nivel2");
        }
        if (filtro.getIdNivel3() != null) {
            sql.append(" and n.id_nivel3 = ?id_nivel3");
        }
        if (filtro.getIdNivel4() != null) {
            sql.append(" and n.id_nivel4 = ?id_nivel4");
        }
        if (filtro.getIdNivel5() != null) {
            sql.append(" and n.id_nivel5 = ?id_nivel5");
        }
        if (filtro.getIdEstablecimiento() != null) {
            sql.append(" and n.id_establecimiento = ?id_establecimiento");
        }
        if (filtro.getIdSede() != null) {
            sql.append(" and n.id_sede = ?id_sede");
        }
        if (filtro.getIdPredio() != null) {
            sql.append(" and n.id_predio = ?id_predio");
        }
        // otros filtros
        if (filtro.getCodZona() != null) {
            sql.append(" and n.codigo_zona = ?cod_zona");
        }
        if (filtro.getCodSector() != null) {
            sql.append(" and n.codigo_sector = ?cod_sector");
        }
        if (filtro.isAgrupamientoPredio() && filtro.getPropiedadVerificable() != null) {
            sql.append(" and propiedad1.propiedad_verificable_predio = ?propiedad_verificable_predio");
        }
        if (filtro.getCodPropietario() != null) {
            sql.append(" and propiedad1.cod_propietario in (");
            sql.append(filtro.getCodPropietario()).append(")");
        }
        // GROUP BY 
        if (!filtro.isAgrupamientoPredio()) {
            sql.append(" GROUP by ");
            sql.append(orden.toString());
        }
        // ORDER BY 
        sql.append(" ORDER by ");
        sql.append(orden.toString());


        Query query = tpm.getEm().createNativeQuery(sql.toString());
        query.setParameter("id_tnt", tpm.getCurrentTenant());
        query.setParameter("periodo", filtro.getPeriodo());
        query.setParameter("idioma", filtro.getIdioma());
        query.setParameter("id_nivel0", filtro.getIdNivel0());
        if (filtro.getIdNivel1() != null) {
            query.setParameter("id_nivel1", filtro.getIdNivel1());
        }
        if (filtro.getIdNivel2() != null) {
            query.setParameter("id_nivel2", filtro.getIdNivel2());
        }
        if (filtro.getIdNivel3() != null) {
            query.setParameter("id_nivel3", filtro.getIdNivel3());
        }
        if (filtro.getIdNivel4() != null) {
            query.setParameter("id_nivel4", filtro.getIdNivel4());
        }
        if (filtro.getIdNivel5() != null) {
            query.setParameter("id_nivel5", filtro.getIdNivel5());
        }
        if (filtro.getIdEstablecimiento() != null) {
            query.setParameter("id_establecimiento", filtro.getIdEstablecimiento());
        }
        if (filtro.getIdSede() != null) {
            query.setParameter("id_sede", filtro.getIdSede());
        }
        if (filtro.getIdPredio() != null) {
            query.setParameter("id_predio", filtro.getIdPredio());
        }
        // otros filtros
        if (filtro.getCodZona() != null) {
            query.setParameter("cod_zona", filtro.getCodZona());
        }
        if (filtro.getCodSector() != null) {
            query.setParameter("cod_sector", filtro.getCodSector());
        }
        if (filtro.isAgrupamientoPredio() && filtro.getPropiedadVerificable() != null) {
            query.setParameter("propiedad_verificable_predio", filtro.getPropiedadVerificable());
        }
        return query.getResultList();
    }

    private List<Object[]> consultarPropiedadIndicadores(FiltroAmbitoPropiedad filtro) {
        StringBuilder sql = new StringBuilder();
        sql.append(" select distinct ");
        if (filtro.isAgrupamientoPredio()) {
            sql.append(" n.codigo_nivel1,n.nombre_nivel1");
            sql.append(",n.codigo_nivel2,n.nombre_nivel2");
            sql.append(",n.codigo_nivel3,n.nombre_nivel3");
            sql.append(",n.codigo_nivel4,n.nombre_nivel4");
            sql.append(",n.codigo_nivel5,n.nombre_nivel5");
            sql.append(" ,n.codigo_establecimiento, n.nombre_establecimiento");
            sql.append(" ,n.codigo_sede, n.nombre_sede");
            sql.append(" ,n.codigo_predio, n.nombre_predio");
            //otros
            sql.append(" ,n.direccion_predio, n.nombre_zona");
            sql.append(" ,n.nombre_sector, n.nombre_clima");
            //etnias
            sql.append(" ,etnias.valor etnias");
            //propiedad
            //propiedad_predio
            sql.append(" ,propiedad_predio.valor propiedad_predio");
            //tipo_propietario_predio
            sql.append(" ,coalesce(tipo_propietario.valor,'sql.ind.general.noAplica') tipo_propietario_predio");
            //propiedad_verificable_predio
            sql.append(" ,verf_propiedad.valor propiedad_verificable_predio");
            //nombre_propietario_predio
            sql.append(" ,propietario_predio.valor nombre_propietario_predio");
            //arrendado_predio
            sql.append(" ,arren_predio.valor arrendado_predio");
            //costo_arriendo_predio
            sql.append(" ,cos_arren.valor costo_arriendo_predio");

            //servicios          
            //disponibilidad_agua
            sql.append(" ,agua_disp.valor disponibilidad_agua");
            //condicion_agua
            sql.append(" ,agua_cond.valor condicion_agua");
            //disp_energia_electrica
            sql.append(" ,energia_disp.valor disp_energia_electrica");
            //condicion_energia_electrica
            sql.append(" ,energia_cond.valor condicion_energia_electrica");
            //disp_red_alcantarillado
            sql.append(" ,alcantarillado_disp.valor disp_red_alcantarillado");
            //condicion_red_alcantarillado
            sql.append(" ,alcantarillado_cond.valor condicion_red_alcantarillado");
            //total_estudiantes
            sql.append(" ,coalesce(to_number(tot_estud.valor,'9999999999'),0) total_estudiantes");

        } else {
            if (filtro.isAgrupamientoNivel0()) {
                sql.append(" n.nombre_nivel0");
            }
            if (filtro.isAgrupamientoNivel1()) {
                sql.append(" n.codigo_nivel1,n.nombre_nivel1");
            }
            if (filtro.isAgrupamientoNivel2()) {
                sql.append("n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
            }
            if (filtro.isAgrupamientoNivel3()) {
                sql.append("n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
            }
            if (filtro.isAgrupamientoNivel4()) {
                sql.append("n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
                sql.append(",n.codigo_nivel4,n.nombre_nivel4");
            }
            if (filtro.isAgrupamientoNivel5()) {
                sql.append("n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
                sql.append(",n.codigo_nivel4,n.nombre_nivel4");
                sql.append(",n.codigo_nivel5,n.nombre_nivel5");
            }
            if (filtro.isAgrupamientoEstablecimiento()) {
                sql.append(" n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
                sql.append(",n.codigo_nivel4,n.nombre_nivel4");
                sql.append(",n.codigo_nivel5,n.nombre_nivel5");
                sql.append(", n.codigo_establecimiento, n.nombre_establecimiento");
            }
            if (filtro.isAgrupamientoSede()) {
                sql.append(" n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
                sql.append(",n.codigo_nivel4,n.nombre_nivel4");
                sql.append(",n.codigo_nivel5,n.nombre_nivel5");
                sql.append(", n.codigo_establecimiento, n.nombre_establecimiento");
                sql.append(", n.codigo_sede, n.nombre_sede");
            }
            //propiedad
            //total_predio_problema_legalizacion
            sql.append(" ,tot_pred_prob_leg.valor predios_problema_legalizacion");
            //total_predio
            sql.append(" ,tot_pred.valor total_predio");
            //proporcion_predio
            sql.append(" ,((to_number(tot_pred_prob_leg.valor,'9999999999') / to_number(tot_pred.valor,'9999999999')) *100) proporcion_predio");
            //total_estudiantes_predio_problema_legalizacion
            sql.append(" ,estud_prob_leg.valor estus_problema_legalizacion");
            //total_estudiantes_predio
            sql.append(" ,tot_estud.valor total_estudiantes_predio");
            //proporcion_estudiantes
            sql.append(" ,((to_number(estud_prob_leg.valor,'9999999999') / to_number(tot_estud.valor,'9999999999')) *100) proporcion_estudiantes");
        }
// FROM 
        sql.append(" from ind_auxiliar_indicador aux");
        sql.append(" inner join ind_auxiliar_consultas n on n.id_predio = aux.id_predio and n.periodo = aux.periodo and n.id_tnt = aux.id_tnt");

        String strSQLNivelAgrupamiento = this.getSQLNivelAgrupamiento(filtro);
        String strSQLConsultarIndicador = this.getSQLConsultarIndicadorAlmacenado();

        //total de estudiantes por predio  
        sql.append(" left join (");
        sql.append(strSQLConsultarIndicador);
        sql.append(" ) tot_estud on tot_estud.id_tnt = aux.id_tnt and tot_estud.periodo = aux.periodo");
        sql.append(String.format(" and tot_estud.cod_indicador = '%s'", ParamIndicador.IND_TOTAL_ESTUDIANTES));
        sql.append(" and tot_estud.nivel_agrupamiento = ?nivel_agrupamiento");
        sql.append(" and tot_estud.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

        if (filtro.isAgrupamientoPredio()) {
            //etnias del predio
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) etnias on etnias.id_tnt = aux.id_tnt and etnias.periodo = aux.periodo");
            sql.append(String.format(" and etnias.cod_indicador = '%s'", ParamIndicador.IND_ETNIAS_PREDIO));
            sql.append(" and etnias.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and etnias.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            //propiedad
            //propiedad_predio
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) propiedad_predio on propiedad_predio.id_tnt = aux.id_tnt and propiedad_predio.periodo = aux.periodo");
            sql.append(String.format(" and propiedad_predio.cod_indicador = '%s'", ParamIndicador.IND_PROPIEDAD_PREDIO));
            sql.append(" and propiedad_predio.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and propiedad_predio.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            //tipo_propietario_predio
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tipo_propietario on tipo_propietario.id_tnt = aux.id_tnt and tipo_propietario.periodo = aux.periodo");
            sql.append(String.format(" and tipo_propietario.cod_indicador = '%s'", ParamIndicador.IND_TIPO_PROPIETARIO_PREDIO));
            sql.append(" and tipo_propietario.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tipo_propietario.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            //propiedad_verificable_predio
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) verf_propiedad on verf_propiedad.id_tnt = aux.id_tnt and verf_propiedad.periodo = aux.periodo");
            sql.append(String.format(" and verf_propiedad.cod_indicador = '%s'", ParamIndicador.IND_PROPIEDAD_VERIFICABLE_PREDIO));
            sql.append(" and verf_propiedad.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and verf_propiedad.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            //nombre_propietario_predio
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) propietario_predio on propietario_predio.id_tnt = aux.id_tnt and propietario_predio.periodo = aux.periodo");
            sql.append(String.format(" and propietario_predio.cod_indicador = '%s'", ParamIndicador.IND_NOMBRE_PROPIETARIO_PREDIO));
            sql.append(" and propietario_predio.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and propietario_predio.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            //arrendado_predio
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) arren_predio on arren_predio.id_tnt = aux.id_tnt and arren_predio.periodo = aux.periodo");
            sql.append(String.format(" and arren_predio.cod_indicador = '%s'", ParamIndicador.IND_ARRENDADO_PREDIO));
            sql.append(" and arren_predio.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and arren_predio.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            //costo_arriendo_predio
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) cos_arren on cos_arren.id_tnt = aux.id_tnt and cos_arren.periodo = aux.periodo");
            sql.append(String.format(" and cos_arren.cod_indicador = '%s'", ParamIndicador.IND_COSTO_ARRIENDO_PREDIO));
            sql.append(" and cos_arren.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and cos_arren.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            //servicios          
            //disponibilidad_agua
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) agua_disp on agua_disp.id_tnt = aux.id_tnt and agua_disp.periodo = aux.periodo");
            sql.append(String.format(" and agua_disp.cod_indicador = '%s'", ParamIndicador.IND_SERVICIO_DISPONIBILIDAD_AGUA));
            sql.append(" and agua_disp.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and agua_disp.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            //condicion_agua            
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) agua_cond on agua_cond.id_tnt = aux.id_tnt and agua_cond.periodo = aux.periodo");
            sql.append(String.format(" and agua_cond.cod_indicador = '%s'", ParamIndicador.IND_SERVICIO_CONDICION_AGUA));
            sql.append(" and agua_cond.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and agua_cond.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            //disp_energia_electrica            
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) energia_disp on energia_disp.id_tnt = aux.id_tnt and energia_disp.periodo = aux.periodo");
            sql.append(String.format(" and energia_disp.cod_indicador = '%s'", ParamIndicador.IND_SERVICIO_DISPONIBILIDAD_ENERGIA_ELECTRICA));
            sql.append(" and energia_disp.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and energia_disp.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            //condicion_energia_electrica            
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) energia_cond on energia_cond.id_tnt = aux.id_tnt and energia_cond.periodo = aux.periodo");
            sql.append(String.format(" and energia_cond.cod_indicador = '%s'", ParamIndicador.IND_SERVICIO_CONDICION_ENERGIA_ELECTRICA));
            sql.append(" and energia_cond.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and energia_cond.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            //disp_red_alcantarillado            
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) alcantarillado_disp on alcantarillado_disp.id_tnt = aux.id_tnt and alcantarillado_disp.periodo = aux.periodo");
            sql.append(String.format(" and alcantarillado_disp.cod_indicador = '%s'", ParamIndicador.IND_SERVICIO_DISPONIBILIDAD_RED_ALCANTARILLADO));
            sql.append(" and alcantarillado_disp.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and alcantarillado_disp.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            //condicion_red_alcantarillado            
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) alcantarillado_cond on alcantarillado_cond.id_tnt = aux.id_tnt and alcantarillado_cond.periodo = aux.periodo");
            sql.append(String.format(" and alcantarillado_cond.cod_indicador = '%s'", ParamIndicador.IND_SERVICIO_CONDICION_RED_ALCANTARILLADO));
            sql.append(" and alcantarillado_cond.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and alcantarillado_cond.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
        } else {
            //total_predio_problema_legalizacion
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tot_pred_prob_leg on tot_pred_prob_leg.id_tnt = aux.id_tnt and tot_pred_prob_leg.periodo = aux.periodo");
            sql.append(String.format(" and tot_pred_prob_leg.cod_indicador = '%s'", ParamIndicador.IND_PROPIEDAD_TOTAL_PREDIO_PROBLEMA_LEGALIZACION));
            sql.append(" and tot_pred_prob_leg.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tot_pred_prob_leg.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            //total_predio
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tot_pred on tot_pred.id_tnt = aux.id_tnt and tot_pred.periodo = aux.periodo");
            sql.append(String.format(" and tot_pred.cod_indicador = '%s'", ParamIndicador.IND_TOTAL_PREDIOS));
            sql.append(" and tot_pred.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tot_pred.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            //total_estudiantes_predio_problema_legalizacion
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) estud_prob_leg on estud_prob_leg.id_tnt = aux.id_tnt and estud_prob_leg.periodo = aux.periodo");
            sql.append(String.format(" and estud_prob_leg.cod_indicador = '%s'", ParamIndicador.IND_PROPIEDAD_TOTAL_ESTUDIANTES_PREDIO_PROBLEMA_LEGALIZACION));
            sql.append(" and estud_prob_leg.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and estud_prob_leg.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
        }

// WHERE
        sql.append(" where aux.id_tnt = ?id_tnt and aux.periodo = ?periodo");
        if (filtro.isAgrupamientoPredio()) {
            sql.append(" and n.principal_establecimiento = 1");
        }
        if (filtro.getIdNivel0() != null) {
            sql.append(" and n.id_nivel0 = ?id_nivel0");
        }
        if (filtro.getIdNivel1() != null) {
            sql.append(" and n.id_nivel1 = ?id_nivel1");
        }
        if (filtro.getIdNivel2() != null) {
            sql.append(" and n.id_nivel2 = ?id_nivel2");
        }
        if (filtro.getIdNivel3() != null) {
            sql.append(" and n.id_nivel3 = ?id_nivel3");
        }
        if (filtro.getIdNivel4() != null) {
            sql.append(" and n.id_nivel4 = ?id_nivel4");
        }
        if (filtro.getIdNivel5() != null) {
            sql.append(" and n.id_nivel5 = ?id_nivel5");
        }
        if (filtro.getIdEstablecimiento() != null) {
            sql.append(" and n.id_establecimiento = ?id_establecimiento");
        }
        if (filtro.getIdSede() != null) {
            sql.append(" and n.id_sede = ?id_sede");
        }
        if (filtro.getIdPredio() != null) {
            sql.append(" and n.id_predio = ?id_predio");
        }

        Query query = tpm.getEm().createNativeQuery(sql.toString());
        query.setParameter("id_tnt", tpm.getCurrentTenant());
        query.setParameter("periodo", filtro.getPeriodo());
        query.setParameter("idioma", filtro.getIdioma());
        query.setParameter("id_nivel0", filtro.getIdNivel0());
        query.setParameter("nivel_agrupamiento", filtro.getAgrupamiento());
        if (filtro.getIdNivel1() != null) {
            query.setParameter("id_nivel1", filtro.getIdNivel1());
        }
        if (filtro.getIdNivel2() != null) {
            query.setParameter("id_nivel2", filtro.getIdNivel2());
        }
        if (filtro.getIdNivel3() != null) {
            query.setParameter("id_nivel3", filtro.getIdNivel3());
        }
        if (filtro.getIdNivel4() != null) {
            query.setParameter("id_nivel4", filtro.getIdNivel4());
        }
        if (filtro.getIdNivel5() != null) {
            query.setParameter("id_nivel5", filtro.getIdNivel5());
        }
        if (filtro.getIdEstablecimiento() != null) {
            query.setParameter("id_establecimiento", filtro.getIdEstablecimiento());
        }
        if (filtro.getIdSede() != null) {
            query.setParameter("id_sede", filtro.getIdSede());
        }
        if (filtro.getIdPredio() != null) {
            query.setParameter("id_predio", filtro.getIdPredio());
        }
        return query.getResultList();
    }

    @Override
    public List<Object[]> consultarServicio(FiltroAmbitoServicio filtro) {
        if (filtro.isConsultaDeTiempoReal()) {
            if (ParamBaseDatos.POSTGRE.equals(UtilProperties.getDbMotor())) {
                return this.consultarServicioTiempoRealPostgre(filtro);
            } else {
                return this.consultarServicioTiempoRealOracle(filtro);
            }
        } else {
            return this.consultarServicioIndicadores(filtro);
        }
    }

    private List<Object[]> consultarServicioTiempoRealPostgre(FiltroAmbitoServicio filtro) {
        String codInstrumento = this.consultarCodInstrumentoPorPeriodo(filtro.getPeriodo());
        StringBuilder sql = new StringBuilder();
        StringBuilder orden = new StringBuilder();
//SELECT
        sql.append(" select distinct ");
        if (filtro.isAgrupamientoPredio()) {
            orden.append(" n.codigo_nivel1,n.nombre_nivel1");
            orden.append(",n.codigo_nivel2,n.nombre_nivel2");
            orden.append(",n.codigo_nivel3,n.nombre_nivel3");
            orden.append(",n.codigo_nivel4,n.nombre_nivel4");
            orden.append(",n.codigo_nivel5,n.nombre_nivel5");
            orden.append(" ,n.codigo_establecimiento, n.nombre_establecimiento");
            orden.append(" ,n.codigo_sede, n.nombre_sede");
            orden.append(" ,n.codigo_predio, n.nombre_predio");
            //otros
            orden.append(" ,n.direccion_predio, n.propiedad_predio");
            orden.append(" ,n.nombre_zona, n.nombre_sector, n.nombre_clima");
            //etnias
            orden.append(" ,etnias.etnias");
            sql.append(orden.toString());
            //indicadores 
            sql.append(String.format(" , '%s' nombre_servicio", filtro.getNombreServicio()));
            sql.append(" ,servicio.disponibilidad_").append(filtro.getColumnaServicio());
            if (filtro.isRequiereTipoServicio()) {
                sql.append(String.format(" ,servicio.nombre_tipo_%s1", filtro.getNombreServicio()));
                sql.append(String.format(" ,servicio.nombre_tipo_%s2", filtro.getNombreServicio()));
            }
            sql.append(" ,servicio.condicion_").append(filtro.getColumnaServicio());
            //total de estudiantes por predio              
            sql.append(" ,coalesce(total_estud.total_estudiantes,0) total_estudiantes");
        } else {
            if (filtro.isAgrupamientoNivel0()) {
                orden.append(" n.nombre_nivel0");
            }
            if (filtro.isAgrupamientoNivel1()) {
                orden.append(" n.codigo_nivel1,n.nombre_nivel1");
            }
            if (filtro.isAgrupamientoNivel2()) {
                orden.append("n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
            }
            if (filtro.isAgrupamientoNivel3()) {
                orden.append("n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
            }
            if (filtro.isAgrupamientoNivel4()) {
                orden.append("n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
                orden.append(",n.codigo_nivel4,n.nombre_nivel4");
            }
            if (filtro.isAgrupamientoNivel5()) {
                orden.append("n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
                orden.append(",n.codigo_nivel4,n.nombre_nivel4");
                orden.append(",n.codigo_nivel5,n.nombre_nivel5");
            }
            if (filtro.isAgrupamientoEstablecimiento()) {
                orden.append(" n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
                orden.append(",n.codigo_nivel4,n.nombre_nivel4");
                orden.append(",n.codigo_nivel5,n.nombre_nivel5");
                orden.append(", n.codigo_establecimiento, n.nombre_establecimiento");
            }
            if (filtro.isAgrupamientoSede()) {
                orden.append(" n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
                orden.append(",n.codigo_nivel4,n.nombre_nivel4");
                orden.append(",n.codigo_nivel5,n.nombre_nivel5");
                orden.append(", n.codigo_establecimiento, n.nombre_establecimiento");
                orden.append(", n.codigo_sede, n.nombre_sede");
            }
            // datos informativos
            sql.append(orden.toString());
            sql.append(String.format(" , '%s' nombre_servicio", filtro.getNombreServicio()));
            sql.append(String.format(" ,coalesce(num_pred_disp.num_predios_disponibilidad_%s,0) num_predios_disponibilidad", filtro.getColumnaServicio()));
            sql.append(String.format(" ,coalesce(num_pred_cond.num_predios_condicion_%s,0) num_predios_condicion", filtro.getColumnaServicio()));

            if (filtro.getAnalisisServicio() != null) {
                sql.append(String.format(" ,coalesce(analisis.num_predios_%s_%s,0) analisis_servicio", filtro.isAnalisisSuficiencia() ? "suficientes" : "insuficientes", filtro.getColumnaServicio()));
            }
            sql.append(" ,coalesce(num_predio.total,0) numero_predios");
            sql.append(" ,coalesce(total_estud.total_estudiantes,0) total_estudiantes");
        }
// FROM 
        sql.append(" from cier.ind_auxiliar_indicador aux");
        sql.append(" inner join cier.ind_auxiliar_consultas n on n.id_predio = aux.id_predio and n.periodo = aux.periodo and n.id_tnt = aux.id_tnt");
        if (filtro.isAgrupamientoPredio()) {
            //etnias
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ETNIAS_PREDIO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) as etnias on etnias.id_dig_instrumento = aux.id_dig_instrumento and etnias.id_predio = aux.id_predio");
            //tipo de servicio
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(filtro.getIndicadorDisponibilidadServicio(), ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) as servicio on servicio.id_dig_instrumento = aux.id_dig_instrumento and servicio.id_predio = aux.id_predio");
            // total estudiantes 
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_TOTAL_ESTUDIANTES, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) as total_estud on total_estud.id_dig_instrumento = aux.id_dig_instrumento and total_estud.id_predio = aux.id_predio");

        } else {
            String strSQLNivelAgrupamiento = this.getSQLNivelAgrupamiento(filtro);
            // numero de predios por disponiblidad
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(filtro.getIndicadorNumPrediosDisponibilidadServicio(), filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
            sql.append(String.format(" ) as num_pred_disp on num_pred_disp.%1$s = n.%1$s", strSQLNivelAgrupamiento));
            sql.append(" and num_pred_disp.periodo = aux.periodo and num_pred_disp.id_tnt = aux.id_tnt");
            // numero de predios por condicion
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(filtro.getIndicadorNumPrediosCondicionServicio(), filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
            sql.append(String.format(" ) as num_pred_cond on num_pred_cond.%1$s = n.%1$s", strSQLNivelAgrupamiento));
            sql.append(" and num_pred_cond.periodo = aux.periodo and num_pred_cond.id_tnt = aux.id_tnt");
            // total predios
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_TOTAL_PREDIOS, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
            sql.append(String.format(" ) as num_predio on num_predio.%1$s = n.%1$s", strSQLNivelAgrupamiento));
            sql.append(" and num_predio.periodo = aux.periodo and num_predio.id_tnt = aux.id_tnt");
            // total estudiantes 
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_TOTAL_ESTUDIANTES, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
            sql.append(String.format(" ) as total_estud on total_estud.%1$s = n.%1$s", strSQLNivelAgrupamiento));
            sql.append(" and total_estud.periodo = aux.periodo and total_estud.id_tnt = aux.id_tnt");
            if (filtro.getAnalisisServicio() != null) {
                // numero de predios analisis
                sql.append(" left join (");
                sql.append(this.consultarFormulaSQLIndicador(filtro.getIndicadorNumPrediosAnalisisServicio(), filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
                sql.append(String.format(" ) as analisis on analisis.%1$s = n.%1$s", strSQLNivelAgrupamiento));
                sql.append(" and analisis.periodo = aux.periodo and analisis.id_tnt = aux.id_tnt");
            }
        }

// WHERE
        sql.append(" where aux.id_tnt = ?id_tnt and aux.periodo = ?periodo");
        if (filtro.isAgrupamientoPredio()) {
            sql.append(" and n.principal_establecimiento = 1");
            if (filtro.getTieneServicio() != null) {
                sql.append(" and servicio.disponibilidad_").append(filtro.getColumnaServicio());
                sql.append(" = ?disp_servicio");
            }
        }
        if (filtro.getIdNivel0() != null) {
            sql.append(" and n.id_nivel0 = ?id_nivel0");
        }
        if (filtro.getIdNivel1() != null) {
            sql.append(" and n.id_nivel1 = ?id_nivel1");
        }
        if (filtro.getIdNivel2() != null) {
            sql.append(" and n.id_nivel2 = ?id_nivel2");
        }
        if (filtro.getIdNivel3() != null) {
            sql.append(" and n.id_nivel3 = ?id_nivel3");
        }
        if (filtro.getIdNivel4() != null) {
            sql.append(" and n.id_nivel4 = ?id_nivel4");
        }
        if (filtro.getIdNivel5() != null) {
            sql.append(" and n.id_nivel5 = ?id_nivel5");
        }
        if (filtro.getIdEstablecimiento() != null) {
            sql.append(" and n.id_establecimiento = ?id_establecimiento");
        }
        if (filtro.getIdSede() != null) {
            sql.append(" and n.id_sede = ?id_sede");
        }
        if (filtro.getIdPredio() != null) {
            sql.append(" and n.id_predio = ?id_predio");
        }
        // otros filtros
        if (filtro.getCodZona() != null) {
            sql.append(" and n.codigo_zona = ?cod_zona");
        }
        if (filtro.getCodSector() != null) {
            sql.append(" and n.codigo_sector = ?cod_sector");
        }
        if (filtro.getCondicionServicio() != null) {
            if (filtro.isAgrupamientoPredio()) {
                sql.append(" and servicio.condicion_").append(filtro.getColumnaServicio());
            } else {
                sql.append(" and num_pred_cond.condicion_").append(filtro.getColumnaServicio());
            }
            sql.append(" = ?cond_servicio");
        }
        if (filtro.getCodigoTipoServicio() != null && filtro.isAgrupamientoPredio()) {
            sql.append(String.format(" and (servicio.codigo_tipo_%s1 = ?cod_tipo_servicio", filtro.getColumnaServicio()));
            sql.append(String.format(" or servicio.codigo_tipo_%s2 = ?cod_tipo_servicio)", filtro.getColumnaServicio()));
        }
        // ORDER BY 
        sql.append(" ORDER by ");
        sql.append(orden.toString());

        String auxSql = sql.toString();
        auxSql = auxSql.replaceAll("\\?start", "");
        auxSql = auxSql.replaceAll("\\?end", "");

        Query query = tpm.getEm().createNativeQuery(auxSql);
        query.setParameter("id_tnt", tpm.getCurrentTenant());
        query.setParameter("periodo", filtro.getPeriodo());
        query.setParameter("idioma", filtro.getIdioma());
        query.setParameter("id_nivel0", filtro.getIdNivel0());
        if (filtro.getIdNivel1() != null) {
            query.setParameter("id_nivel1", filtro.getIdNivel1());
        }
        if (filtro.getIdNivel2() != null) {
            query.setParameter("id_nivel2", filtro.getIdNivel2());
        }
        if (filtro.getIdNivel3() != null) {
            query.setParameter("id_nivel3", filtro.getIdNivel3());
        }
        if (filtro.getIdNivel4() != null) {
            query.setParameter("id_nivel4", filtro.getIdNivel4());
        }
        if (filtro.getIdNivel5() != null) {
            query.setParameter("id_nivel5", filtro.getIdNivel5());
        }
        if (filtro.getIdEstablecimiento() != null) {
            query.setParameter("id_establecimiento", filtro.getIdEstablecimiento());
        }
        if (filtro.getIdSede() != null) {
            query.setParameter("id_sede", filtro.getIdSede());
        }
        if (filtro.getIdPredio() != null) {
            query.setParameter("id_predio", filtro.getIdPredio());
        }
        // otros filtros
        if (filtro.getCodZona() != null) {
            query.setParameter("cod_zona", filtro.getCodZona());
        }
        if (filtro.getCodSector() != null) {
            query.setParameter("cod_sector", filtro.getCodSector());
        }
        if (filtro.getTieneServicio() != null) {
            if (filtro.isAgrupamientoPredio()) {
                query.setParameter("disp_servicio", filtro.getTieneServicio());
            } else {
                String disp_servicio = filtro.getTieneServicio().equalsIgnoreCase("si") ? "1" : "0";
                query.setParameter("disp_servicio", disp_servicio);
            }
        }
        if (filtro.getCondicionServicio() != null) {
            query.setParameter("cond_servicio", filtro.getCondicionServicio().toString());
        }
        if (filtro.getCodigoTipoServicio() != null) {
            query.setParameter("cod_tipo_servicio", filtro.getCodigoTipoServicio());
        }
        return query.getResultList();
    }

    private List<Object[]> consultarServicioTiempoRealOracle(FiltroAmbitoServicio filtro) {
        String codInstrumento = this.consultarCodInstrumentoPorPeriodo(filtro.getPeriodo());
        StringBuilder sql = new StringBuilder();
        StringBuilder orden = new StringBuilder();
//SELECT
        sql.append(" select distinct ");
        if (filtro.isAgrupamientoPredio()) {
            orden.append(" n.codigo_nivel1,n.nombre_nivel1");
            orden.append(",n.codigo_nivel2,n.nombre_nivel2");
            orden.append(",n.codigo_nivel3,n.nombre_nivel3");
            orden.append(",n.codigo_nivel4,n.nombre_nivel4");
            orden.append(",n.codigo_nivel5,n.nombre_nivel5");
            orden.append(" ,n.codigo_establecimiento, n.nombre_establecimiento");
            orden.append(" ,n.codigo_sede, n.nombre_sede");
            orden.append(" ,n.codigo_predio, n.nombre_predio");
            //otros
            orden.append(" ,n.direccion_predio, n.propiedad_predio");
            orden.append(" ,n.nombre_zona, n.nombre_sector, n.nombre_clima");
            //etnias
            orden.append(" ,etnias.etnias");
            sql.append(orden.toString());
            //indicadores 
            sql.append(String.format(" , '%s' nombre_servicio", filtro.getNombreServicio()));
            sql.append(" ,servicio.disponibilidad_").append(filtro.getColumnaServicio());
            if (filtro.isRequiereTipoServicio()) {
                sql.append(String.format(" ,servicio.nombre_tipo_%s1", filtro.getNombreServicio()));
                sql.append(String.format(" ,servicio.nombre_tipo_%s2", filtro.getNombreServicio()));
            }
            sql.append(" ,servicio.condicion_").append(filtro.getColumnaServicio());
            //total de estudiantes por predio              
            sql.append(" ,coalesce(total_estud.total_estudiantes,0) total_estudiantes");
        } else {
            if (filtro.isAgrupamientoNivel0()) {
                orden.append(" n.nombre_nivel0");
            }
            if (filtro.isAgrupamientoNivel1()) {
                orden.append(" n.codigo_nivel1,n.nombre_nivel1");
            }
            if (filtro.isAgrupamientoNivel2()) {
                orden.append("n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
            }
            if (filtro.isAgrupamientoNivel3()) {
                orden.append("n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
            }
            if (filtro.isAgrupamientoNivel4()) {
                orden.append("n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
                orden.append(",n.codigo_nivel4,n.nombre_nivel4");
            }
            if (filtro.isAgrupamientoNivel5()) {
                orden.append("n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
                orden.append(",n.codigo_nivel4,n.nombre_nivel4");
                orden.append(",n.codigo_nivel5,n.nombre_nivel5");
            }
            if (filtro.isAgrupamientoEstablecimiento()) {
                orden.append(" n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
                orden.append(",n.codigo_nivel4,n.nombre_nivel4");
                orden.append(",n.codigo_nivel5,n.nombre_nivel5");
                orden.append(", n.codigo_establecimiento, n.nombre_establecimiento");
            }
            if (filtro.isAgrupamientoSede()) {
                orden.append(" n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
                orden.append(",n.codigo_nivel4,n.nombre_nivel4");
                orden.append(",n.codigo_nivel5,n.nombre_nivel5");
                orden.append(", n.codigo_establecimiento, n.nombre_establecimiento");
                orden.append(", n.codigo_sede, n.nombre_sede");
            }
            // datos informativos
            sql.append(orden.toString());
            sql.append(String.format(" , '%s' nombre_servicio", filtro.getNombreServicio()));
            sql.append(String.format(" ,coalesce(num_pred_disp.valor,0) num_predios_disponibilidad", filtro.getColumnaServicio()));
            if (filtro.getCondicionServicio() != null) {
                sql.append(String.format(" ,coalesce(num_pred_cond.num_predios_condicion_%s,0) num_predios_condicion", filtro.getColumnaServicio()));
            }

            if (filtro.getAnalisisServicio() != null) {
                sql.append(String.format(" ,coalesce(analisis.num_predios_%s_%s,0) analisis_servicio", filtro.isAnalisisSuficiencia() ? "suficientes" : "insuficientes", filtro.getColumnaServicio()));
            }
            sql.append(" ,coalesce(num_predio.total,0) numero_predios");
            sql.append(" ,coalesce(total_estud.total_estudiantes,0) total_estudiantes");
        }
// FROM 
        sql.append(" from ind_auxiliar_indicador aux");
        sql.append(" inner join ind_auxiliar_consultas n on n.id_predio = aux.id_predio and n.periodo = aux.periodo and n.id_tnt = aux.id_tnt");
        if (filtro.isAgrupamientoPredio()) {
            //etnias
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ETNIAS_PREDIO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) etnias on etnias.id_predio = aux.id_predio");
            //tipo de servicio
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(filtro.getIndicadorDisponibilidadServicio(), ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) servicio on servicio.id_predio = aux.id_predio");
            // total estudiantes 
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_TOTAL_ESTUDIANTES, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) total_estud on total_estud.id_predio = aux.id_predio");

        } else {
            String strSQLNivelAgrupamiento = this.getSQLNivelAgrupamiento(filtro);
            // numero de predios por disponiblidad
            sql.append(" left join (");
            String formula = this.consultarFormulaSQLIndicador(filtro.getIndicadorNumPrediosDisponibilidadServicio(), filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo());
            if (filtro.getTieneServicio() != null) {
                String disp_servicio = filtro.getTieneServicio().equalsIgnoreCase("sql.ind.general.si") ? "1" : "0";
                formula = formula.replaceAll("\\?disp_servicio", disp_servicio);
            }
            sql.append(formula);
            sql.append(String.format(" ) num_pred_disp on num_pred_disp.%1$s = n.%1$s", strSQLNivelAgrupamiento));
            sql.append(" and num_pred_disp.periodo = aux.periodo and num_pred_disp.id_tnt = aux.id_tnt");
            // numero de predios por condicion
            if (filtro.getCondicionServicio() != null) {
                sql.append(" left join (");
                formula = this.consultarFormulaSQLIndicador(filtro.getIndicadorNumPrediosCondicionServicio(), filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo());
                formula = formula.replaceAll("\\?cond_servicio", filtro.getCondicionServicio().toString());
                sql.append(formula);
                sql.append(String.format(" ) num_pred_cond on num_pred_cond.%1$s = n.%1$s", strSQLNivelAgrupamiento));
                sql.append(" and num_pred_cond.periodo = aux.periodo and num_pred_cond.id_tnt = aux.id_tnt");
            }
            // total predios
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_TOTAL_PREDIOS, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
            sql.append(String.format(" ) num_predio on num_predio.%1$s = n.%1$s", strSQLNivelAgrupamiento));
            sql.append(" and num_predio.periodo = aux.periodo and num_predio.id_tnt = aux.id_tnt");
            // total estudiantes 
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_TOTAL_ESTUDIANTES, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
            sql.append(String.format(" ) total_estud on total_estud.%1$s = n.%1$s", strSQLNivelAgrupamiento));
            sql.append(" and total_estud.periodo = aux.periodo and total_estud.id_tnt = aux.id_tnt");
            if (filtro.getAnalisisServicio() != null) {
                // numero de predios analisis
                sql.append(" left join (");
                sql.append(this.consultarFormulaSQLIndicador(filtro.getIndicadorNumPrediosAnalisisServicio(), filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
                sql.append(String.format(" ) analisis on analisis.%1$s = n.%1$s", strSQLNivelAgrupamiento));
                sql.append(" and analisis.periodo = aux.periodo and analisis.id_tnt = aux.id_tnt");
            }
        }

// WHERE
        sql.append(" where aux.id_tnt = ?id_tnt and aux.periodo = ?periodo");
        if (filtro.isAgrupamientoPredio()) {
            sql.append(" and n.principal_establecimiento = 1");
            if (filtro.getTieneServicio() != null) {
                sql.append(" and servicio.disponibilidad_").append(filtro.getColumnaServicio());
                sql.append(" = ?disp_servicio");
            }
        }
        if (filtro.getIdNivel0() != null) {
            sql.append(" and n.id_nivel0 = ?id_nivel0");
        }
        if (filtro.getIdNivel1() != null) {
            sql.append(" and n.id_nivel1 = ?id_nivel1");
        }
        if (filtro.getIdNivel2() != null) {
            sql.append(" and n.id_nivel2 = ?id_nivel2");
        }
        if (filtro.getIdNivel3() != null) {
            sql.append(" and n.id_nivel3 = ?id_nivel3");
        }
        if (filtro.getIdNivel4() != null) {
            sql.append(" and n.id_nivel4 = ?id_nivel4");
        }
        if (filtro.getIdNivel5() != null) {
            sql.append(" and n.id_nivel5 = ?id_nivel5");
        }
        if (filtro.getIdEstablecimiento() != null) {
            sql.append(" and n.id_establecimiento = ?id_establecimiento");
        }
        if (filtro.getIdSede() != null) {
            sql.append(" and n.id_sede = ?id_sede");
        }
        if (filtro.getIdPredio() != null) {
            sql.append(" and n.id_predio = ?id_predio");
        }
        // otros filtros
        if (filtro.getCodZona() != null) {
            sql.append(" and n.codigo_zona = ?cod_zona");
        }
        if (filtro.getCodSector() != null) {
            sql.append(" and n.codigo_sector = ?cod_sector");
        }
        if (filtro.getCondicionServicio() != null) {
            if (filtro.isAgrupamientoPredio()) {
                sql.append(" and servicio.condicion_").append(filtro.getColumnaServicio());
                sql.append(" = ?cond_servicio");
            }
        }
        if (filtro.getCodigoTipoServicio() != null && filtro.isAgrupamientoPredio()) {
            sql.append(String.format(" and (servicio.codigo_tipo_%s1 = ?cod_tipo_servicio", filtro.getColumnaServicio()));
            sql.append(String.format(" or servicio.codigo_tipo_%s2 = ?cod_tipo_servicio)", filtro.getColumnaServicio()));
        }
        // ORDER BY 
        sql.append(" ORDER by ");
        sql.append(orden.toString());

        Query query = tpm.getEm().createNativeQuery(sql.toString());
        query.setParameter("id_tnt", tpm.getCurrentTenant());
        query.setParameter("periodo", filtro.getPeriodo());
        query.setParameter("idioma", filtro.getIdioma());
        query.setParameter("id_nivel0", filtro.getIdNivel0());
        if (filtro.getIdNivel1() != null) {
            query.setParameter("id_nivel1", filtro.getIdNivel1());
        }
        if (filtro.getIdNivel2() != null) {
            query.setParameter("id_nivel2", filtro.getIdNivel2());
        }
        if (filtro.getIdNivel3() != null) {
            query.setParameter("id_nivel3", filtro.getIdNivel3());
        }
        if (filtro.getIdNivel4() != null) {
            query.setParameter("id_nivel4", filtro.getIdNivel4());
        }
        if (filtro.getIdNivel5() != null) {
            query.setParameter("id_nivel5", filtro.getIdNivel5());
        }
        if (filtro.getIdEstablecimiento() != null) {
            query.setParameter("id_establecimiento", filtro.getIdEstablecimiento());
        }
        if (filtro.getIdSede() != null) {
            query.setParameter("id_sede", filtro.getIdSede());
        }
        if (filtro.getIdPredio() != null) {
            query.setParameter("id_predio", filtro.getIdPredio());
        }
        // otros filtros
        if (filtro.getCodZona() != null) {
            query.setParameter("cod_zona", filtro.getCodZona());
        }
        if (filtro.getCodSector() != null) {
            query.setParameter("cod_sector", filtro.getCodSector());
        }
        if (filtro.getTieneServicio() != null) {
            if (filtro.isAgrupamientoPredio()) {
                query.setParameter("disp_servicio", filtro.getTieneServicio());
            } else {
                String disp_servicio = filtro.getTieneServicio().equalsIgnoreCase("si") ? "1" : "0";
                query.setParameter("disp_servicio", disp_servicio);
            }
        }
        if (filtro.getCondicionServicio() != null) {
            query.setParameter("cond_servicio", filtro.getCondicionServicio().toString());
        }
        if (filtro.getCodigoTipoServicio() != null) {
            query.setParameter("cod_tipo_servicio", filtro.getCodigoTipoServicio());
        }
        return query.getResultList();
    }

    private List<Object[]> consultarServicioIndicadores(FiltroAmbitoServicio filtro) {
        StringBuilder sql = new StringBuilder();
        StringBuilder orden = new StringBuilder();
//SELECT
        sql.append(" select distinct ");
        if (filtro.isAgrupamientoPredio()) {
            orden.append(" n.codigo_nivel1,n.nombre_nivel1");
            orden.append(",n.codigo_nivel2,n.nombre_nivel2");
            orden.append(",n.codigo_nivel3,n.nombre_nivel3");
            orden.append(",n.codigo_nivel4,n.nombre_nivel4");
            orden.append(",n.codigo_nivel5,n.nombre_nivel5");
            orden.append(" ,n.codigo_establecimiento, n.nombre_establecimiento");
            orden.append(" ,n.codigo_sede, n.nombre_sede");
            orden.append(" ,n.codigo_predio, n.nombre_predio");
            //otros
            orden.append(" ,n.direccion_predio, n.propiedad_predio");
            orden.append(" ,n.nombre_zona, n.nombre_sector, n.nombre_clima");
            //etnias
            orden.append(" ,etnias.valor");
            sql.append(orden.toString());
            //indicadores 
            sql.append(String.format(" , '%s' nombre_servicio", filtro.getNombreServicio()));
            sql.append(" ,disp_serv.valor disponibilidad_servicio");
            if (filtro.isRequiereTipoServicio()) {
                sql.append(" ,tipo_serv1.valor tipo_servicio1");
                sql.append(" ,tipo_serv2.valor tipo_servicio2");
            }
            sql.append(" ,cond_serv.valor condicion_servicio");
            //total_estudiantes
            sql.append(" ,coalesce(to_number(tot_estud.valor,'9999999999'),0) total_estudiantes");
        } else {
            if (filtro.isAgrupamientoNivel0()) {
                orden.append(" n.nombre_nivel0");
            }
            if (filtro.isAgrupamientoNivel1()) {
                orden.append(" n.codigo_nivel1,n.nombre_nivel1");
            }
            if (filtro.isAgrupamientoNivel2()) {
                orden.append("n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
            }
            if (filtro.isAgrupamientoNivel3()) {
                orden.append("n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
            }
            if (filtro.isAgrupamientoNivel4()) {
                orden.append("n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
                orden.append(",n.codigo_nivel4,n.nombre_nivel4");
            }
            if (filtro.isAgrupamientoNivel5()) {
                orden.append("n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
                orden.append(",n.codigo_nivel4,n.nombre_nivel4");
                orden.append(",n.codigo_nivel5,n.nombre_nivel5");
            }
            if (filtro.isAgrupamientoEstablecimiento()) {
                orden.append(" n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
                orden.append(",n.codigo_nivel4,n.nombre_nivel4");
                orden.append(",n.codigo_nivel5,n.nombre_nivel5");
                orden.append(", n.codigo_establecimiento, n.nombre_establecimiento");
            }
            if (filtro.isAgrupamientoSede()) {
                orden.append(" n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
                orden.append(",n.codigo_nivel4,n.nombre_nivel4");
                orden.append(",n.codigo_nivel5,n.nombre_nivel5");
                orden.append(", n.codigo_establecimiento, n.nombre_establecimiento");
                orden.append(", n.codigo_sede, n.nombre_sede");
            }
            // datos informativos
            sql.append(orden.toString());
            sql.append(String.format(" , '%s' nombre_servicio", filtro.getNombreServicio()));
            sql.append(" ,coalesce(num_pred_disp.valor,'0') num_predios_disponibilidad");
            if (filtro.getCondicionServicio() != null) {
                sql.append(" ,coalesce(num_pred_cond.valor,'0') num_predios_condicion");
            }
            if (filtro.getAnalisisServicio() != null) {
                sql.append(" ,coalesce(analisis.valor,'0') analisis_servicio");
            }
            sql.append(" ,coalesce(tot_pred.valor,'0') numero_predios");
            sql.append(" ,coalesce(tot_estud.valor,'0') total_estudiantes");
        }
// FROM 
        sql.append(" from ind_auxiliar_indicador aux");
        sql.append(" inner join ind_auxiliar_consultas n on n.id_predio = aux.id_predio and n.periodo = aux.periodo and n.id_tnt = aux.id_tnt");

        String strSQLNivelAgrupamiento = this.getSQLNivelAgrupamiento(filtro);
        String strSQLConsultarIndicador = this.getSQLConsultarIndicadorAlmacenado();
        // total estudiantes 
        sql.append(" left join (");
        sql.append(strSQLConsultarIndicador);
        sql.append(" ) tot_estud on tot_estud.id_tnt = aux.id_tnt and tot_estud.periodo = aux.periodo");
        sql.append(String.format(" and tot_estud.cod_indicador = '%s'", ParamIndicador.IND_TOTAL_ESTUDIANTES));
        sql.append(" and tot_estud.nivel_agrupamiento = ?nivel_agrupamiento");
        sql.append(" and tot_estud.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
        if (filtro.isAgrupamientoPredio()) {
            //etnias del predio
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) etnias on etnias.id_tnt = aux.id_tnt and etnias.periodo = aux.periodo");
            sql.append(String.format(" and etnias.cod_indicador = '%s'", ParamIndicador.IND_ETNIAS_PREDIO));
            sql.append(" and etnias.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and etnias.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            //disponibilidad_servicio
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) disp_serv on disp_serv.id_tnt = aux.id_tnt and disp_serv.periodo = aux.periodo");
            sql.append(String.format(" and disp_serv.cod_indicador = '%s'", filtro.getIndicadorDisponibilidadServicio()));
            sql.append(" and disp_serv.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and disp_serv.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            //condicion_servicio
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) cond_serv on cond_serv.id_tnt = aux.id_tnt and cond_serv.periodo = aux.periodo");
            sql.append(String.format(" and cond_serv.cod_indicador = '%s'", filtro.getIndicadorCondicionServicio()));
            sql.append(" and cond_serv.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and cond_serv.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            if (filtro.isRequiereTipoServicio()) {
                // tipo de serivio 1
                sql.append(" left join (");
                sql.append(strSQLConsultarIndicador);
                sql.append(" ) tipo_serv1 on tipo_serv1.id_tnt = aux.id_tnt and tipo_serv1.periodo = aux.periodo");
                sql.append(String.format(" and tipo_serv1.cod_indicador = '%s'", filtro.getIndicadorTipoServicio1()));
                sql.append(" and tipo_serv1.nivel_agrupamiento = ?nivel_agrupamiento");
                sql.append(" and tipo_serv1.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
                // tipo de serivio 2
                sql.append(" left join (");
                sql.append(strSQLConsultarIndicador);
                sql.append(" ) tipo_serv2 on tipo_serv2.id_tnt = aux.id_tnt and tipo_serv2.periodo = aux.periodo");
                sql.append(String.format(" and tipo_serv2.cod_indicador = '%s'", filtro.getIndicadorTipoServicio2()));
                sql.append(" and tipo_serv2.nivel_agrupamiento = ?nivel_agrupamiento");
                sql.append(" and tipo_serv2.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            }
        } else {
            // numero de predios por disponiblidad
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) num_pred_disp on num_pred_disp.id_tnt = aux.id_tnt and num_pred_disp.periodo = aux.periodo");
            sql.append(String.format(" and num_pred_disp.cod_indicador = '%s'", filtro.getIndicadorNumPrediosDisponibilidadServicio()));
            sql.append(" and num_pred_disp.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and num_pred_disp.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            sql.append(" and num_pred_disp.cod_valor = '").append(filtro.getTieneServicio()).append("'");
            // numero de predios por condicion
            if (filtro.getCondicionServicio() != null) {
                sql.append(" left join (");
                sql.append(strSQLConsultarIndicador);
                sql.append(" ) num_pred_cond on num_pred_cond.id_tnt = aux.id_tnt and num_pred_cond.periodo = aux.periodo");
                sql.append(String.format(" and num_pred_cond.cod_indicador = '%s'", filtro.getIndicadorNumPrediosCondicionServicio()));
                sql.append(" and num_pred_cond.nivel_agrupamiento = ?nivel_agrupamiento");
                sql.append(" and num_pred_cond.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            }
            //total_predio
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tot_pred on tot_pred.id_tnt = aux.id_tnt and tot_pred.periodo = aux.periodo");
            sql.append(String.format(" and tot_pred.cod_indicador = '%s'", ParamIndicador.IND_TOTAL_PREDIOS));
            sql.append(" and tot_pred.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tot_pred.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            if (filtro.getAnalisisServicio() != null) {
                // numero de predios analisis
                sql.append(" left join (");
                sql.append(strSQLConsultarIndicador);
                sql.append(" ) analisis on analisis.id_tnt = aux.id_tnt and analisis.periodo = aux.periodo");
                sql.append(String.format(" and analisis.cod_indicador = '%s'", filtro.getIndicadorNumPrediosAnalisisServicio()));
                sql.append(" and analisis.nivel_agrupamiento = ?nivel_agrupamiento");
                sql.append(" and analisis.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            }
        }
// WHERE
        sql.append(" where aux.id_tnt = ?id_tnt and aux.periodo = ?periodo");
        if (filtro.isAgrupamientoPredio()) {
            sql.append(" and n.principal_establecimiento = 1");
            if (filtro.getTieneServicio() != null) {
                sql.append(" and disp_serv.valor = ?disp_servicio");
            }
        }
        if (filtro.getIdNivel0() != null) {
            sql.append(" and n.id_nivel0 = ?id_nivel0");
        }
        if (filtro.getIdNivel1() != null) {
            sql.append(" and n.id_nivel1 = ?id_nivel1");
        }
        if (filtro.getIdNivel2() != null) {
            sql.append(" and n.id_nivel2 = ?id_nivel2");
        }
        if (filtro.getIdNivel3() != null) {
            sql.append(" and n.id_nivel3 = ?id_nivel3");
        }
        if (filtro.getIdNivel4() != null) {
            sql.append(" and n.id_nivel4 = ?id_nivel4");
        }
        if (filtro.getIdNivel5() != null) {
            sql.append(" and n.id_nivel5 = ?id_nivel5");
        }
        if (filtro.getIdEstablecimiento() != null) {
            sql.append(" and n.id_establecimiento = ?id_establecimiento");
        }
        if (filtro.getIdSede() != null) {
            sql.append(" and n.id_sede = ?id_sede");
        }
        if (filtro.getIdPredio() != null) {
            sql.append(" and n.id_predio = ?id_predio");
        }
        // otros filtros
        if (filtro.getCodZona() != null) {
            sql.append(" and n.codigo_zona = ?cod_zona");
        }
        if (filtro.getCodSector() != null) {
            sql.append(" and n.codigo_sector = ?cod_sector");
        }
        if (filtro.getCondicionServicio() != null) {
            if (filtro.isAgrupamientoPredio()) {
                sql.append(" and cond_serv.valor  = ?cond_servicio");
            } else {
                sql.append(" and num_pred_cond.cod_valor  = ?cond_servicio");
            }
        }
        if (filtro.getCodigoTipoServicio() != null && filtro.isAgrupamientoPredio()) {
            sql.append(" and (tipo_serv1.cod_valor = ?cod_tipo_servicio or tipo_serv2.cod_valor = ?cod_tipo_servicio)");
        }
        // ORDER BY 
        sql.append(" ORDER by ");
        sql.append(orden.toString());

        Query query = tpm.getEm().createNativeQuery(sql.toString());
        query.setParameter("id_tnt", tpm.getCurrentTenant());
        query.setParameter("periodo", filtro.getPeriodo());
        query.setParameter("idioma", filtro.getIdioma());
        query.setParameter("id_nivel0", filtro.getIdNivel0());
        query.setParameter("nivel_agrupamiento", filtro.getAgrupamiento());
        if (filtro.getIdNivel1() != null) {
            query.setParameter("id_nivel1", filtro.getIdNivel1());
        }
        if (filtro.getIdNivel2() != null) {
            query.setParameter("id_nivel2", filtro.getIdNivel2());
        }
        if (filtro.getIdNivel3() != null) {
            query.setParameter("id_nivel3", filtro.getIdNivel3());
        }
        if (filtro.getIdNivel4() != null) {
            query.setParameter("id_nivel4", filtro.getIdNivel4());
        }
        if (filtro.getIdNivel5() != null) {
            query.setParameter("id_nivel5", filtro.getIdNivel5());
        }
        if (filtro.getIdEstablecimiento() != null) {
            query.setParameter("id_establecimiento", filtro.getIdEstablecimiento());
        }
        if (filtro.getIdSede() != null) {
            query.setParameter("id_sede", filtro.getIdSede());
        }
        if (filtro.getIdPredio() != null) {
            query.setParameter("id_predio", filtro.getIdPredio());
        }
        // otros filtros
        if (filtro.getCodZona() != null) {
            query.setParameter("cod_zona", filtro.getCodZona());
        }
        if (filtro.getCodSector() != null) {
            query.setParameter("cod_sector", filtro.getCodSector());
        }
        if (filtro.isAgrupamientoPredio() && filtro.getTieneServicio() != null) {
            query.setParameter("disp_servicio", filtro.getTieneServicio());
        }
        if (filtro.getCondicionServicio() != null) {
            query.setParameter("cond_servicio", filtro.getCondicionServicio().toString());
        }
        if (filtro.getCodigoTipoServicio() != null) {
            query.setParameter("cod_tipo_servicio", filtro.getCodigoTipoServicio());
        }
        return query.getResultList();
    }

    @Override
    public List<Object[]> consultarServicioConsolidado(FiltroAmbitoServicioConsolidado filtro) {
        if (filtro.isConsultaDeTiempoReal()) {
            if (ParamBaseDatos.POSTGRE.equals(UtilProperties.getDbMotor())) {
                return this.consultarServicioConsolidadoTiempoRealPostgre(filtro);
            } else {
                return this.consultarServicioConsolidadoTiempoRealOracle(filtro);
            }
        } else {
            return this.consultarServicioConsolidadoIndicadores(filtro);
        }
    }

    private List<Object[]> consultarServicioConsolidadoTiempoRealPostgre(FiltroAmbitoServicioConsolidado filtro) {
        String codInstrumento = this.consultarCodInstrumentoPorPeriodo(filtro.getPeriodo());
        StringBuilder sql = new StringBuilder();
        StringBuilder orden = new StringBuilder();
//SELECT
        sql.append(" select distinct ");
        if (filtro.isAgrupamientoPredio()) {
            orden.append(" n.codigo_nivel1,n.nombre_nivel1");
            orden.append(",n.codigo_nivel2,n.nombre_nivel2");
            orden.append(",n.codigo_nivel3,n.nombre_nivel3");
            orden.append(",n.codigo_nivel4,n.nombre_nivel4");
            orden.append(",n.codigo_nivel5,n.nombre_nivel5");
            orden.append(" ,n.codigo_establecimiento, n.nombre_establecimiento");
            orden.append(" ,n.codigo_sede, n.nombre_sede");
            orden.append(" ,n.codigo_predio, n.nombre_predio");
            //otros
            orden.append(" ,n.direccion_predio, n.propiedad_predio");
            orden.append(" ,n.nombre_zona, n.nombre_sector, n.nombre_clima");
            orden.append(" ,etnias.etnias");
            sql.append(orden.toString());
            //indicadores disponiblilidad
            sql.append(" ,servicios.disponibilidad_agua");
            sql.append(" ,servicios.disponibilidad_energia_electrica");
            sql.append(" ,servicios.disponibilidad_gas");
            sql.append(" ,servicios.disponibilidad_recoleccion_basuras");
            sql.append(" ,servicios.disponibilidad_sistema_reciclaje");
            sql.append(" ,servicios.disponibilidad_red_alcantarillado");
            sql.append(" ,servicios.disponibilidad_red_pluvial");
            sql.append(" ,servicios.disponibilidad_internet");
            sql.append(" ,servicios.disponibilidad_telefono");
            // indicadores condicicion            
            sql.append(" ,servicios.condicion_agua");
            sql.append(" ,servicios.condicion_energia_electrica");
            sql.append(" ,servicios.condicion_gas");
            sql.append(" ,servicios.condicion_recoleccion_basuras");
            sql.append(" ,servicios.condicion_sistema_reciclaje");
            sql.append(" ,servicios.condicion_red_alcantarillado");
            sql.append(" ,servicios.condicion_red_pluvial");
            sql.append(" ,servicios.condicion_internet");
            sql.append(" ,servicios.condicion_telefono");
        } else {
            if (filtro.isAgrupamientoNivel0()) {
                orden.append(" n.nombre_nivel0");
            }
            if (filtro.isAgrupamientoNivel1()) {
                orden.append(" n.codigo_nivel1,n.nombre_nivel1");
            }
            if (filtro.isAgrupamientoNivel2()) {
                orden.append("n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
            }
            if (filtro.isAgrupamientoNivel3()) {
                orden.append("n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
            }
            if (filtro.isAgrupamientoNivel4()) {
                orden.append("n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
                orden.append(",n.codigo_nivel4,n.nombre_nivel4");
            }
            if (filtro.isAgrupamientoNivel5()) {
                orden.append("n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
                orden.append(",n.codigo_nivel4,n.nombre_nivel4");
                orden.append(",n.codigo_nivel5,n.nombre_nivel5");
            }
            if (filtro.isAgrupamientoEstablecimiento()) {
                orden.append(" n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
                orden.append(",n.codigo_nivel4,n.nombre_nivel4");
                orden.append(",n.codigo_nivel5,n.nombre_nivel5");
                orden.append(", n.codigo_establecimiento, n.nombre_establecimiento");
            }
            if (filtro.isAgrupamientoSede()) {
                orden.append(" n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
                orden.append(",n.codigo_nivel4,n.nombre_nivel4");
                orden.append(",n.codigo_nivel5,n.nombre_nivel5");
                orden.append(", n.codigo_establecimiento, n.nombre_establecimiento");
                orden.append(", n.codigo_sede, n.nombre_sede");
            }
            // datos informativos
            sql.append(orden.toString());
            // indicadores numero predios con servicio
            sql.append(" ,coalesce(pred_disp.num_predios_disponibilidad_agua,0) num_predios_disponibilidad_agua");
            sql.append(" ,coalesce(pred_disp.num_predios_disponibilidad_energia_electrica,0) num_predios_disponibilidad_energia_electrica");
            sql.append(" ,coalesce(pred_disp.num_predios_disponibilidad_gas,0) num_predios_disponibilidad_gas");
            sql.append(" ,coalesce(pred_disp.num_predios_disponibilidad_recoleccion_basuras,0) num_predios_disponibilidad_recoleccion_basuras");
            sql.append(" ,coalesce(pred_disp.num_predios_disponibilidad_sistema_reciclaje,0) num_predios_disponibilidad_sistema_reciclaje");
            sql.append(" ,coalesce(pred_disp.num_predios_disponibilidad_red_alcantarillado,0) num_predios_disponibilidad_red_alcantarillado");
            sql.append(" ,coalesce(pred_disp.num_predios_disponibilidad_red_pluvial,0) num_predios_disponibilidad_red_pluvial");
            sql.append(" ,coalesce(pred_disp.num_predios_disponibilidad_internet,0) num_predios_disponibilidad_internet");
            sql.append(" ,coalesce(pred_disp.num_predios_disponibilidad_telefono,0) num_predios_disponibilidad_telefono");
            // indicadores numero predios con servicio por condiccion            
            if (filtro.getCondicionAgua() != null) {
                sql.append(" ,coalesce(pred_cond_agu.num_predios_condicion_agua,0) num_predios_condicion_agua");
            }
            if (filtro.getCondicionEnergia() != null) {
                sql.append(" ,coalesce(pred_cond_ele.num_predios_condicion_energia_electrica,0) num_predios_condicion_energia_electrica");
            }
            if (filtro.getCondicionGas() != null) {
                sql.append(" ,coalesce(pred_cond_gas.num_predios_condicion_gas,0) num_predios_condicion_gas");
            }
            if (filtro.getCondicionBasuras() != null) {
                sql.append(" ,coalesce(pred_cond_bas.num_predios_condicion_recoleccion_basuras,0) num_predios_condicion_recoleccion_basuras");
            }
            if (filtro.getCondicionReciclaje() != null) {
                sql.append(" ,coalesce(pred_cond_rec.num_predios_condicion_sistema_reciclaje,0) num_predios_condicion_sistema_reciclaje");
            }
            if (filtro.getCondicionAlcantarillado() != null) {
                sql.append(" ,coalesce(pred_cond_alc.num_predios_condicion_red_alcantarillado,0) num_predios_condicion_red_alcantarillado");
            }
            if (filtro.getCondicionPluvial() != null) {
                sql.append(" ,coalesce(pred_cond_plu.num_predios_condicion_red_pluvial,0) num_predios_condicion_red_pluvial");
            }
            if (filtro.getCondicionInternet() != null) {
                sql.append(" ,coalesce(pred_cond_int.num_predios_condicion_internet,0) num_predios_condicion_internet");
            }
            if (filtro.getCondicionTelefono() != null) {
                sql.append(" ,coalesce(pred_cond_tel.num_predios_condicion_telefono,0) num_predios_condicion_telefono");
            }
        }
// FROM 
        sql.append(" from cier.ind_auxiliar_indicador aux");
        sql.append(" inner join cier.ind_auxiliar_consultas n on n.id_predio = aux.id_predio and n.periodo = aux.periodo and n.id_tnt = aux.id_tnt");
        if (filtro.isAgrupamientoPredio()) {
            //etnias
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ETNIAS_PREDIO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) as etnias on etnias.id_dig_instrumento = aux.id_dig_instrumento and etnias.id_predio = aux.id_predio");
            //servicios
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_SERVICIO_DISPONIBILIDAD_AGUA, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) as servicios on servicios.id_dig_instrumento = aux.id_dig_instrumento and servicios.id_predio = aux.id_predio");
        } else {
            String strSQLNivelAgrupamiento = this.getSQLNivelAgrupamiento(filtro);
            // indicadores numero predios con servicio
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_SERVICIO_NUM_PREDIOS_DISPONIBILIDAD_AGUA, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
            sql.append(String.format(" ) as pred_disp on pred_disp.%1$s = n.%1$s", strSQLNivelAgrupamiento));
            sql.append(" and pred_disp.periodo = aux.periodo and pred_disp.id_tnt = aux.id_tnt");
            // indicadores numero predios con servicio por condicicion
            //agua
            if (filtro.getCondicionAgua() != null) {
                sql.append(" left join (");
                sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_SERVICIO_NUM_PREDIOS_CONDICION_AGUA, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
                sql.append(String.format(" ) as pred_cond_agu on pred_cond_agu.%1$s = n.%1$s", strSQLNivelAgrupamiento));
                sql.append(" and pred_cond_agu.periodo = aux.periodo and pred_cond_agu.id_tnt = aux.id_tnt");
                sql.append(String.format(" and pred_cond_agu.condicion_agua = '%s'", filtro.getCondicionAgua()));
            }
            //energia
            if (filtro.getCondicionEnergia() != null) {
                sql.append(" left join (");
                sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_SERVICIO_NUM_PREDIOS_CONDICION_ENERGIA_ELECTRICA, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
                sql.append(String.format(" ) as pred_cond_ele on pred_cond_ele.%1$s = n.%1$s", strSQLNivelAgrupamiento));
                sql.append(" and pred_cond_ele.periodo = aux.periodo and pred_cond_ele.id_tnt = aux.id_tnt");
                sql.append(String.format(" and pred_cond_ele.condicion_energia_electrica = '%s'", filtro.getCondicionEnergia()));
            }
            //gas
            if (filtro.getCondicionGas() != null) {
                sql.append(" left join (");
                sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_SERVICIO_NUM_PREDIOS_CONDICION_GAS, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
                sql.append(String.format(" ) as pred_cond_gas on pred_cond_gas.%1$s = n.%1$s", strSQLNivelAgrupamiento));
                sql.append(" and pred_cond_gas.periodo = aux.periodo and pred_cond_gas.id_tnt = aux.id_tnt");
                sql.append(String.format(" and pred_cond_gas.condicion_gas = '%s'", filtro.getCondicionGas()));
            }
            // basuras
            if (filtro.getCondicionBasuras() != null) {
                sql.append(" left join (");
                sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_SERVICIO_NUM_PREDIOS_CONDICION_RECOLECCION_BASURAS, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
                sql.append(String.format(" ) as pred_cond_bas on pred_cond_bas.%1$s = n.%1$s", strSQLNivelAgrupamiento));
                sql.append(" and pred_cond_bas.periodo = aux.periodo and pred_cond_bas.id_tnt = aux.id_tnt");
                sql.append(String.format("  and pred_cond_bas.condicion_recoleccion_basuras = '%s'", filtro.getCondicionBasuras()));
            }
            //reciclaje
            if (filtro.getCondicionReciclaje() != null) {
                sql.append(" left join (");
                sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_SERVICIO_NUM_PREDIOS_CONDICION_SISTEMA_RECICLAJE, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
                sql.append(String.format(" ) as pred_cond_rec on pred_cond_rec.%1$s = n.%1$s", strSQLNivelAgrupamiento));
                sql.append(" and pred_cond_rec.periodo = aux.periodo and pred_cond_rec.id_tnt = aux.id_tnt");
                sql.append(String.format(" and pred_cond_rec.condicion_sistema_reciclaje = '%s'", filtro.getCondicionReciclaje()));
            }
            //alcantarrillado
            if (filtro.getCondicionAlcantarillado() != null) {
                sql.append(" left join (");
                sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_SERVICIO_NUM_PREDIOS_CONDICION_RED_ALCANTARILLADO, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
                sql.append(String.format(" ) as pred_cond_alc on pred_cond_alc.%1$s = n.%1$s", strSQLNivelAgrupamiento));
                sql.append(" and pred_cond_alc.periodo = aux.periodo and pred_cond_alc.id_tnt = aux.id_tnt");
                sql.append(String.format(" and pred_cond_alc.condicion_red_alcantarillado = '%s'", filtro.getCondicionAlcantarillado()));
            }
            //pluvial
            if (filtro.getCondicionPluvial() != null) {
                sql.append(" left join (");
                sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_SERVICIO_NUM_PREDIOS_CONDICION_RED_PLUVIAL, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
                sql.append(String.format(" ) as pred_cond_plu on pred_cond_plu.%1$s = n.%1$s", strSQLNivelAgrupamiento));
                sql.append(" and pred_cond_plu.periodo = aux.periodo and pred_cond_plu.id_tnt = aux.id_tnt");
                sql.append(String.format(" and pred_cond_plu.condicion_red_pluvial = '%s'", filtro.getCondicionPluvial()));
            }
            // internet
            if (filtro.getCondicionInternet() != null) {
                sql.append(" left join (");
                sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_SERVICIO_NUM_PREDIOS_CONDICION_INTERNET, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
                sql.append(String.format(" ) as pred_cond_int on pred_cond_int.%1$s = n.%1$s", strSQLNivelAgrupamiento));
                sql.append(" and pred_cond_int.periodo = aux.periodo and pred_cond_int.id_tnt = aux.id_tnt");
                sql.append(String.format(" and pred_cond_int.condicion_internet = '%s'", filtro.getCondicionInternet()));
            }
            //telefono
            if (filtro.getCondicionTelefono() != null) {
                sql.append(" left join (");
                sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_SERVICIO_NUM_PREDIOS_CONDICION_TELEFONO, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
                sql.append(String.format(" ) as pred_cond_tel on pred_cond_tel.%1$s = n.%1$s", strSQLNivelAgrupamiento));
                sql.append(" and pred_cond_tel.periodo = aux.periodo and pred_cond_tel.id_tnt = aux.id_tnt");
                sql.append(String.format(" and pred_cond_tel.condicion_telefono= '%s'", filtro.getCondicionTelefono()));
            }
        }
// WHERE
        sql.append(" where aux.id_tnt = ?id_tnt and aux.periodo = ?periodo");
        if (filtro.isAgrupamientoPredio()) {
            sql.append(" and n.principal_establecimiento = 1");
        }
        if (filtro.getIdNivel0() != null) {
            sql.append(" and n.id_nivel0 = ?id_nivel0");
        }
        if (filtro.getIdNivel1() != null) {
            sql.append(" and n.id_nivel1 = ?id_nivel1");
        }
        if (filtro.getIdNivel2() != null) {
            sql.append(" and n.id_nivel2 = ?id_nivel2");
        }
        if (filtro.getIdNivel3() != null) {
            sql.append(" and n.id_nivel3 = ?id_nivel3");
        }
        if (filtro.getIdNivel4() != null) {
            sql.append(" and n.id_nivel4 = ?id_nivel4");
        }
        if (filtro.getIdNivel5() != null) {
            sql.append(" and n.id_nivel5 = ?id_nivel5");
        }
        if (filtro.getIdEstablecimiento() != null) {
            sql.append(" and n.id_establecimiento = ?id_establecimiento");
        }
        if (filtro.getIdSede() != null) {
            sql.append(" and n.id_sede = ?id_sede");
        }
        if (filtro.getIdPredio() != null) {
            sql.append(" and n.id_predio = ?id_predio");
        }
        // otros filtros
        if (filtro.getCodZona() != null) {
            sql.append(" and n.codigo_zona = ?cod_zona");
        }
        if (filtro.getCodSector() != null) {
            sql.append(" and n.codigo_sector = ?cod_sector");
        }
        // ORDER BY 
        sql.append(" ORDER by ");
        sql.append(orden.toString());

        String auxSql = sql.toString();
        auxSql = auxSql.replaceAll("\\?start", "");
        auxSql = auxSql.replaceAll("\\?end", "");

        Query query = tpm.getEm().createNativeQuery(auxSql);
        query.setParameter("id_tnt", tpm.getCurrentTenant());
        query.setParameter("periodo", filtro.getPeriodo());
        query.setParameter("idioma", filtro.getIdioma());
        query.setParameter("id_nivel0", filtro.getIdNivel0());
        if (filtro.getIdNivel1() != null) {
            query.setParameter("id_nivel1", filtro.getIdNivel1());
        }
        if (filtro.getIdNivel2() != null) {
            query.setParameter("id_nivel2", filtro.getIdNivel2());
        }
        if (filtro.getIdNivel3() != null) {
            query.setParameter("id_nivel3", filtro.getIdNivel3());
        }
        if (filtro.getIdNivel4() != null) {
            query.setParameter("id_nivel4", filtro.getIdNivel4());
        }
        if (filtro.getIdNivel5() != null) {
            query.setParameter("id_nivel5", filtro.getIdNivel5());
        }
        if (filtro.getIdEstablecimiento() != null) {
            query.setParameter("id_establecimiento", filtro.getIdEstablecimiento());
        }
        if (filtro.getIdSede() != null) {
            query.setParameter("id_sede", filtro.getIdSede());
        }
        if (filtro.getIdPredio() != null) {
            query.setParameter("id_predio", filtro.getIdPredio());
        }
        // otros filtros
        if (filtro.getCodZona() != null) {
            query.setParameter("cod_zona", filtro.getCodZona());
        }
        if (filtro.getCodSector() != null) {
            query.setParameter("cod_sector", filtro.getCodSector());
        }
        return query.getResultList();
    }

    private List<Object[]> consultarServicioConsolidadoTiempoRealOracle(FiltroAmbitoServicioConsolidado filtro) {
        String codInstrumento = this.consultarCodInstrumentoPorPeriodo(filtro.getPeriodo());
        StringBuilder sql = new StringBuilder();
        StringBuilder orden = new StringBuilder();
        String funcion = "";
        if (ParamBaseDatos.ORACLE.equals(UtilProperties.getDbMotor())) {
            funcion = "nvl";
        } else {
            funcion = "coalesce";
        }
//SELECT
        sql.append(" select distinct ");
        if (filtro.isAgrupamientoPredio()) {
            orden.append(" n.codigo_nivel1,n.nombre_nivel1");
            orden.append(",n.codigo_nivel2,n.nombre_nivel2");
            orden.append(",n.codigo_nivel3,n.nombre_nivel3");
            orden.append(",n.codigo_nivel4,n.nombre_nivel4");
            orden.append(",n.codigo_nivel5,n.nombre_nivel5");
            orden.append(" ,n.codigo_establecimiento, n.nombre_establecimiento");
            orden.append(" ,n.codigo_sede, n.nombre_sede");
            orden.append(" ,n.codigo_predio, n.nombre_predio");
            //otros
            orden.append(" ,n.direccion_predio, n.propiedad_predio");
            orden.append(" ,n.nombre_zona, n.nombre_sector, n.nombre_clima");
            orden.append(" ,etnias.etnias");
            sql.append(orden.toString());
            //indicadores disponiblilidad
            sql.append(" ,servicios.disponibilidad_agua");
            sql.append(" ,servicios.disp_energia_electrica");
            sql.append(" ,servicios.disponibilidad_gas");
            sql.append(" ,servicios.dispon_reco_basuras");
            sql.append(" ,servicios.dispo_sistema_reciclaje");
            sql.append(" ,servicios.disp_red_alcantarillado");
            sql.append(" ,servicios.dispo_red_pluvial");
            sql.append(" ,servicios.disponibilidad_internet");
            sql.append(" ,servicios.disponibilidad_telefono");
            // indicadores condicicion            
            sql.append(" ,servicios.condicion_agua");
            sql.append(" ,servicios.cond_energia_electrica");
            sql.append(" ,servicios.condicion_gas");
            sql.append(" ,servicios.cond_reco_basuras");
            sql.append(" ,servicios.cond_sistema_reciclaje");
            sql.append(" ,servicios.cond_red_alcantarillado");
            sql.append(" ,servicios.condicion_red_pluvial");
            sql.append(" ,servicios.condicion_internet");
            sql.append(" ,servicios.condicion_telefono");
        } else {
            if (filtro.isAgrupamientoNivel0()) {
                orden.append(" n.nombre_nivel0");
            }
            if (filtro.isAgrupamientoNivel1()) {
                orden.append(" n.codigo_nivel1,n.nombre_nivel1");
            }
            if (filtro.isAgrupamientoNivel2()) {
                orden.append("n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
            }
            if (filtro.isAgrupamientoNivel3()) {
                orden.append("n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
            }
            if (filtro.isAgrupamientoNivel4()) {
                orden.append("n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
                orden.append(",n.codigo_nivel4,n.nombre_nivel4");
            }
            if (filtro.isAgrupamientoNivel5()) {
                orden.append("n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
                orden.append(",n.codigo_nivel4,n.nombre_nivel4");
                orden.append(",n.codigo_nivel5,n.nombre_nivel5");
            }
            if (filtro.isAgrupamientoEstablecimiento()) {
                orden.append(" n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
                orden.append(",n.codigo_nivel4,n.nombre_nivel4");
                orden.append(",n.codigo_nivel5,n.nombre_nivel5");
                orden.append(", n.codigo_establecimiento, n.nombre_establecimiento");
            }
            if (filtro.isAgrupamientoSede()) {
                orden.append(" n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
                orden.append(",n.codigo_nivel4,n.nombre_nivel4");
                orden.append(",n.codigo_nivel5,n.nombre_nivel5");
                orden.append(", n.codigo_establecimiento, n.nombre_establecimiento");
                orden.append(", n.codigo_sede, n.nombre_sede");
            }
            // datos informativos
            sql.append(orden.toString());
            // indicadores numero predios con servicio
            sql.append(" ,").append(funcion).append("(pred_disp_agua.valor,0)");
            sql.append(" ,").append(funcion).append("(pred_disp_ene_elec.valor,0)");
            sql.append(" ,").append(funcion).append("(pred_disp_gas.valor,0)");
            sql.append(" ,").append(funcion).append("(pred_disp_rec_bas.valor,0)");
            sql.append(" ,").append(funcion).append("(pred_disp_sis_rec.valor,0)");
            sql.append(" ,").append(funcion).append("(pred_disp_red_alc.valor,0)");
            sql.append(" ,").append(funcion).append("(pred_disp_red_pluvial.valor,0)");
            sql.append(" ,").append(funcion).append("(pred_disp_internet.valor,0)");
            sql.append(" ,").append(funcion).append("(pred_disp_telefono.valor,0)");
            // indicadores numero predios con servicio por condiccion            
            if (filtro.getCondicionAgua() != null) {
                sql.append(" ,").append(funcion).append("(pred_cond_agu.num_predios_condicion_agua,0)");
            }
            if (filtro.getCondicionEnergia() != null) {
                sql.append(" ,").append(funcion).append("(pred_cond_ele.num_pred_cond_ene_electrica,0)");
            }
            if (filtro.getCondicionGas() != null) {
                sql.append(" ,").append(funcion).append("(pred_cond_gas.num_pred_cond_gas,0)");
            }
            if (filtro.getCondicionBasuras() != null) {
                sql.append(" ,").append(funcion).append("(pred_cond_bas.num_pred_cond_rec_bas,0)");
            }
            if (filtro.getCondicionReciclaje() != null) {
                sql.append(" ,").append(funcion).append("(pred_cond_rec.num_pred_cond_sis_rec,0)");
            }
            if (filtro.getCondicionAlcantarillado() != null) {
                sql.append(" ,").append(funcion).append("(pred_cond_alc.num_pred_cond_red_alc,0)");
            }
            if (filtro.getCondicionPluvial() != null) {
                sql.append(" ,").append(funcion).append("(pred_cond_plu.num_pred_cond_red_plu,0)");
            }
            if (filtro.getCondicionInternet() != null) {
                sql.append(" ,").append(funcion).append("(pred_cond_int.num_pred_cond_internet,0)");
            }
            if (filtro.getCondicionTelefono() != null) {
                sql.append(" ,").append(funcion).append("(pred_cond_tel.num_pred_cond_tel,0)");
            }
        }
// FROM 
        sql.append(" from ind_auxiliar_indicador aux");
        sql.append(" inner join ind_auxiliar_consultas n on n.id_predio = aux.id_predio and n.periodo = aux.periodo and n.id_tnt = aux.id_tnt");
        if (filtro.isAgrupamientoPredio()) {
            //etnias
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ETNIAS_PREDIO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) etnias on etnias.id_predio = aux.id_predio");
            //servicios
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_SERVICIO_DISPONIBILIDAD_AGUA, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) servicios on servicios.id_predio = aux.id_predio");
        } else {
            String strSQLNivelAgrupamiento = this.getSQLNivelAgrupamiento(filtro);
            // indicadores numero predios con servicio agua
            sql.append(" left join (");
            String formula = this.consultarFormulaSQLIndicador(ParamIndicador.IND_SERVICIO_NUM_PREDIOS_DISPONIBILIDAD_AGUA, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo());
            formula = formula.replaceAll("\\?disp_servicio", "1");
            sql.append(formula);
            sql.append(String.format(" ) pred_disp_agua on pred_disp_agua.%1$s = n.%1$s", strSQLNivelAgrupamiento));
            sql.append(" and pred_disp_agua.periodo = aux.periodo and pred_disp_agua.id_tnt = aux.id_tnt");
            // indicadores numero predios con servicio energia electrica
            sql.append(" left join (");
            formula = this.consultarFormulaSQLIndicador(ParamIndicador.IND_SERVICIO_NUM_PREDIOS_DISPONIBILIDAD_ENERGIA_ELECTRICA, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo());
            formula = formula.replaceAll("\\?disp_servicio", "1");
            sql.append(formula);
            sql.append(String.format(" ) pred_disp_ene_elec on pred_disp_ene_elec.%1$s = n.%1$s", strSQLNivelAgrupamiento));
            sql.append(" and pred_disp_ene_elec.periodo = aux.periodo and pred_disp_ene_elec.id_tnt = aux.id_tnt");
            // indicadores numero predios con gas
            sql.append(" left join (");
            formula = this.consultarFormulaSQLIndicador(ParamIndicador.IND_SERVICIO_NUM_PREDIOS_DISPONIBILIDAD_GAS, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo());
            formula = formula.replaceAll("\\?disp_servicio", "1");
            sql.append(formula);
            sql.append(String.format(" ) pred_disp_gas on pred_disp_gas.%1$s = n.%1$s", strSQLNivelAgrupamiento));
            sql.append(" and pred_disp_gas.periodo = aux.periodo and pred_disp_gas.id_tnt = aux.id_tnt");
            // indicadores numero predios con servicio recolecion basuras
            sql.append(" left join (");
            formula = this.consultarFormulaSQLIndicador(ParamIndicador.IND_SERVICIO_NUM_PREDIOS_DISPONIBILIDAD_RECOLECCION_BASURAS, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo());
            formula = formula.replaceAll("\\?disp_servicio", "1");
            sql.append(formula);
            sql.append(String.format(" ) pred_disp_rec_bas on pred_disp_rec_bas.%1$s = n.%1$s", strSQLNivelAgrupamiento));
            sql.append(" and pred_disp_rec_bas.periodo = aux.periodo and pred_disp_rec_bas.id_tnt = aux.id_tnt");
            // indicadores numero predios con servicio sistema reciclaje
            sql.append(" left join (");
            formula = this.consultarFormulaSQLIndicador(ParamIndicador.IND_SERVICIO_NUM_PREDIOS_DISPONIBILIDAD_SISTEMA_RECICLAJE, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo());
            formula = formula.replaceAll("\\?disp_servicio", "1");
            sql.append(formula);
            sql.append(String.format(" ) pred_disp_sis_rec on pred_disp_sis_rec.%1$s = n.%1$s", strSQLNivelAgrupamiento));
            sql.append(" and pred_disp_sis_rec.periodo = aux.periodo and pred_disp_sis_rec.id_tnt = aux.id_tnt");
            // indicadores numero predios con servicio red alcantarillado
            sql.append(" left join (");
            formula = this.consultarFormulaSQLIndicador(ParamIndicador.IND_SERVICIO_NUM_PREDIOS_DISPONIBILIDAD_RED_ALCANTARILLADO, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo());
            formula = formula.replaceAll("\\?disp_servicio", "1");
            sql.append(formula);
            sql.append(String.format(" ) pred_disp_red_alc on pred_disp_red_alc.%1$s = n.%1$s", strSQLNivelAgrupamiento));
            sql.append(" and pred_disp_red_alc.periodo = aux.periodo and pred_disp_red_alc.id_tnt = aux.id_tnt");
            // indicadores numero predios con servicio red pluvial
            sql.append(" left join (");
            formula = this.consultarFormulaSQLIndicador(ParamIndicador.IND_SERVICIO_NUM_PREDIOS_DISPONIBILIDAD_RED_PLUVIAL, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo());
            formula = formula.replaceAll("\\?disp_servicio", "1");
            sql.append(formula);
            sql.append(String.format(" ) pred_disp_red_pluvial on pred_disp_red_pluvial.%1$s = n.%1$s", strSQLNivelAgrupamiento));
            sql.append(" and pred_disp_red_pluvial.periodo = aux.periodo and pred_disp_red_pluvial.id_tnt = aux.id_tnt");
            // indicadores numero predios con internet
            sql.append(" left join (");
            formula = this.consultarFormulaSQLIndicador(ParamIndicador.IND_SERVICIO_NUM_PREDIOS_DISPONIBILIDAD_INTERNET, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo());
            formula = formula.replaceAll("\\?disp_servicio", "1");
            sql.append(formula);
            sql.append(String.format(" ) pred_disp_internet on pred_disp_internet.%1$s = n.%1$s", strSQLNivelAgrupamiento));
            sql.append(" and pred_disp_internet.periodo = aux.periodo and pred_disp_internet.id_tnt = aux.id_tnt");
            // indicadores numero predios con telefono
            sql.append(" left join (");
            formula = this.consultarFormulaSQLIndicador(ParamIndicador.IND_SERVICIO_NUM_PREDIOS_DISPONIBILIDAD_TELEFONO, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo());
            formula = formula.replaceAll("\\?disp_servicio", "1");
            sql.append(formula);
            sql.append(String.format(" ) pred_disp_telefono on pred_disp_telefono.%1$s = n.%1$s", strSQLNivelAgrupamiento));
            sql.append(" and pred_disp_telefono.periodo = aux.periodo and pred_disp_telefono.id_tnt = aux.id_tnt");
            // indicadores numero predios con servicio por condicicion
            //agua
            if (filtro.getCondicionAgua() != null) {
                sql.append(" left join (");
                formula = this.consultarFormulaSQLIndicador(ParamIndicador.IND_SERVICIO_NUM_PREDIOS_CONDICION_AGUA, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo());
                formula = formula.replaceAll("\\?cond_servicio", filtro.getCondicionAgua().toString());
                sql.append(formula);
                sql.append(String.format(" ) pred_cond_agu on pred_cond_agu.%1$s = n.%1$s", strSQLNivelAgrupamiento));
                sql.append(" and pred_cond_agu.periodo = aux.periodo and pred_cond_agu.id_tnt = aux.id_tnt");
            }
            //energia
            if (filtro.getCondicionEnergia() != null) {
                sql.append(" left join (");
                formula = this.consultarFormulaSQLIndicador(ParamIndicador.IND_SERVICIO_NUM_PREDIOS_CONDICION_ENERGIA_ELECTRICA, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo());
                formula = formula.replaceAll("\\?cond_servicio", filtro.getCondicionEnergia().toString());
                sql.append(formula);
                sql.append(String.format(" ) pred_cond_ele on pred_cond_ele.%1$s = n.%1$s", strSQLNivelAgrupamiento));
                sql.append(" and pred_cond_ele.periodo = aux.periodo and pred_cond_ele.id_tnt = aux.id_tnt");
            }
            //gas
            if (filtro.getCondicionGas() != null) {
                sql.append(" left join (");
                formula = this.consultarFormulaSQLIndicador(ParamIndicador.IND_SERVICIO_NUM_PREDIOS_CONDICION_GAS, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo());
                formula = formula.replaceAll("\\?cond_servicio", filtro.getCondicionGas().toString());
                sql.append(formula);
                sql.append(String.format(" ) pred_cond_gas on pred_cond_gas.%1$s = n.%1$s", strSQLNivelAgrupamiento));
                sql.append(" and pred_cond_gas.periodo = aux.periodo and pred_cond_gas.id_tnt = aux.id_tnt");
            }
            // basuras
            if (filtro.getCondicionBasuras() != null) {
                sql.append(" left join (");
                formula = this.consultarFormulaSQLIndicador(ParamIndicador.IND_SERVICIO_NUM_PREDIOS_CONDICION_RECOLECCION_BASURAS, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo());
                formula = formula.replaceAll("\\?cond_servicio", filtro.getCondicionBasuras().toString());
                sql.append(formula);
                sql.append(String.format(" ) pred_cond_bas on pred_cond_bas.%1$s = n.%1$s", strSQLNivelAgrupamiento));
                sql.append(" and pred_cond_bas.periodo = aux.periodo and pred_cond_bas.id_tnt = aux.id_tnt");
            }
            //reciclaje
            if (filtro.getCondicionReciclaje() != null) {
                sql.append(" left join (");
                formula = this.consultarFormulaSQLIndicador(ParamIndicador.IND_SERVICIO_NUM_PREDIOS_CONDICION_SISTEMA_RECICLAJE, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo());
                formula = formula.replaceAll("\\?cond_servicio", filtro.getCondicionReciclaje().toString());
                sql.append(formula);
                sql.append(String.format(" ) pred_cond_rec on pred_cond_rec.%1$s = n.%1$s", strSQLNivelAgrupamiento));
                sql.append(" and pred_cond_rec.periodo = aux.periodo and pred_cond_rec.id_tnt = aux.id_tnt");
            }
            //alcantarrillado
            if (filtro.getCondicionAlcantarillado() != null) {
                sql.append(" left join (");
                formula = this.consultarFormulaSQLIndicador(ParamIndicador.IND_SERVICIO_NUM_PREDIOS_CONDICION_RED_ALCANTARILLADO, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo());
                formula = formula.replaceAll("\\?cond_servicio", filtro.getCondicionAlcantarillado().toString());
                sql.append(formula);
                sql.append(String.format(" ) pred_cond_alc on pred_cond_alc.%1$s = n.%1$s", strSQLNivelAgrupamiento));
                sql.append(" and pred_cond_alc.periodo = aux.periodo and pred_cond_alc.id_tnt = aux.id_tnt");
            }
            //pluvial
            if (filtro.getCondicionPluvial() != null) {
                sql.append(" left join (");
                formula = this.consultarFormulaSQLIndicador(ParamIndicador.IND_SERVICIO_NUM_PREDIOS_CONDICION_RED_PLUVIAL, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo());
                formula = formula.replaceAll("\\?cond_servicio", filtro.getCondicionPluvial().toString());
                sql.append(formula);
                sql.append(String.format(" ) pred_cond_plu on pred_cond_plu.%1$s = n.%1$s", strSQLNivelAgrupamiento));
                sql.append(" and pred_cond_plu.periodo = aux.periodo and pred_cond_plu.id_tnt = aux.id_tnt");
            }
            // internet
            if (filtro.getCondicionInternet() != null) {
                sql.append(" left join (");
                formula = this.consultarFormulaSQLIndicador(ParamIndicador.IND_SERVICIO_NUM_PREDIOS_CONDICION_INTERNET, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo());
                formula = formula.replaceAll("\\?cond_servicio", filtro.getCondicionInternet().toString());
                sql.append(formula);
                sql.append(String.format(" ) pred_cond_int on pred_cond_int.%1$s = n.%1$s", strSQLNivelAgrupamiento));
                sql.append(" and pred_cond_int.periodo = aux.periodo and pred_cond_int.id_tnt = aux.id_tnt");
            }
            //telefono
            if (filtro.getCondicionTelefono() != null) {
                sql.append(" left join (");
                formula = this.consultarFormulaSQLIndicador(ParamIndicador.IND_SERVICIO_NUM_PREDIOS_CONDICION_TELEFONO, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo());
                formula = formula.replaceAll("\\?cond_servicio", filtro.getCondicionTelefono().toString());
                sql.append(formula);
                sql.append(String.format(" ) pred_cond_tel on pred_cond_tel.%1$s = n.%1$s", strSQLNivelAgrupamiento));
                sql.append(" and pred_cond_tel.periodo = aux.periodo and pred_cond_tel.id_tnt = aux.id_tnt");
            }
        }
// WHERE
        sql.append(" where aux.id_tnt = ?id_tnt and aux.periodo = ?periodo");
        if (filtro.isAgrupamientoPredio()) {
            sql.append(" and n.principal_establecimiento = 1");
        }
        if (filtro.getIdNivel0() != null) {
            sql.append(" and n.id_nivel0 = ?id_nivel0");
        }
        if (filtro.getIdNivel1() != null) {
            sql.append(" and n.id_nivel1 = ?id_nivel1");
        }
        if (filtro.getIdNivel2() != null) {
            sql.append(" and n.id_nivel2 = ?id_nivel2");
        }
        if (filtro.getIdNivel3() != null) {
            sql.append(" and n.id_nivel3 = ?id_nivel3");
        }
        if (filtro.getIdNivel4() != null) {
            sql.append(" and n.id_nivel4 = ?id_nivel4");
        }
        if (filtro.getIdNivel5() != null) {
            sql.append(" and n.id_nivel5 = ?id_nivel5");
        }
        if (filtro.getIdEstablecimiento() != null) {
            sql.append(" and n.id_establecimiento = ?id_establecimiento");
        }
        if (filtro.getIdSede() != null) {
            sql.append(" and n.id_sede = ?id_sede");
        }
        if (filtro.getIdPredio() != null) {
            sql.append(" and n.id_predio = ?id_predio");
        }
        // otros filtros
        if (filtro.getCodZona() != null) {
            sql.append(" and n.codigo_zona = ?cod_zona");
        }
        if (filtro.getCodSector() != null) {
            sql.append(" and n.codigo_sector = ?cod_sector");
        }
        // ORDER BY 
        sql.append(" ORDER by ");
        sql.append(orden.toString());

        String auxSql = sql.toString();
        if (ParamBaseDatos.POSTGRE.equals(UtilProperties.getDbMotor())) {
            auxSql = auxSql.replaceAll("\\?start", "");
            auxSql = auxSql.replaceAll("\\?end", "");
        }

        Query query = tpm.getEm().createNativeQuery(auxSql);
        query.setParameter("id_tnt", tpm.getCurrentTenant());
        query.setParameter("periodo", filtro.getPeriodo());
        query.setParameter("idioma", filtro.getIdioma());
        query.setParameter("id_nivel0", filtro.getIdNivel0());
        if (filtro.getIdNivel1() != null) {
            query.setParameter("id_nivel1", filtro.getIdNivel1());
        }
        if (filtro.getIdNivel2() != null) {
            query.setParameter("id_nivel2", filtro.getIdNivel2());
        }
        if (filtro.getIdNivel3() != null) {
            query.setParameter("id_nivel3", filtro.getIdNivel3());
        }
        if (filtro.getIdNivel4() != null) {
            query.setParameter("id_nivel4", filtro.getIdNivel4());
        }
        if (filtro.getIdNivel5() != null) {
            query.setParameter("id_nivel5", filtro.getIdNivel5());
        }
        if (filtro.getIdEstablecimiento() != null) {
            query.setParameter("id_establecimiento", filtro.getIdEstablecimiento());
        }
        if (filtro.getIdSede() != null) {
            query.setParameter("id_sede", filtro.getIdSede());
        }
        if (filtro.getIdPredio() != null) {
            query.setParameter("id_predio", filtro.getIdPredio());
        }
        // otros filtros
        if (filtro.getCodZona() != null) {
            query.setParameter("cod_zona", filtro.getCodZona());
        }
        if (filtro.getCodSector() != null) {
            query.setParameter("cod_sector", filtro.getCodSector());
        }
        return query.getResultList();
    }

    private List<Object[]> consultarServicioConsolidadoIndicadores(FiltroAmbitoServicioConsolidado filtro) {
        StringBuilder sql = new StringBuilder();
        StringBuilder orden = new StringBuilder();
        sql.append(" select distinct ");
        if (filtro.isAgrupamientoPredio()) {
            orden.append(" n.codigo_nivel1,n.nombre_nivel1");
            orden.append(",n.codigo_nivel2,n.nombre_nivel2");
            orden.append(",n.codigo_nivel3,n.nombre_nivel3");
            orden.append(",n.codigo_nivel4,n.nombre_nivel4");
            orden.append(",n.codigo_nivel5,n.nombre_nivel5");
            orden.append(" ,n.codigo_establecimiento, n.nombre_establecimiento");
            orden.append(" ,n.codigo_sede, n.nombre_sede");
            orden.append(" ,n.codigo_predio, n.nombre_predio");
            //otros
            orden.append(" ,n.direccion_predio, n.propiedad_predio");
            orden.append(" ,n.nombre_zona, n.nombre_sector, n.nombre_clima");
            sql.append(orden.toString());
            //etnias
            sql.append(" ,etnias.valor etnias");
            //indicadores disponiblilidad
            sql.append(" ,disp_agu.valor disponibilidad_agua");
            sql.append(" ,disp_ene.valor disp_energia_electrica");
            sql.append(" ,disp_gas.valor disponibilidad_gas");
            sql.append(" ,disp_bas.valor disp_recoleccion_basuras");
            sql.append(" ,disp_rec.valor dispo_sistema_reciclaje");
            sql.append(" ,disp_alc.valor disp_red_alcantarillado");
            sql.append(" ,disp_plu.valor disponibilidad_red_pluvial");
            sql.append(" ,disp_int.valor disponibilidad_internet");
            sql.append(" ,disp_tel.valor disponibilidad_telefono");
            // indicadores condicicion            
            sql.append(" ,cond_agu.valor condicion_agua");
            sql.append(" ,cond_ene.valor condicion_energia_electrica");
            sql.append(" ,cond_gas.valor condicion_gas");
            sql.append(" ,cond_bas.valor condicion_recoleccion_basuras");
            sql.append(" ,cond_rec.valor cond_sistema_reciclaje");
            sql.append(" ,cond_alc.valor condicion_red_alcantarillado");
            sql.append(" ,cond_plu.valor condicion_red_pluvial");
            sql.append(" ,cond_int.valor condicion_internet");
            sql.append(" ,cond_tel.valor condicion_telefono");
        } else {
            if (filtro.isAgrupamientoNivel0()) {
                orden.append(" n.nombre_nivel0");
            }
            if (filtro.isAgrupamientoNivel1()) {
                orden.append(" n.codigo_nivel1,n.nombre_nivel1");
            }
            if (filtro.isAgrupamientoNivel2()) {
                orden.append("n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
            }
            if (filtro.isAgrupamientoNivel3()) {
                orden.append("n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
            }
            if (filtro.isAgrupamientoNivel4()) {
                orden.append("n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
                orden.append(",n.codigo_nivel4,n.nombre_nivel4");
            }
            if (filtro.isAgrupamientoNivel5()) {
                orden.append("n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
                orden.append(",n.codigo_nivel4,n.nombre_nivel4");
                orden.append(",n.codigo_nivel5,n.nombre_nivel5");
            }
            if (filtro.isAgrupamientoEstablecimiento()) {
                orden.append(" n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
                orden.append(",n.codigo_nivel4,n.nombre_nivel4");
                orden.append(",n.codigo_nivel5,n.nombre_nivel5");
                orden.append(", n.codigo_establecimiento, n.nombre_establecimiento");
            }
            if (filtro.isAgrupamientoSede()) {
                orden.append(" n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
                orden.append(",n.codigo_nivel4,n.nombre_nivel4");
                orden.append(",n.codigo_nivel5,n.nombre_nivel5");
                orden.append(", n.codigo_establecimiento, n.nombre_establecimiento");
                orden.append(", n.codigo_sede, n.nombre_sede");
            }
            sql.append(orden.toString());
            // indicadores numero predios con disponibilidad de servicio
            sql.append(" ,coalesce(pred_disp_agu.valor,'0') num_pred_disp_agua");
            sql.append(" ,coalesce(pred_disp_ene.valor,'0') num_pred_disp_energia_elect");
            sql.append(" ,coalesce(pred_disp_gas.valor,'0') num_pred_disp_gas");
            sql.append(" ,coalesce(pred_disp_bas.valor,'0') num_pred_disp_rec_basuras");
            sql.append(" ,coalesce(pred_disp_rec.valor,'0') num_pred_disp_sis_reciclaje");
            sql.append(" ,coalesce(pred_disp_alc.valor,'0') num_pred_disp_red_alcan");
            sql.append(" ,coalesce(pred_disp_plu.valor,'0') num_pred_disp_red_pluvial");
            sql.append(" ,coalesce(pred_disp_int.valor,'0') num_pred_disp_internet");
            sql.append(" ,coalesce(pred_disp_tel.valor,'0') num_pred_disp_telefono");
            // indicadores numero predios con condicion de servicio
            if (filtro.getCondicionAgua() != null) {
                sql.append(" ,coalesce(pred_cond_agu.valor,'0') num_predios_cond_agua");
            }
            if (filtro.getCondicionEnergia() != null) {
                sql.append(" ,coalesce(pred_cond_ene.valor,'0') num_pred_cond_ene_elect");
            }
            if (filtro.getCondicionGas() != null) {
                sql.append(" ,coalesce(pred_cond_gas.valor,'0') num_predios_cond_gas");
            }
            if (filtro.getCondicionBasuras() != null) {
                sql.append(" ,coalesce(pred_cond_bas.valor,'0') num_pred_cond_rec_basuras");
            }
            if (filtro.getCondicionReciclaje() != null) {
                sql.append(" ,coalesce(pred_cond_rec.valor,'0') num_pred_cond_sis_rec");
            }
            if (filtro.getCondicionAlcantarillado() != null) {
                sql.append(" ,coalesce(pred_cond_alc.valor,'0') num_pred_cond_red_alca");
            }
            if (filtro.getCondicionPluvial() != null) {
                sql.append(" ,coalesce(pred_cond_plu.valor,'0') num_pred_cond_red_pluvial");
            }
            if (filtro.getCondicionInternet() != null) {
                sql.append(" ,coalesce(pred_cond_int.valor,'0') num_pred_cond_internet");
            }
            if (filtro.getCondicionTelefono() != null) {
                sql.append(" ,coalesce(pred_cond_tel.valor,'0') num_pred_cond_telefono");
            }
        }
// FROM 
        sql.append(" from ind_auxiliar_indicador aux");
        sql.append(" inner join ind_auxiliar_consultas n on n.id_predio = aux.id_predio and n.periodo = aux.periodo and n.id_tnt = aux.id_tnt");
        String strSQLNivelAgrupamiento = this.getSQLNivelAgrupamiento(filtro);
        String strSQLConsultarIndicador = this.getSQLConsultarIndicadorAlmacenado();
        if (filtro.isAgrupamientoPredio()) {
            //etnias del predio
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) etnias on etnias.id_tnt = aux.id_tnt and etnias.periodo = aux.periodo");
            sql.append(String.format(" and etnias.cod_indicador = '%s'", ParamIndicador.IND_ETNIAS_PREDIO));
            sql.append(" and etnias.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and etnias.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            // disponibilidad_agua           
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) disp_agu on disp_agu.id_tnt = aux.id_tnt and disp_agu.periodo = aux.periodo");
            sql.append(String.format(" and disp_agu.cod_indicador = '%s'", ParamIndicador.IND_SERVICIO_DISPONIBILIDAD_AGUA));
            sql.append(" and disp_agu.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and disp_agu.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            // disp_energia_electrica     
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) disp_ene on disp_ene.id_tnt = aux.id_tnt and disp_ene.periodo = aux.periodo");
            sql.append(String.format(" and disp_ene.cod_indicador = '%s'", ParamIndicador.IND_SERVICIO_DISPONIBILIDAD_ENERGIA_ELECTRICA));
            sql.append(" and disp_ene.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and disp_ene.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            // disponibilidad_gas
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) disp_gas on disp_gas.id_tnt = aux.id_tnt and disp_gas.periodo = aux.periodo");
            sql.append(String.format(" and disp_gas.cod_indicador = '%s'", ParamIndicador.IND_SERVICIO_DISPONIBILIDAD_GAS));
            sql.append(" and disp_gas.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and disp_gas.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            // disponibilidad_recoleccion_basuras       
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) disp_bas on disp_bas.id_tnt = aux.id_tnt and disp_bas.periodo = aux.periodo");
            sql.append(String.format(" and disp_bas.cod_indicador = '%s'", ParamIndicador.IND_SERVICIO_DISPONIBILIDAD_RECOLECCION_BASURAS));
            sql.append(" and disp_bas.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and disp_bas.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            // dispo_sistema_reciclaje    
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) disp_rec on disp_rec.id_tnt = aux.id_tnt and disp_rec.periodo = aux.periodo");
            sql.append(String.format(" and disp_rec.cod_indicador = '%s'", ParamIndicador.IND_SERVICIO_DISPONIBILIDAD_SISTEMA_RECICLAJE));
            sql.append(" and disp_rec.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and disp_rec.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            // disp_red_alcantarillado 
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) disp_alc on disp_alc.id_tnt = aux.id_tnt and disp_alc.periodo = aux.periodo");
            sql.append(String.format(" and disp_alc.cod_indicador = '%s'", ParamIndicador.IND_SERVICIO_DISPONIBILIDAD_RED_ALCANTARILLADO));
            sql.append(" and disp_alc.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and disp_alc.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            // disponibilidad_red_pluvial
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) disp_plu on disp_plu.id_tnt = aux.id_tnt and disp_plu.periodo = aux.periodo");
            sql.append(String.format(" and disp_plu.cod_indicador = '%s'", ParamIndicador.IND_SERVICIO_DISPONIBILIDAD_RED_PLUVIAL));
            sql.append(" and disp_plu.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and disp_plu.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            // disponibilidad_internet      
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) disp_int on disp_int.id_tnt = aux.id_tnt and disp_int.periodo = aux.periodo");
            sql.append(String.format(" and disp_int.cod_indicador = '%s'", ParamIndicador.IND_SERVICIO_DISPONIBILIDAD_INTERNET));
            sql.append(" and disp_int.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and disp_int.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            // disponibilidad_telefono
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) disp_tel on disp_tel.id_tnt = aux.id_tnt and disp_tel.periodo = aux.periodo");
            sql.append(String.format(" and disp_tel.cod_indicador = '%s'", ParamIndicador.IND_SERVICIO_DISPONIBILIDAD_TELEFONO));
            sql.append(" and disp_tel.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and disp_tel.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            // condicion_agua           
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) cond_agu on cond_agu.id_tnt = aux.id_tnt and cond_agu.periodo = aux.periodo");
            sql.append(String.format(" and cond_agu.cod_indicador = '%s'", ParamIndicador.IND_SERVICIO_CONDICION_AGUA));
            sql.append(" and cond_agu.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and cond_agu.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            // condicion_energia_electrica     
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) cond_ene on cond_ene.id_tnt = aux.id_tnt and cond_ene.periodo = aux.periodo");
            sql.append(String.format(" and cond_ene.cod_indicador = '%s'", ParamIndicador.IND_SERVICIO_CONDICION_ENERGIA_ELECTRICA));
            sql.append(" and cond_ene.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and cond_ene.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            // condicion_gas
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) cond_gas on cond_gas.id_tnt = aux.id_tnt and cond_gas.periodo = aux.periodo");
            sql.append(String.format(" and cond_gas.cod_indicador = '%s'", ParamIndicador.IND_SERVICIO_CONDICION_GAS));
            sql.append(" and cond_gas.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and cond_gas.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            // condicion_recoleccion_basuras       
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) cond_bas on cond_bas.id_tnt = aux.id_tnt and cond_bas.periodo = aux.periodo");
            sql.append(String.format(" and cond_bas.cod_indicador = '%s'", ParamIndicador.IND_SERVICIO_CONDICION_RECOLECCION_BASURAS));
            sql.append(" and cond_bas.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and cond_bas.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            // cond_sistema_reciclaje    
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) cond_rec on cond_rec.id_tnt = aux.id_tnt and cond_rec.periodo = aux.periodo");
            sql.append(String.format(" and cond_rec.cod_indicador = '%s'", ParamIndicador.IND_SERVICIO_CONDICION_SISTEMA_RECICLAJE));
            sql.append(" and cond_rec.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and cond_rec.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            // condicion_red_alcantarillado 
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) cond_alc on cond_alc.id_tnt = aux.id_tnt and cond_alc.periodo = aux.periodo");
            sql.append(String.format(" and cond_alc.cod_indicador = '%s'", ParamIndicador.IND_SERVICIO_CONDICION_RED_ALCANTARILLADO));
            sql.append(" and cond_alc.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and cond_alc.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            // condicion_red_pluvial
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) cond_plu on cond_plu.id_tnt = aux.id_tnt and cond_plu.periodo = aux.periodo");
            sql.append(String.format(" and cond_plu.cod_indicador = '%s'", ParamIndicador.IND_SERVICIO_CONDICION_RED_PLUVIAL));
            sql.append(" and cond_plu.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and cond_plu.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            // condicion_internet      
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) cond_int on cond_int.id_tnt = aux.id_tnt and cond_int.periodo = aux.periodo");
            sql.append(String.format(" and cond_int.cod_indicador = '%s'", ParamIndicador.IND_SERVICIO_CONDICION_INTERNET));
            sql.append(" and cond_int.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and cond_int.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            // condicion_telefono
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) cond_tel on cond_tel.id_tnt = aux.id_tnt and cond_tel.periodo = aux.periodo");
            sql.append(String.format(" and cond_tel.cod_indicador = '%s'", ParamIndicador.IND_SERVICIO_CONDICION_TELEFONO));
            sql.append(" and cond_tel.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and cond_tel.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
        } else {
            // disponibilidad_agua           
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) pred_disp_agu on pred_disp_agu.id_tnt = aux.id_tnt and pred_disp_agu.periodo = aux.periodo");
            sql.append(String.format(" and pred_disp_agu.cod_indicador = '%s'", ParamIndicador.IND_SERVICIO_NUM_PREDIOS_DISPONIBILIDAD_AGUA));
            sql.append(" and pred_disp_agu.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and pred_disp_agu.cod_valor = 'SI'");
            sql.append(" and pred_disp_agu.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            // disp_energia_electrica     
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) pred_disp_ene on pred_disp_ene.id_tnt = aux.id_tnt and pred_disp_ene.periodo = aux.periodo");
            sql.append(String.format(" and pred_disp_ene.cod_indicador = '%s'", ParamIndicador.IND_SERVICIO_NUM_PREDIOS_DISPONIBILIDAD_ENERGIA_ELECTRICA));
            sql.append(" and pred_disp_ene.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and pred_disp_ene.cod_valor = 'SI'");
            sql.append(" and pred_disp_ene.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            // disponibilidad_gas
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) pred_disp_gas on pred_disp_gas.id_tnt = aux.id_tnt and pred_disp_gas.periodo = aux.periodo");
            sql.append(String.format(" and pred_disp_gas.cod_indicador = '%s'", ParamIndicador.IND_SERVICIO_NUM_PREDIOS_DISPONIBILIDAD_GAS));
            sql.append(" and pred_disp_gas.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and pred_disp_gas.cod_valor = 'SI'");
            sql.append(" and pred_disp_gas.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            // disponibilidad_recoleccion_basuras       
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) pred_disp_bas on pred_disp_bas.id_tnt = aux.id_tnt and pred_disp_bas.periodo = aux.periodo");
            sql.append(String.format(" and pred_disp_bas.cod_indicador = '%s'", ParamIndicador.IND_SERVICIO_NUM_PREDIOS_DISPONIBILIDAD_RECOLECCION_BASURAS));
            sql.append(" and pred_disp_bas.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and pred_disp_bas.cod_valor = 'SI'");
            sql.append(" and pred_disp_bas.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            // dispo_sistema_reciclaje    
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) pred_disp_rec on pred_disp_rec.id_tnt = aux.id_tnt and pred_disp_rec.periodo = aux.periodo");
            sql.append(String.format(" and pred_disp_rec.cod_indicador = '%s'", ParamIndicador.IND_SERVICIO_NUM_PREDIOS_DISPONIBILIDAD_SISTEMA_RECICLAJE));
            sql.append(" and pred_disp_rec.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and pred_disp_rec.cod_valor = 'SI'");
            sql.append(" and pred_disp_rec.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            // disp_red_alcantarillado 
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) pred_disp_alc on pred_disp_alc.id_tnt = aux.id_tnt and pred_disp_alc.periodo = aux.periodo");
            sql.append(String.format(" and pred_disp_alc.cod_indicador = '%s'", ParamIndicador.IND_SERVICIO_NUM_PREDIOS_DISPONIBILIDAD_RED_ALCANTARILLADO));
            sql.append(" and pred_disp_alc.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and pred_disp_alc.cod_valor = 'SI'");
            sql.append(" and pred_disp_alc.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            // disponibilidad_red_pluvial
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) pred_disp_plu on pred_disp_plu.id_tnt = aux.id_tnt and pred_disp_plu.periodo = aux.periodo");
            sql.append(String.format(" and pred_disp_plu.cod_indicador = '%s'", ParamIndicador.IND_SERVICIO_NUM_PREDIOS_DISPONIBILIDAD_RED_PLUVIAL));
            sql.append(" and pred_disp_plu.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and pred_disp_plu.cod_valor = 'SI'");
            sql.append(" and pred_disp_plu.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            // disponibilidad_internet      
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) pred_disp_int on pred_disp_int.id_tnt = aux.id_tnt and pred_disp_int.periodo = aux.periodo");
            sql.append(String.format(" and pred_disp_int.cod_indicador = '%s'", ParamIndicador.IND_SERVICIO_NUM_PREDIOS_DISPONIBILIDAD_INTERNET));
            sql.append(" and pred_disp_int.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and pred_disp_int.cod_valor = 'SI'");
            sql.append(" and pred_disp_int.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            // disponibilidad_telefono
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) pred_disp_tel on pred_disp_tel.id_tnt = aux.id_tnt and pred_disp_tel.periodo = aux.periodo");
            sql.append(String.format(" and pred_disp_tel.cod_indicador = '%s'", ParamIndicador.IND_SERVICIO_NUM_PREDIOS_DISPONIBILIDAD_TELEFONO));
            sql.append(" and pred_disp_tel.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and pred_disp_tel.cod_valor = 'SI'");
            sql.append(" and pred_disp_tel.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            // CONDICION DISP
            // condicion_agua    
            if (filtro.getCondicionAgua() != null) {
                sql.append(" left join (");
                sql.append(strSQLConsultarIndicador);
                sql.append(" ) pred_cond_agu on pred_cond_agu.id_tnt = aux.id_tnt and pred_cond_agu.periodo = aux.periodo");
                sql.append(String.format(" and pred_cond_agu.cod_indicador = '%s'", ParamIndicador.IND_SERVICIO_NUM_PREDIOS_CONDICION_AGUA));
                sql.append(" and pred_cond_agu.nivel_agrupamiento = ?nivel_agrupamiento");
                sql.append(" and pred_cond_agu.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
                sql.append(String.format(" and pred_cond_agu.cod_valor = '%s'", filtro.getCondicionAgua()));
            }
            // condicion_energia_electrica   
            if (filtro.getCondicionEnergia() != null) {
                sql.append(" left join (");
                sql.append(strSQLConsultarIndicador);
                sql.append(" ) pred_cond_ene on pred_cond_ene.id_tnt = aux.id_tnt and pred_cond_ene.periodo = aux.periodo");
                sql.append(String.format(" and pred_cond_ene.cod_indicador = '%s'", ParamIndicador.IND_SERVICIO_NUM_PREDIOS_CONDICION_ENERGIA_ELECTRICA));
                sql.append(" and pred_cond_ene.nivel_agrupamiento = ?nivel_agrupamiento");
                sql.append(" and pred_cond_ene.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
                sql.append(String.format(" and pred_cond_ene.cod_valor = '%s'", filtro.getCondicionEnergia()));
            }
            // condicion_gas
            if (filtro.getCondicionGas() != null) {
                sql.append(" left join (");
                sql.append(strSQLConsultarIndicador);
                sql.append(" ) pred_cond_gas on pred_cond_gas.id_tnt = aux.id_tnt and pred_cond_gas.periodo = aux.periodo");
                sql.append(String.format(" and pred_cond_gas.cod_indicador = '%s'", ParamIndicador.IND_SERVICIO_NUM_PREDIOS_CONDICION_GAS));
                sql.append(" and pred_cond_gas.nivel_agrupamiento = ?nivel_agrupamiento");
                sql.append(" and pred_cond_gas.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
                sql.append(String.format(" and pred_cond_gas.cod_valor = '%s'", filtro.getCondicionGas()));
            }
            // condicion_recoleccion_basuras  
            if (filtro.getCondicionBasuras() != null) {
                sql.append(" left join (");
                sql.append(strSQLConsultarIndicador);
                sql.append(" ) pred_cond_bas on pred_cond_bas.id_tnt = aux.id_tnt and pred_cond_bas.periodo = aux.periodo");
                sql.append(String.format(" and pred_cond_bas.cod_indicador = '%s'", ParamIndicador.IND_SERVICIO_NUM_PREDIOS_CONDICION_RECOLECCION_BASURAS));
                sql.append(" and pred_cond_bas.nivel_agrupamiento = ?nivel_agrupamiento");
                sql.append(" and pred_cond_bas.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
                sql.append(String.format(" and pred_cond_bas.cod_valor = '%s'", filtro.getCondicionBasuras()));
            }
            // cond_sistema_reciclaje    
            if (filtro.getCondicionReciclaje() != null) {
                sql.append(" left join (");
                sql.append(strSQLConsultarIndicador);
                sql.append(" ) pred_cond_rec on pred_cond_rec.id_tnt = aux.id_tnt and pred_cond_rec.periodo = aux.periodo");
                sql.append(String.format(" and pred_cond_rec.cod_indicador = '%s'", ParamIndicador.IND_SERVICIO_NUM_PREDIOS_CONDICION_SISTEMA_RECICLAJE));
                sql.append(" and pred_cond_rec.nivel_agrupamiento = ?nivel_agrupamiento");
                sql.append(" and pred_cond_rec.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
                sql.append(String.format(" and pred_cond_rec.cod_valor = '%s'", filtro.getCondicionReciclaje()));
            }
            // condicion_red_alcantarillado 
            if (filtro.getCondicionAlcantarillado() != null) {
                sql.append(" left join (");
                sql.append(strSQLConsultarIndicador);
                sql.append(" ) pred_cond_alc on pred_cond_alc.id_tnt = aux.id_tnt and pred_cond_alc.periodo = aux.periodo");
                sql.append(String.format(" and pred_cond_alc.cod_indicador = '%s'", ParamIndicador.IND_SERVICIO_NUM_PREDIOS_CONDICION_RED_ALCANTARILLADO));
                sql.append(" and pred_cond_alc.nivel_agrupamiento = ?nivel_agrupamiento");
                sql.append(" and pred_cond_alc.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
                sql.append(String.format(" and pred_cond_alc.cod_valor = '%s'", filtro.getCondicionAlcantarillado()));
            }
            // condicion_red_pluvial
            if (filtro.getCondicionPluvial() != null) {
                sql.append(" left join (");
                sql.append(strSQLConsultarIndicador);
                sql.append(" ) pred_cond_plu on pred_cond_plu.id_tnt = aux.id_tnt and pred_cond_plu.periodo = aux.periodo");
                sql.append(String.format(" and pred_cond_plu.cod_indicador = '%s'", ParamIndicador.IND_SERVICIO_NUM_PREDIOS_CONDICION_RED_PLUVIAL));
                sql.append(" and pred_cond_plu.nivel_agrupamiento = ?nivel_agrupamiento");
                sql.append(" and pred_cond_plu.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
                sql.append(String.format(" and pred_cond_plu.cod_valor = '%s'", filtro.getCondicionPluvial()));
            }
            // condicion_internet
            if (filtro.getCondicionInternet() != null) {
                sql.append(" left join (");
                sql.append(strSQLConsultarIndicador);
                sql.append(" ) pred_cond_int on pred_cond_int.id_tnt = aux.id_tnt and pred_cond_int.periodo = aux.periodo");
                sql.append(String.format(" and pred_cond_int.cod_indicador = '%s'", ParamIndicador.IND_SERVICIO_NUM_PREDIOS_CONDICION_INTERNET));
                sql.append(" and pred_cond_int.nivel_agrupamiento = ?nivel_agrupamiento");
                sql.append(" and pred_cond_int.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
                sql.append(String.format(" and pred_cond_int.cod_valor = '%s'", filtro.getCondicionInternet()));
            }
            // condicion_telefono
            if (filtro.getCondicionTelefono() != null) {
                sql.append(" left join (");
                sql.append(strSQLConsultarIndicador);
                sql.append(" ) pred_cond_tel on pred_cond_tel.id_tnt = aux.id_tnt and pred_cond_tel.periodo = aux.periodo");
                sql.append(String.format(" and pred_cond_tel.cod_indicador = '%s'", ParamIndicador.IND_SERVICIO_NUM_PREDIOS_CONDICION_TELEFONO));
                sql.append(" and pred_cond_tel.nivel_agrupamiento = ?nivel_agrupamiento");
                sql.append(" and pred_cond_tel.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
                sql.append(String.format(" and pred_cond_tel.cod_valor = '%s'", filtro.getCondicionTelefono()));
            }
        }
// WHERE
        sql.append(" where aux.id_tnt = ?id_tnt and aux.periodo = ?periodo");
        if (filtro.isAgrupamientoPredio()) {
            sql.append(" and n.principal_establecimiento = 1");
        }
        if (filtro.getIdNivel0() != null) {
            sql.append(" and n.id_nivel0 = ?id_nivel0");
        }
        if (filtro.getIdNivel1() != null) {
            sql.append(" and n.id_nivel1 = ?id_nivel1");
        }
        if (filtro.getIdNivel2() != null) {
            sql.append(" and n.id_nivel2 = ?id_nivel2");
        }
        if (filtro.getIdNivel3() != null) {
            sql.append(" and n.id_nivel3 = ?id_nivel3");
        }
        if (filtro.getIdNivel4() != null) {
            sql.append(" and n.id_nivel4 = ?id_nivel4");
        }
        if (filtro.getIdNivel5() != null) {
            sql.append(" and n.id_nivel5 = ?id_nivel5");
        }
        if (filtro.getIdEstablecimiento() != null) {
            sql.append(" and n.id_establecimiento = ?id_establecimiento");
        }
        if (filtro.getIdSede() != null) {
            sql.append(" and n.id_sede = ?id_sede");
        }
        if (filtro.getIdPredio() != null) {
            sql.append(" and n.id_predio = ?id_predio");
        }
        // ORDER BY 
        sql.append(" ORDER by ");
        sql.append(orden.toString());

        Query query = tpm.getEm().createNativeQuery(sql.toString());
        query.setParameter("id_tnt", tpm.getCurrentTenant());
        query.setParameter("periodo", filtro.getPeriodo());
        query.setParameter("idioma", filtro.getIdioma());
        query.setParameter("id_nivel0", filtro.getIdNivel0());
        query.setParameter("nivel_agrupamiento", filtro.getAgrupamiento());
        if (filtro.getIdNivel1() != null) {
            query.setParameter("id_nivel1", filtro.getIdNivel1());
        }
        if (filtro.getIdNivel2() != null) {
            query.setParameter("id_nivel2", filtro.getIdNivel2());
        }
        if (filtro.getIdNivel3() != null) {
            query.setParameter("id_nivel3", filtro.getIdNivel3());
        }
        if (filtro.getIdNivel4() != null) {
            query.setParameter("id_nivel4", filtro.getIdNivel4());
        }
        if (filtro.getIdNivel5() != null) {
            query.setParameter("id_nivel5", filtro.getIdNivel5());
        }
        if (filtro.getIdEstablecimiento() != null) {
            query.setParameter("id_establecimiento", filtro.getIdEstablecimiento());
        }
        if (filtro.getIdSede() != null) {
            query.setParameter("id_sede", filtro.getIdSede());
        }
        if (filtro.getIdPredio() != null) {
            query.setParameter("id_predio", filtro.getIdPredio());
        }
        return query.getResultList();
    }

    @Override
    public List<Object[]> consultarConfort(FiltroAmbitoConfort filtro) {
        if (filtro.isConsultaDeTiempoReal()) {
            return this.consultarConfortTiempoReal(filtro);
        } else {
            return this.consultarConfortIndicadores(filtro);
        }
    }

    private List<Object[]> consultarConfortTiempoReal(FiltroAmbitoConfort filtro) {
        String codInstrumento = this.consultarCodInstrumentoPorPeriodo(filtro.getPeriodo());
        StringBuilder sql = new StringBuilder();
        StringBuilder agrupamiento = new StringBuilder();
//SELECT
        sql.append(" select ");
        if (filtro.isAgrupamientoPredio()) {
            sql.append(" distinct ");
            sql.append(" n.codigo_nivel1,n.nombre_nivel1");
            sql.append(",n.codigo_nivel2,n.nombre_nivel2");
            sql.append(",n.codigo_nivel3,n.nombre_nivel3");
            sql.append(",n.codigo_nivel4,n.nombre_nivel4");
            sql.append(",n.codigo_nivel5,n.nombre_nivel5");
            sql.append(", n.codigo_establecimiento, n.nombre_establecimiento");
            sql.append(", n.codigo_sede, n.nombre_sede");
            sql.append(", n.codigo_predio, n.nombre_predio");
            //*otros
            sql.append(" , n.direccion_predio direccion_predio, n.nombre_zona zona");
            sql.append(" , n.nombre_sector sector, n.nombre_clima clima");
            // Condicion de Riesgo Antropico
            sql.append(" ,tbl_cond_ra.condicion_riesgo");
            // Condicion de Riesgo Natural
            sql.append(" ,tbl_cond_rn.condicion_riesgo");
            // *indicadores        
            //total espacios
            sql.append(" ,coalesce(tb_total_espacios.valor,0)");
            // # de espacios por condcion de iluminacion natural 
            sql.append(" ,coalesce(tb_esp_ilum_natural.valor,0)");
            //Proporción iluminacion natural 
            sql.append(" ,coalesce(tb_esp_ilum_natural.valor,0)/case when coalesce(tb_total_espacios.valor,0) = 0 then 1 else tb_total_espacios.valor end ");
            // # de espacios por condcion de Ventilacion Natural
            sql.append(" ,coalesce(tb_esp_ven_natural.valor,0)");
            //Proporción Ventilacion Natural
            sql.append(" ,coalesce(tb_esp_ven_natural.valor,0)/case when coalesce(tb_total_espacios.valor,0) = 0 then 1 else tb_total_espacios.valor end ");
            // # de espacios por condcion de Acústica
            sql.append(" ,coalesce(tb_espacios_acustica.valor,0)");
            //Proporción Acústica 
            sql.append(" ,coalesce(tb_espacios_acustica.valor,0)/case when coalesce(tb_total_espacios.valor,0) = 0 then 1 else tb_total_espacios.valor end ");
            // # de espacios por condcion de iluminacion artifical
            sql.append(" ,coalesce(tb_esp_ilum_artificial.valor,0)");
            //Proporción iluminacion artifical 
            sql.append(" ,coalesce(tb_esp_ilum_artificial.valor,0)/case when coalesce(tb_total_espacios.valor,0) = 0 then 1 else tb_total_espacios.valor end ");
            // # espacios con aislamiento termico en piso
            sql.append(" ,coalesce(tb_espacios_aisterm_piso.valor,0)");
            // # espacios con aislamiento termico en techo
            sql.append(" ,coalesce(tb_espacios_aisterm_techo.valor,0)");
            // # espacios con aislamiento termico en pared
            sql.append(" ,coalesce(tb_espacios_aisterm_pared.valor,0)");
            // # espacios con aislamiento termico en ventana
            sql.append(" ,coalesce(tb_espacios_aisterm_ventana.valor,0)");
            // # espacios con aislamiento termico en no verificable
            sql.append(" ,coalesce(tb_espacios_aisterm_novf.valor,0)");
            // # de inodoros según condición 
            sql.append(" ,coalesce(tb_inodoros_condicion.valor,0)");
            // Total Inodoro 
            sql.append(" ,coalesce(tb_total_inodoros.valor,0)");
            //Proporción Inodoro 
            sql.append(" ,coalesce(tb_inodoros_condicion.valor,0)/case when coalesce(tb_total_inodoros.valor,0) = 0 then 1 else tb_total_inodoros.valor end ");
            // # de duchas según condición 
            sql.append(" ,coalesce(tb_duchas_condicion.valor,0)");
            // Total Ducha 
            sql.append(" ,coalesce(tb_total_duchas.valor,0)");
            //Proporción Ducha 
            sql.append(" ,coalesce(tb_duchas_condicion.valor,0)/case when coalesce(tb_total_duchas.valor,0) = 0 then 1 else tb_total_duchas.valor end ");
            // # de lavamanos según condición 
            sql.append(" ,coalesce(tb_lavamanos_condicion.valor,0)");
            // Total lavamano 
            sql.append(" ,coalesce(tb_total_lavamanos.valor,0)");
            //Proporción Inodoro 
            sql.append(" ,coalesce(tb_lavamanos_condicion.valor,0)/case when coalesce(tb_total_lavamanos.valor,0) = 0 then 1 else tb_total_lavamanos.valor end ");
            // # de orinales según condición 
            sql.append(" ,coalesce(tb_orinales_condicion.valor,0)");
            // Total orinales 
            sql.append(" ,coalesce(tb_total_orinales.valor,0)");
            //Proporción Inodoro 
            sql.append(" ,coalesce(tb_orinales_condicion.valor,0)/case when coalesce(tb_total_orinales.valor,0) = 0 then 1 else tb_total_orinales.valor end ");
        } else {
            if (filtro.isAgrupamientoNivel0()) {
                agrupamiento.append(" n.nombre_nivel0");
            }
            if (filtro.isAgrupamientoNivel1()) {
                agrupamiento.append(" n.codigo_nivel1,n.nombre_nivel1");
            }
            if (filtro.isAgrupamientoNivel2()) {
                agrupamiento.append("n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
            }
            if (filtro.isAgrupamientoNivel3()) {
                agrupamiento.append("n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
            }
            if (filtro.isAgrupamientoNivel4()) {
                agrupamiento.append("n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
            }
            if (filtro.isAgrupamientoNivel5()) {
                agrupamiento.append("n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
                agrupamiento.append(",n.codigo_nivel5,n.nombre_nivel5");
            }
            if (filtro.isAgrupamientoEstablecimiento()) {
                agrupamiento.append("n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
                agrupamiento.append(",n.codigo_nivel5,n.nombre_nivel5");
                agrupamiento.append(", n.codigo_establecimiento, n.nombre_establecimiento");
            }
            if (filtro.isAgrupamientoSede()) {
                agrupamiento.append("n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
                agrupamiento.append(",n.codigo_nivel5,n.nombre_nivel5");
                agrupamiento.append(", n.codigo_establecimiento, n.nombre_establecimiento");
                agrupamiento.append(", n.codigo_sede, n.nombre_sede");
            }

            // select
            sql.append(agrupamiento.toString());
            // *indicadores        
            //total espacios
            sql.append(" ,sum(coalesce(tb_total_espacios.valor,0))");
            // # de espacios por condcion de iluminacion natural 
            sql.append(" ,sum(coalesce(tb_esp_ilum_natural.valor,0))");
            //Proporción iluminacion natural 
            sql.append(" ,sum(coalesce(tb_esp_ilum_natural.valor,0))/case when sum(coalesce(tb_total_espacios.valor,0)) = 0 then 1 else sum(tb_total_espacios.valor) end ");
            // # de espacios por condcion de Ventilacion Natural
            sql.append(" ,sum(coalesce(tb_esp_ven_natural.valor,0))");
            //Proporción Ventilacion Natural
            sql.append(" ,sum(coalesce(tb_esp_ven_natural.valor,0))/case when sum(coalesce(tb_total_espacios.valor,0)) = 0 then 1 else sum(tb_total_espacios.valor) end ");
            // # de espacios por condcion de Acústica
            sql.append(" ,sum(coalesce(tb_espacios_acustica.valor,0))");
            //Proporción Acústica 
            sql.append(" ,sum(coalesce(tb_espacios_acustica.valor,0))/case when sum(coalesce(tb_total_espacios_fun_acustica.valor,0)) = 0 then 1 else sum(tb_total_espacios_fun_acustica.valor) end ");
            // # de espacios por condcion de iluminacion artifical
            sql.append(" ,sum(coalesce(tb_esp_ilum_artificial.valor,0))");
            //Proporción iluminacion artifical 
            sql.append(" ,sum(coalesce(tb_esp_ilum_artificial.valor,0))/case when sum(coalesce(tb_total_espacios.valor,0)) = 0 then 1 else sum(tb_total_espacios.valor) end ");
            // # espacios con aislamiento termico en piso
            sql.append(" ,sum(coalesce(tb_espacios_aisterm_piso.valor,0))");
            // # espacios con aislamiento termico en techo
            sql.append(" ,sum(coalesce(tb_espacios_aisterm_techo.valor,0))");
            // # espacios con aislamiento termico en pared
            sql.append(" ,sum(coalesce(tb_espacios_aisterm_pared.valor,0))");
            // # espacios con aislamiento termico en ventana
            sql.append(" ,sum(coalesce(tb_espacios_aisterm_ventana.valor,0))");
            // # espacios con aislamiento termico en no verificable
            sql.append(" ,sum(coalesce(tb_espacios_aisterm_novf.valor,0))");
            // # de inodoros según condición 
            sql.append(" ,sum(coalesce(tb_inodoros_condicion.valor,0))");
            // Total Inodoro 
            sql.append(" ,sum(coalesce(tb_total_inodoros.valor,0))");
            //Proporción Inodoro 
            sql.append(" ,sum(coalesce(tb_inodoros_condicion.valor,0))/case when sum(coalesce(tb_total_inodoros.valor,0)) = 0 then 1 else sum(tb_total_inodoros.valor) end ");
            // # de duchas según condición 
            sql.append(" ,sum(coalesce(tb_duchas_condicion.valor,0))");
            // Total Ducha 
            sql.append(" ,sum(coalesce(tb_total_duchas.valor,0))");
            //Proporción Ducha 
            sql.append(" ,sum(coalesce(tb_duchas_condicion.valor,0))/case when sum(coalesce(tb_total_duchas.valor,0)) = 0 then 1 else sum(tb_total_duchas.valor) end ");
            // # de lavamanos según condición 
            sql.append(" ,sum(coalesce(tb_lavamanos_condicion.valor,0))");
            // Total lavamano 
            sql.append(" ,sum(coalesce(tb_total_lavamanos.valor,0))");
            //Proporción Inodoro 
            sql.append(" ,sum(coalesce(tb_lavamanos_condicion.valor,0))/case when sum(coalesce(tb_total_lavamanos.valor,0)) = 0 then 1 else sum(tb_total_lavamanos.valor) end ");
            // # de orinales según condición 
            sql.append(" ,sum(coalesce(tb_orinales_condicion.valor,0))");
            // Total orinales 
            sql.append(" ,sum(coalesce(tb_total_orinales.valor,0))");
            //Proporción Inodoro 
            sql.append(" ,sum(coalesce(tb_orinales_condicion.valor,0))/case when sum(coalesce(tb_total_orinales.valor,0)) = 0 then 1 else sum(tb_total_orinales.valor) end ");
        }

// FROM 
        sql.append(" from ind_auxiliar_indicador aux");
        sql.append(" inner join ind_auxiliar_consultas n on n.id_predio = aux.id_predio and n.periodo = aux.periodo and n.id_tnt = aux.id_tnt");

        if (filtro.isAgrupamientoPredio()) {
            //condicion riesgo Antropico
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_RIESGO_ANTROPICO_CONDICION_RIESGO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) tbl_cond_ra on tbl_cond_ra.id_predio = aux.id_predio");

            //condicion riesgo Natural            
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_RIESGO_NATURAL_CONDICION_RIESGO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) tbl_cond_rn on tbl_cond_rn.id_predio = aux.id_predio");
        }

        // total espacios
        sql.append(" left join");
        sql.append(" (");
        sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_TOTAL_ESPACIOS, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
        sql.append(" ) tb_total_espacios on tb_total_espacios.id_predio = aux.id_predio");

        // total espacios con funcionalidad acustica
        sql.append(" left join");
        sql.append(" (");
        sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_CONFORT_NUMERO_ESPACIOS_ACUSTICA, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
        sql.append(" ) tb_total_espacios_fun_acustica on tb_total_espacios_fun_acustica.id_predio = aux.id_predio");

        // # de espacios por condicion de iluminacion natural 
        sql.append(" left join");
        sql.append(" (");
        sql.append(agregarCondicionConfort(this.consultarFormulaSQLIndicador(ParamIndicador.IND_CONFORT_NUMERO_ESPACIOS_ILUMINACION_NATURAL, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()), filtro.getCondicionIluminacionNatural()));
        sql.append(" ) tb_esp_ilum_natural on tb_esp_ilum_natural.id_predio = aux.id_predio");

        // # de espacios por condcion de Ventilacion Natural
        sql.append(" left join");
        sql.append(" (");
        sql.append(agregarCondicionConfort(this.consultarFormulaSQLIndicador(ParamIndicador.IND_CONFORT_NUMERO_ESPACIOS_VENTILACION_NATURAL, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()), filtro.getCondicionVentilacionNatural()));
        sql.append(" ) tb_esp_ven_natural on tb_esp_ven_natural.id_predio = aux.id_predio");

        // # de espacios por condcion de Acústica
        sql.append(" left join");
        sql.append(" (");
        sql.append(agregarCondicionConfort(this.consultarFormulaSQLIndicador(ParamIndicador.IND_CONFORT_NUMERO_ESPACIOS_ACUSTICA, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()), filtro.getCondicionAcustica()));
        sql.append(" ) tb_espacios_acustica on tb_espacios_acustica.id_predio = aux.id_predio");

        // # de espacios por condcion de iluminacion artifical
        sql.append(" left join");
        sql.append(" (");
        sql.append(agregarCondicionConfort(this.consultarFormulaSQLIndicador(ParamIndicador.IND_CONFORT_NUMERO_ESPACIOS_ILUMINACION_ARTIFICIAL, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()), filtro.getCondicionIluminacionArtificial()));
        sql.append(" ) tb_esp_ilum_artificial on tb_esp_ilum_artificial.id_predio = aux.id_predio");

        // # espacios con aislamiento termico en piso
        sql.append(" left join");
        sql.append(" (");
        sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_CONFORT_NUMERO_ESPACIOS_AISLAMIENTO_TERMICO_PISO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
        sql.append(" ) tb_espacios_aisterm_piso on tb_espacios_aisterm_piso.id_predio = aux.id_predio");

        // # espacios con aislamiento termico en techo
        sql.append(" left join");
        sql.append(" (");
        sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_CONFORT_NUMERO_ESPACIOS_AISLAMIENTO_TERMICO_TECHO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
        sql.append(" ) tb_espacios_aisterm_techo on tb_espacios_aisterm_techo.id_predio = aux.id_predio");

        // # espacios con aislamiento termico en pared
        sql.append(" left join");
        sql.append(" (");
        sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_CONFORT_NUMERO_ESPACIOS_AISLAMIENTO_TERMICO_PARED, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
        sql.append(" ) tb_espacios_aisterm_pared on tb_espacios_aisterm_pared.id_predio = aux.id_predio");

        // # espacios con aislamiento termico en ventana
        sql.append(" left join");
        sql.append(" (");
        sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_CONFORT_NUMERO_ESPACIOS_AISLAMIENTO_TERMICO_VENTANA, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
        sql.append(" ) tb_espacios_aisterm_ventana on tb_espacios_aisterm_ventana.id_predio = aux.id_predio");

        // # espacios con aislamiento termico en no verificable
        sql.append(" left join");
        sql.append(" (");
        sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_CONFORT_NUMERO_ESPACIOS_AISLAMIENTO_TERMICO_NOVF, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
        sql.append(" ) tb_espacios_aisterm_novf on tb_espacios_aisterm_novf.id_predio = aux.id_predio");

        // # de inodoros según condición 
        sql.append(" left join");
        sql.append(" (");
        sql.append(agregarCondicionConfort(this.consultarFormulaSQLIndicador(ParamIndicador.IND_CONFORT_NUMERO_INODOROS, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()), filtro.getCondicionInodoro()));
        sql.append(" ) tb_inodoros_condicion on tb_inodoros_condicion.id_predio = aux.id_predio");

        // Total Inodoro 
        sql.append(" left join");
        sql.append(" (");
        sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_CONFORT_NUMERO_INODOROS, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
        sql.append(" ) tb_total_inodoros on tb_total_inodoros.id_predio = aux.id_predio");

        // # de duchas según condición 
        sql.append(" left join");
        sql.append(" (");
        sql.append(agregarCondicionConfort(this.consultarFormulaSQLIndicador(ParamIndicador.IND_CONFORT_NUMERO_DUCHAS, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()), filtro.getCondicionDucha()));
        sql.append(" ) tb_duchas_condicion on tb_duchas_condicion.id_predio = aux.id_predio");

        // Total Ducha 
        sql.append(" left join");
        sql.append(" (");
        sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_CONFORT_NUMERO_DUCHAS, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
        sql.append(" ) tb_total_duchas on tb_total_duchas.id_predio = aux.id_predio");

        // # de lavamanos según condición 
        sql.append(" left join");
        sql.append(" (");
        sql.append(agregarCondicionConfort(this.consultarFormulaSQLIndicador(ParamIndicador.IND_CONFORT_NUMERO_LAVAMANOS, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()), filtro.getCondicionLavamano()));
        sql.append(" ) tb_lavamanos_condicion on tb_lavamanos_condicion.id_predio = aux.id_predio");

        // Total lavamano 
        sql.append(" left join");
        sql.append(" (");
        sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_CONFORT_NUMERO_LAVAMANOS, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
        sql.append(" ) tb_total_lavamanos on tb_total_lavamanos.id_predio = aux.id_predio");

        // # de orinales según condición 
        sql.append(" left join");
        sql.append(" (");
        sql.append(agregarCondicionConfort(this.consultarFormulaSQLIndicador(ParamIndicador.IND_CONFORT_NUMERO_ORINALES, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()), filtro.getCondicionOrinal()));
        sql.append(" ) tb_orinales_condicion on tb_orinales_condicion.id_predio = aux.id_predio");

        // Total orinales 
        sql.append(" left join");
        sql.append(" (");
        sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_CONFORT_NUMERO_ORINALES, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
        sql.append(" ) tb_total_orinales on tb_total_orinales.id_predio = aux.id_predio");

// WHERE
        sql.append(" where aux.id_tnt = ?1 and aux.periodo = ?2");
        if (filtro.isAgrupamientoPredio()) {
            sql.append(" and n.principal_establecimiento = 1");
        }
        if (filtro.getIdNivel0() != null) {
            sql.append(" and n.id_nivel0 = ?3");
        }
        if (filtro.getIdNivel1() != null) {
            sql.append(" and n.id_nivel1 = ?4");
        }
        if (filtro.getIdNivel2() != null) {
            sql.append(" and n.id_nivel2 = ?5");
        }
        if (filtro.getIdNivel3() != null) {
            sql.append(" and n.id_nivel3 = ?6");
        }
        if (filtro.getIdNivel4() != null) {
            sql.append(" and n.id_nivel4 = ?7");
        }
        if (filtro.getIdNivel5() != null) {
            sql.append(" and n.id_nivel5 = ?8");
        }
        if (filtro.getIdEstablecimiento() != null) {
            sql.append(" and n.id_establecimiento = ?9");
        }
        if (filtro.getIdSede() != null) {
            sql.append(" and n.id_sede = ?10");
        }
        if (filtro.getIdPredio() != null) {
            sql.append(" and n.id_predio = ?11");
        }
        // otros filtros
        if (filtro.getCodZona() != null) {
            sql.append(" and n.codigo_zona = ?12");
        }
        if (filtro.getCodSector() != null) {
            sql.append(" and n.codigo_sector = ?13");
        }

        // GROUP BY 
        if (!filtro.isAgrupamientoPredio()) {
            sql.append(" group by ");
            sql.append(agrupamiento.toString());
        }

        String auxSql = sql.toString();
        if (ParamBaseDatos.POSTGRE.equals(UtilProperties.getDbMotor())) {
            auxSql = auxSql.replaceAll("\\?start", "");
            auxSql = auxSql.replaceAll("\\?end", "");

        }
        Query query = tpm.getEm().createNativeQuery(auxSql);
        query.setParameter(1, tpm.getCurrentTenant());
        query.setParameter(2, filtro.getPeriodo());
        query.setParameter(3, filtro.getIdNivel0());
        if (filtro.getIdNivel1() != null) {
            query.setParameter(4, filtro.getIdNivel1());
        }
        if (filtro.getIdNivel2() != null) {
            query.setParameter(5, filtro.getIdNivel2());
        }
        if (filtro.getIdNivel3() != null) {
            query.setParameter(6, filtro.getIdNivel3());
        }
        if (filtro.getIdNivel4() != null) {
            query.setParameter(7, filtro.getIdNivel4());
        }
        if (filtro.getIdNivel5() != null) {
            query.setParameter(8, filtro.getIdNivel5());
        }
        if (filtro.getIdEstablecimiento() != null) {
            query.setParameter(9, filtro.getIdEstablecimiento());
        }
        if (filtro.getIdSede() != null) {
            query.setParameter(10, filtro.getIdSede());
        }
        if (filtro.getIdPredio() != null) {
            query.setParameter(11, filtro.getIdPredio());
        }
        // otros filtros
        if (filtro.getCodZona() != null) {
            query.setParameter(12, filtro.getCodZona());
        }
        if (filtro.getCodSector() != null) {
            query.setParameter(13, filtro.getCodSector());
        }
        return query.getResultList();
    }

    private List<Object[]> consultarConfortIndicadores(FiltroAmbitoConfort filtro) {
        StringBuilder sql = new StringBuilder();
        StringBuilder agrupamiento = new StringBuilder();

        sql.append(" select distinct ");
        if (filtro.isAgrupamientoPredio()) {
            sql.append(" n.codigo_nivel1,n.nombre_nivel1");
            sql.append(",n.codigo_nivel2,n.nombre_nivel2");
            sql.append(",n.codigo_nivel3,n.nombre_nivel3");
            sql.append(",n.codigo_nivel4,n.nombre_nivel4");
            sql.append(",n.codigo_nivel5,n.nombre_nivel5");
            sql.append(",n.codigo_establecimiento, n.nombre_establecimiento");
            sql.append(",n.codigo_sede, n.nombre_sede");
            sql.append(",n.codigo_predio, n.nombre_predio");
            //*otros
            sql.append(" , n.direccion_predio direccion_predio, n.nombre_zona zona");
            sql.append(" , n.nombre_sector sector, n.nombre_clima clima");
            // Condicion de Riesgo Antropico
            sql.append(" ,tbl_cond_ra.valor");
            // Condicion de Riesgo Natural
            sql.append(" ,tbl_cond_rn.valor");
            // *indicadores        
            //total espacios
            sql.append(" ,coalesce(tb_total_espacios.valor,'0')");
            // # espacios con aislamiento termico en piso
            sql.append(" ,coalesce(tb_espacios_aisterm_piso.valor,'0')");
            // # espacios con aislamiento termico en techo
            sql.append(" ,coalesce(tb_espacios_aisterm_techo.valor,'0')");
            // # espacios con aislamiento termico en pared
            sql.append(" ,coalesce(tb_espacios_aisterm_pared.valor,'0')");
            // # espacios con aislamiento termico en ventana
            sql.append(" ,coalesce(tb_espacios_aisterm_ventana.valor,'0')");
            // # espacios con aislamiento termico en no verificable
            sql.append(" ,coalesce(tb_espacios_aisterm_novf.valor,'0')");
            // Total Inodoro 
            sql.append(" ,coalesce(tb_total_inodoros.valor,'0')");
            // Total Ducha 
            sql.append(" ,coalesce(tb_total_duchas.valor,'0')");
            // Total lavamano 
            sql.append(" ,coalesce(tb_total_lavamanos.valor,'0')");
            // Total orinales 
            sql.append(" ,coalesce(tb_total_orinales.valor,'0')");
        } else {
            if (filtro.isAgrupamientoNivel0()) {
                agrupamiento.append("n.nombre_nivel0");
            }
            if (filtro.isAgrupamientoNivel1()) {
                agrupamiento.append("n.codigo_nivel1,n.nombre_nivel1");
            }
            if (filtro.isAgrupamientoNivel2()) {
                agrupamiento.append("n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
            }
            if (filtro.isAgrupamientoNivel3()) {
                agrupamiento.append("n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
            }
            if (filtro.isAgrupamientoNivel4()) {
                agrupamiento.append("n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
            }
            if (filtro.isAgrupamientoNivel5()) {
                agrupamiento.append("n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
                agrupamiento.append(",n.codigo_nivel5,n.nombre_nivel5");
            }
            if (filtro.isAgrupamientoEstablecimiento()) {
                agrupamiento.append("n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
                agrupamiento.append(",n.codigo_nivel5,n.nombre_nivel5");
                agrupamiento.append(", n.codigo_establecimiento, n.nombre_establecimiento");
            }
            if (filtro.isAgrupamientoSede()) {
                agrupamiento.append("n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
                agrupamiento.append(",n.codigo_nivel5,n.nombre_nivel5");
                agrupamiento.append(",n.codigo_establecimiento, n.nombre_establecimiento");
                agrupamiento.append(",n.codigo_sede, n.nombre_sede");
            }

            // select
            sql.append(agrupamiento.toString());
            // *indicadores        
            //total espacios
            sql.append(" ,coalesce(tb_total_espacios.valor,'0')");
            // # espacios con aislamiento termico en piso
            sql.append(" ,coalesce(tb_espacios_aisterm_piso.valor,'0')");
            // # espacios con aislamiento termico en techo
            sql.append(" ,coalesce(tb_espacios_aisterm_techo.valor,'0')");
            // # espacios con aislamiento termico en pared
            sql.append(" ,coalesce(tb_espacios_aisterm_pared.valor,'0')");
            // # espacios con aislamiento termico en ventana
            sql.append(" ,coalesce(tb_espacios_aisterm_ventana.valor,'0')");
            // # espacios con aislamiento termico en no verificable
            sql.append(" ,coalesce(tb_espacios_aisterm_novf.valor,'0')");
            // Total Inodoro 
            sql.append(" ,coalesce(tb_total_inodoros.valor,'0')");
            // Total Ducha 
            sql.append(" ,coalesce(tb_total_duchas.valor,'0')");
            // Total lavamano 
            sql.append(" ,coalesce(tb_total_lavamanos.valor,'0')");
            // Total orinales 
            sql.append(" ,coalesce(tb_total_orinales.valor,'0')");
        }
// FROM 
        sql.append(" from ind_auxiliar_indicador aux");
        sql.append(" inner join ind_auxiliar_consultas n on n.id_predio = aux.id_predio and n.periodo = aux.periodo and n.id_tnt = aux.id_tnt");

        String strSQLNivelAgrupamiento = this.getSQLNivelAgrupamiento(filtro);
        String strSQLConsultarIndicador = this.getSQLConsultarIndicadorAlmacenado();

        if (filtro.isAgrupamientoPredio()) {
            // Condicion de Riesgo Antropico
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_cond_ra on tbl_cond_ra.id_tnt = aux.id_tnt and tbl_cond_ra.periodo = aux.periodo");
            sql.append(String.format(" and tbl_cond_ra.cod_indicador = '%s'", ParamIndicador.IND_RIESGO_ANTROPICO_CONDICION_RIESGO));
            sql.append(" and tbl_cond_ra.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_cond_ra.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            // Condicion de Riesgo Natural
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_cond_rn on tbl_cond_rn.id_tnt = aux.id_tnt and tbl_cond_rn.periodo = aux.periodo");
            sql.append(String.format(" and tbl_cond_rn.cod_indicador = '%s'", ParamIndicador.IND_RIESGO_NATURAL_CONDICION_RIESGO));
            sql.append(" and tbl_cond_rn.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_cond_rn.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
        }

        //total espacios
        sql.append(" left join (");
        sql.append(strSQLConsultarIndicador);
        sql.append(" ) tb_total_espacios on tb_total_espacios.id_tnt = aux.id_tnt and tb_total_espacios.periodo = aux.periodo");
        sql.append(String.format(" and tb_total_espacios.cod_indicador = '%s'", ParamIndicador.IND_TOTAL_ESPACIOS));
        sql.append(" and tb_total_espacios.nivel_agrupamiento = ?nivel_agrupamiento");
        sql.append(" and tb_total_espacios.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

        // # espacios con aislamiento termico en piso
        sql.append(" left join (");
        sql.append(strSQLConsultarIndicador);
        sql.append(" ) tb_espacios_aisterm_piso on tb_espacios_aisterm_piso.id_tnt = aux.id_tnt and tb_espacios_aisterm_piso.periodo = aux.periodo");
        sql.append(String.format(" and tb_espacios_aisterm_piso.cod_indicador = '%s'", ParamIndicador.IND_CONFORT_NUMERO_ESPACIOS_AISLAMIENTO_TERMICO_PISO));
        sql.append(" and tb_espacios_aisterm_piso.nivel_agrupamiento = ?nivel_agrupamiento");
        sql.append(" and tb_espacios_aisterm_piso.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

        // # espacios con aislamiento termico en techo
        sql.append(" left join (");
        sql.append(strSQLConsultarIndicador);
        sql.append(" ) tb_espacios_aisterm_techo on tb_espacios_aisterm_techo.id_tnt = aux.id_tnt and tb_espacios_aisterm_techo.periodo = aux.periodo");
        sql.append(String.format(" and tb_espacios_aisterm_techo.cod_indicador = '%s'", ParamIndicador.IND_CONFORT_NUMERO_ESPACIOS_AISLAMIENTO_TERMICO_TECHO));
        sql.append(" and tb_espacios_aisterm_techo.nivel_agrupamiento = ?nivel_agrupamiento");
        sql.append(" and tb_espacios_aisterm_techo.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

        // # espacios con aislamiento termico en pared
        sql.append(" left join (");
        sql.append(strSQLConsultarIndicador);
        sql.append(" ) tb_espacios_aisterm_pared on tb_espacios_aisterm_pared.id_tnt = aux.id_tnt and tb_espacios_aisterm_pared.periodo = aux.periodo");
        sql.append(String.format(" and tb_espacios_aisterm_pared.cod_indicador = '%s'", ParamIndicador.IND_CONFORT_NUMERO_ESPACIOS_AISLAMIENTO_TERMICO_PARED));
        sql.append(" and tb_espacios_aisterm_pared.nivel_agrupamiento = ?nivel_agrupamiento");
        sql.append(" and tb_espacios_aisterm_pared.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

        // # espacios con aislamiento termico en ventana
        sql.append(" left join (");
        sql.append(strSQLConsultarIndicador);
        sql.append(" ) tb_espacios_aisterm_ventana on tb_espacios_aisterm_ventana.id_tnt = aux.id_tnt and tb_espacios_aisterm_ventana.periodo = aux.periodo");
        sql.append(String.format(" and tb_espacios_aisterm_ventana.cod_indicador = '%s'", ParamIndicador.IND_CONFORT_NUMERO_ESPACIOS_AISLAMIENTO_TERMICO_VENTANA));
        sql.append(" and tb_espacios_aisterm_ventana.nivel_agrupamiento = ?nivel_agrupamiento");
        sql.append(" and tb_espacios_aisterm_ventana.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

        // # espacios con aislamiento termico en no verificable
        sql.append(" left join (");
        sql.append(strSQLConsultarIndicador);
        sql.append(" ) tb_espacios_aisterm_novf on tb_espacios_aisterm_novf.id_tnt = aux.id_tnt and tb_espacios_aisterm_novf.periodo = aux.periodo");
        sql.append(String.format(" and tb_espacios_aisterm_novf.cod_indicador = '%s'", ParamIndicador.IND_CONFORT_NUMERO_ESPACIOS_AISLAMIENTO_TERMICO_NOVF));
        sql.append(" and tb_espacios_aisterm_novf.nivel_agrupamiento = ?nivel_agrupamiento");
        sql.append(" and tb_espacios_aisterm_novf.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

        // Total Inodoro 
        sql.append(" left join (");
        sql.append(strSQLConsultarIndicador);
        sql.append(" ) tb_total_inodoros on tb_total_inodoros.id_tnt = aux.id_tnt and tb_total_inodoros.periodo = aux.periodo");
        sql.append(String.format(" and tb_total_inodoros.cod_indicador = '%s'", ParamIndicador.IND_CONFORT_NUMERO_INODOROS));
        sql.append(" and tb_total_inodoros.nivel_agrupamiento = ?nivel_agrupamiento");
        sql.append(" and tb_total_inodoros.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

        // Total Ducha 
        sql.append(" left join (");
        sql.append(strSQLConsultarIndicador);
        sql.append(" ) tb_total_duchas on tb_total_duchas.id_tnt = aux.id_tnt and tb_total_duchas.periodo = aux.periodo");
        sql.append(String.format(" and tb_total_duchas.cod_indicador = '%s'", ParamIndicador.IND_CONFORT_NUMERO_DUCHAS));
        sql.append(" and tb_total_duchas.nivel_agrupamiento = ?nivel_agrupamiento");
        sql.append(" and tb_total_duchas.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

        // Total lavamano 
        sql.append(" left join (");
        sql.append(strSQLConsultarIndicador);
        sql.append(" ) tb_total_lavamanos on tb_total_lavamanos.id_tnt = aux.id_tnt and tb_total_lavamanos.periodo = aux.periodo");
        sql.append(String.format(" and tb_total_lavamanos.cod_indicador = '%s'", ParamIndicador.IND_CONFORT_NUMERO_LAVAMANOS));
        sql.append(" and tb_total_lavamanos.nivel_agrupamiento = ?nivel_agrupamiento");
        sql.append(" and tb_total_lavamanos.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

        // Total orinales 
        sql.append(" left join (");
        sql.append(strSQLConsultarIndicador);
        sql.append(" ) tb_total_orinales on tb_total_orinales.id_tnt = aux.id_tnt and tb_total_orinales.periodo = aux.periodo");
        sql.append(String.format(" and tb_total_orinales.cod_indicador = '%s'", ParamIndicador.IND_CONFORT_NUMERO_ORINALES));
        sql.append(" and tb_total_orinales.nivel_agrupamiento = ?nivel_agrupamiento");
        sql.append(" and tb_total_orinales.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

// WHERE
        sql.append(" where aux.id_tnt = ?id_tnt and aux.periodo = ?periodo");
        if (filtro.isAgrupamientoPredio()) {
            /*sql.append(" and (tbl_tipo1.valor IS NOT NULL or");
             sql.append(" tbl_tipo2.valor IS NOT NULL or");
             sql.append(" tbl_tipo3.valor IS NOT NULL)");*/

            sql.append(" and n.principal_establecimiento = 1");
        }
        if (filtro.getIdNivel0() != null) {
            sql.append(" and n.id_nivel0 = ?id_nivel0");
        }
        if (filtro.getIdNivel1() != null) {
            sql.append(" and n.id_nivel1 = ?id_nivel1");
        }
        if (filtro.getIdNivel2() != null) {
            sql.append(" and n.id_nivel2 = ?id_nivel2");
        }
        if (filtro.getIdNivel3() != null) {
            sql.append(" and n.id_nivel3 = ?id_nivel3");
        }
        if (filtro.getIdNivel4() != null) {
            sql.append(" and n.id_nivel4 = ?id_nivel4");
        }
        if (filtro.getIdNivel5() != null) {
            sql.append(" and n.id_nivel5 = ?id_nivel5");
        }
        if (filtro.getIdEstablecimiento() != null) {
            sql.append(" and n.id_establecimiento = ?id_establecimiento");
        }
        if (filtro.getIdSede() != null) {
            sql.append(" and n.id_sede = ?id_sede");
        }
        if (filtro.getIdPredio() != null) {
            sql.append(" and n.id_predio = ?id_predio");
        }

        Query query = tpm.getEm().createNativeQuery(sql.toString());
        query.setParameter("id_tnt", tpm.getCurrentTenant());
        query.setParameter("periodo", filtro.getPeriodo());
        query.setParameter("idioma", filtro.getIdioma());
        query.setParameter("id_nivel0", filtro.getIdNivel0());
        query.setParameter("nivel_agrupamiento", filtro.getAgrupamiento());
        if (filtro.getIdNivel1() != null) {
            query.setParameter("id_nivel1", filtro.getIdNivel1());
        }
        if (filtro.getIdNivel2() != null) {
            query.setParameter("id_nivel2", filtro.getIdNivel2());
        }
        if (filtro.getIdNivel3() != null) {
            query.setParameter("id_nivel3", filtro.getIdNivel3());
        }
        if (filtro.getIdNivel4() != null) {
            query.setParameter("id_nivel4", filtro.getIdNivel4());
        }
        if (filtro.getIdNivel5() != null) {
            query.setParameter("id_nivel5", filtro.getIdNivel5());
        }
        if (filtro.getIdEstablecimiento() != null) {
            query.setParameter("id_establecimiento", filtro.getIdEstablecimiento());
        }
        if (filtro.getIdSede() != null) {
            query.setParameter("id_sede", filtro.getIdSede());
        }
        if (filtro.getIdPredio() != null) {
            query.setParameter("id_predio", filtro.getIdPredio());
        }
        return query.getResultList();
    }

    @Override
    public List<Object[]> consultarControlVigilancia(FiltroAmbitoControlVigilancia filtro) {
        if (filtro.isConsultaDeTiempoReal()) {
            if (ParamBaseDatos.ORACLE.equals(UtilProperties.getDbMotor())) {
                return this.consultarControlVigilanciaTiempoRealOracle(filtro);
            } else {
                return this.consultarControlVigilanciaTiempoRealPostgre(filtro);
            }

        } else {
            return this.consultarControlVigilanciaIndicadores(filtro);
        }
    }

    private List<Object[]> consultarControlVigilanciaTiempoRealPostgre(FiltroAmbitoControlVigilancia filtro) {
        String codInstrumento = this.consultarCodInstrumentoPorPeriodo(filtro.getPeriodo());
        StringBuilder sql = new StringBuilder();
        StringBuilder agrupamiento = new StringBuilder();
//SELECT
        sql.append(" select ");
        if (filtro.isAgrupamientoPredio()) {
            sql.append(" distinct n.codigo_nivel1,n.nombre_nivel1");
            sql.append(",n.codigo_nivel2,n.nombre_nivel2");
            sql.append(",n.codigo_nivel3,n.nombre_nivel3");
            sql.append(",n.codigo_nivel4,n.nombre_nivel4");
            sql.append(",n.codigo_nivel5,n.nombre_nivel5");
            sql.append(", n.codigo_establecimiento, n.nombre_establecimiento");
            sql.append(", n.codigo_sede, n.nombre_sede");
            sql.append(", n.codigo_predio, n.nombre_predio");
            // *indicadores 
            //tipo cerramiento
            sql.append(", tbl_cerramiento.cerramiento");
            //condicion cerramiento
            sql.append(", tbl_cerramiento.condicion_cerramiento");
            //condicion orden publico
            sql.append(", coalesce(tbl_cond_orden_publico.condicion_orden_publico,'sql.ind.general.noTiene')");
            //vulnerabilidad
            sql.append(", tbl_vulnerabilidad.vulnerabilidad");
            if (filtro.getSistemaIluminacion() != null) {//?sistema_iluminacion
                //# edificios según sistema  de iluminación exterior
                sql.append(", coalesce(tbl_edif_sis_iluminacion.total_edificio,0)");
                //proporcion sistema  de iluminación exterior
                sql.append(" ,coalesce(tbl_edif_sis_iluminacion.total_edificio,0)/case when tbl_edificios.total_edificios = 0 then 1 else tbl_edificios.total_edificios end ::float");
            }
            if (filtro.getSistemaCamara() != null) {//?sistema_camara
                //# edificios según sistema  de Cámara exterior 
                sql.append(", coalesce(tbl_edif_sis_camara.total_edificio,0)");
                //proporcion sistema  de Cámara exterior
                sql.append(" ,coalesce(tbl_edif_sis_camara.total_edificio,0)/case when tbl_edificios.total_edificios = 0 then 1 else tbl_edificios.total_edificios end ::float");
            }
            //total Edificios
            sql.append(", tbl_edificios.total_edificios");
            //*otros
            sql.append(" , n.direccion_predio direccion_predio, n.nombre_zona zona");
            sql.append(" , n.nombre_sector sector, n.nombre_clima clima");
            //etnias
            sql.append(" , etnias.etnias");
            //propiedad del predio
            sql.append(" , n.propiedad_predio");
            //condicion accesibilidad
            sql.append(" ,tbl_accesibilidad.accesibilidad");
        } else {
            if (filtro.isAgrupamientoNivel0()) {
                agrupamiento.append(" n.nombre_nivel0");
            }
            if (filtro.isAgrupamientoNivel1()) {
                agrupamiento.append(" n.codigo_nivel1,n.nombre_nivel1");
            }
            if (filtro.isAgrupamientoNivel2()) {
                sql.append("n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
            }
            if (filtro.isAgrupamientoNivel3()) {
                sql.append("n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
            }
            if (filtro.isAgrupamientoNivel4()) {
                sql.append("n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
                sql.append(",n.codigo_nivel4,n.nombre_nivel4");
            }
            if (filtro.isAgrupamientoNivel5()) {
                sql.append("n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
                sql.append(",n.codigo_nivel4,n.nombre_nivel4");
                sql.append(",n.codigo_nivel5,n.nombre_nivel5");
            }
            if (filtro.isAgrupamientoEstablecimiento()) {
                sql.append("n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
                sql.append(",n.codigo_nivel4,n.nombre_nivel4");
                sql.append(",n.codigo_nivel5,n.nombre_nivel5");
                agrupamiento.append(", n.codigo_establecimiento, n.nombre_establecimiento");
            }
            if (filtro.isAgrupamientoSede()) {
                sql.append("n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
                sql.append(",n.codigo_nivel4,n.nombre_nivel4");
                sql.append(",n.codigo_nivel5,n.nombre_nivel5");
                agrupamiento.append(", n.codigo_establecimiento, n.nombre_establecimiento");
                agrupamiento.append(", n.codigo_sede, n.nombre_sede");
            }
            if (filtro.isAgrupamientoEstablecimiento()) {
                agrupamiento.append(" n.nombre_nivel1, n.nombre_nivel2, n.nombre_nivel3, n.nombre_nivel4, n.nombre_nivel5");
                agrupamiento.append(", n.codigo_establecimiento, n.nombre_establecimiento");
            }
            if (filtro.isAgrupamientoSede()) {
                agrupamiento.append(" n.nombre_nivel1, n.nombre_nivel2, n.nombre_nivel3, n.nombre_nivel4, n.nombre_nivel5");
                agrupamiento.append(", n.codigo_establecimiento, n.nombre_establecimiento");
                agrupamiento.append(", n.codigo_sede, n.nombre_sede");
            }

            // select
            sql.append(agrupamiento.toString());
            // *indicadores  
            if (filtro.getCondicionOrdenPublico() != null) {//?cond_orden_publico
                //Predios segun Orden publico 
                sql.append(" ,sum(coalesce(tbl_total_predio_orden_publico.total,0))");
                //proporcion
                sql.append(" ,sum(coalesce(tbl_total_predio_orden_publico.total,0))/case when sum(coalesce(tbl_total_predio.total,0)) = 0 then 1 else sum(coalesce(tbl_total_predio.total,0)) end ::float");
            }
            if (filtro.getVulnerabilidad() != null) {//?cond_vulnerabilidad
                //Predios segun vulnerabilidad 
                sql.append(" ,sum(coalesce(tbl_total_predio_vulnerabilidad.total,0))");
                //proporcion
                sql.append(" ,sum(coalesce(tbl_total_predio_vulnerabilidad.total,0))/case when sum(coalesce(tbl_total_predio.total,0)) = 0 then 1 else sum(coalesce(tbl_total_predio.total,0)) end ::float");
            }
            //Total Predios
            sql.append(" ,sum(coalesce(tbl_total_predio.total,0))");
        }

// FROM 
        sql.append(" from cier.ind_auxiliar_indicador aux");
        sql.append(" inner join cier.ind_auxiliar_consultas n on n.id_predio = aux.id_predio and n.periodo = aux.periodo and n.id_tnt = aux.id_tnt");

        if (filtro.isAgrupamientoPredio()) {
            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_CONTROL_VIGILANCIA_TIPO_CERRAMIENTO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) as tbl_cerramiento on tbl_cerramiento.id_dig_instrumento = aux.id_dig_instrumento and tbl_cerramiento.id_predio = aux.id_predio");

            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_CONTROL_VIGILANCIA_VULNERABILIDAD, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append("\n ) as tbl_vulnerabilidad on tbl_vulnerabilidad.id_dig_instrumento = aux.id_dig_instrumento and tbl_vulnerabilidad.id_predio = aux.id_predio");

            if (filtro.getCondicionOrdenPublico() != null) {
                sql.append(" inner join");
                sql.append(" (");
                String subquery_condicion_ra = this.consultarFormulaSQLIndicador(ParamIndicador.IND_CONTROL_VIGILANCIA_CONDICION_ORDEN_PUBLICO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());
                subquery_condicion_ra = subquery_condicion_ra.replace("--filtro_simular", "and d2.valor = '" + filtro.getCondicionOrdenPublico() + "'");
                sql.append(subquery_condicion_ra);
            } else {
                sql.append(" left join");
                sql.append(" (");
                sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_CONTROL_VIGILANCIA_CONDICION_ORDEN_PUBLICO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            }
            sql.append(" ) as tbl_cond_orden_publico on tbl_cond_orden_publico.id_dig_instrumento = aux.id_dig_instrumento and tbl_cond_orden_publico.id_predio = aux.id_predio");


            if (filtro.getSistemaIluminacion() != null) {
                sql.append(" left join");
                sql.append(" (");
                sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_CONTROL_VIGILANCIA_NUM_EDIFICIOS_SEGUN_SISTEMA_ILUMINACION, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo())
                        .replaceAll("\\?sistema_iluminacion", "'" + filtro.getSistemaIluminacion().getValorEntero() + "'"));
                sql.append(" ) as tbl_edif_sis_iluminacion on tbl_edif_sis_iluminacion.id_dig_instrumento = aux.id_dig_instrumento and tbl_edif_sis_iluminacion.id_predio = aux.id_predio");
            }

            if (filtro.getSistemaCamara() != null) {
                sql.append(" left join");
                sql.append(" (");
                sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_CONTROL_VIGILANCIA_NUM_EDIFICIOS_SEGUN_SISTEMA_CAMARA, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo())
                        .replaceAll("\\?sistema_camara", "'" + filtro.getSistemaCamara().getValorEntero() + "'"));
                sql.append(" ) as tbl_edif_sis_camara on tbl_edif_sis_camara.id_dig_instrumento = aux.id_dig_instrumento and tbl_edif_sis_camara.id_predio = aux.id_predio");
            }

            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_TOTAL_EDIFICIOS, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) as tbl_edificios on tbl_edificios.id_dig_instrumento = aux.id_dig_instrumento and tbl_edificios.id_predio = aux.id_predio");

            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ETNIAS_PREDIO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) as etnias on etnias.id_dig_instrumento = aux.id_dig_instrumento and etnias.id_predio = aux.id_predio");

            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ACCESIBILIDAD_CONDICION_ACCESIBILIDAD, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) as tbl_accesibilidad on tbl_accesibilidad.id_dig_instrumento = aux.id_dig_instrumento and tbl_accesibilidad.id_predio = aux.id_predio");
        } else {
            if (filtro.getCondicionOrdenPublico() != null) {
                sql.append(" left join (");
                sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_CONTROL_VIGILANCIA_NUM_PREDIOS_SEGUN_CONDICION_ORDEN_PUBLICO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo())
                        .replaceAll("\\?cond_orden_publico", "'" + filtro.getCondicionOrdenPublico() + "'"));
                sql.append(" ) as tbl_total_predio_orden_publico on tbl_total_predio_orden_publico.id_dig_instrumento = aux.id_dig_instrumento and tbl_total_predio_orden_publico.id_predio = aux.id_predio");
            }

            if (filtro.getVulnerabilidad() != null) {
                sql.append(" left join (");
                sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_CONTROL_VIGILANCIA_NUM_PREDIOS_SEGUN_CONDICION_VULNERABILIDAD, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo())
                        .replaceAll("\\?cond_vulnerabilidad", "'" + filtro.getVulnerabilidad() + "'"));
                sql.append(" ) as tbl_total_predio_vulnerabilidad on tbl_total_predio_vulnerabilidad.id_dig_instrumento = aux.id_dig_instrumento and tbl_total_predio_vulnerabilidad.id_predio = aux.id_predio");
            }

            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_TOTAL_PREDIOS, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) as tbl_total_predio on tbl_total_predio.id_dig_instrumento = aux.id_dig_instrumento and tbl_total_predio.id_predio = aux.id_predio");
        }
// WHERE
        sql.append(" where aux.id_tnt = ?id_tnt and aux.periodo = ?periodo");
        if (filtro.isAgrupamientoPredio()) {
            sql.append(" and n.principal_establecimiento = 1");
        }
        if (filtro.getIdNivel0() != null) {
            sql.append(" and n.id_nivel0 = ?id_nivel0");
        }
        if (filtro.getIdNivel1() != null) {
            sql.append(" and n.id_nivel1 = ?id_nivel1");
        }
        if (filtro.getIdNivel2() != null) {
            sql.append(" and n.id_nivel2 = ?id_nivel2");
        }
        if (filtro.getIdNivel3() != null) {
            sql.append(" and n.id_nivel3 = ?id_nivel3");
        }
        if (filtro.getIdNivel4() != null) {
            sql.append(" and n.id_nivel4 = ?id_nivel4");
        }
        if (filtro.getIdNivel5() != null) {
            sql.append(" and n.id_nivel5 = ?id_nivel5");
        }
        if (filtro.getIdEstablecimiento() != null) {
            sql.append(" and n.id_establecimiento = ?id_establecimiento");
        }
        if (filtro.getIdSede() != null) {
            sql.append(" and n.id_sede = ?id_sede");
        }
        if (filtro.getIdPredio() != null) {
            sql.append(" and n.id_predio = ?id_predio");
        }
        // otros filtros
        if (filtro.getCodZona() != null) {
            sql.append(" and n.codigo_zona = ?cod_zona");
        }
        if (filtro.getCodSector() != null) {
            sql.append(" and n.codigo_sector = ?cod_sector");
        }
        // GROUP BY 
        if (!filtro.isAgrupamientoPredio()) {
            sql.append(" group by ");
            sql.append(agrupamiento.toString());
        }

        String auxSql = sql.toString();
        auxSql = auxSql.replaceAll("\\?start", "");
        auxSql = auxSql.replaceAll("\\?end", "");

        Query query = tpm.getEm().createNativeQuery(auxSql);
        query.setParameter("id_tnt", tpm.getCurrentTenant());
        query.setParameter("periodo", filtro.getPeriodo());
        query.setParameter("idioma", filtro.getIdioma());
        query.setParameter("id_nivel0", filtro.getIdNivel0());
        if (filtro.getIdNivel1() != null) {
            query.setParameter("id_nivel1", filtro.getIdNivel1());
        }
        if (filtro.getIdNivel2() != null) {
            query.setParameter("id_nivel2", filtro.getIdNivel2());
        }
        if (filtro.getIdNivel3() != null) {
            query.setParameter("id_nivel3", filtro.getIdNivel3());
        }
        if (filtro.getIdNivel4() != null) {
            query.setParameter("id_nivel4", filtro.getIdNivel4());
        }
        if (filtro.getIdNivel5() != null) {
            query.setParameter("id_nivel5", filtro.getIdNivel5());
        }
        if (filtro.getIdEstablecimiento() != null) {
            query.setParameter("id_establecimiento", filtro.getIdEstablecimiento());
        }
        if (filtro.getIdSede() != null) {
            query.setParameter("id_sede", filtro.getIdSede());
        }
        if (filtro.getIdPredio() != null) {
            query.setParameter("id_predio", filtro.getIdPredio());
        }
        // otros filtros
        if (filtro.getCodZona() != null) {
            query.setParameter("cod_zona", filtro.getCodZona());
        }
        if (filtro.getCodSector() != null) {
            query.setParameter("cod_sector", filtro.getCodSector());
        }

        return query.getResultList();
    }

    private List<Object[]> consultarControlVigilanciaTiempoRealOracle(FiltroAmbitoControlVigilancia filtro) {
        String codInstrumento = this.consultarCodInstrumentoPorPeriodo(filtro.getPeriodo());
        StringBuilder sql = new StringBuilder();
        StringBuilder agrupamiento = new StringBuilder();
//SELECT
        sql.append(" select ");
        if (filtro.isAgrupamientoPredio()) {
            sql.append(" distinct n.codigo_nivel1,n.nombre_nivel1");
            sql.append(",n.codigo_nivel2,n.nombre_nivel2");
            sql.append(",n.codigo_nivel3,n.nombre_nivel3");
            sql.append(",n.codigo_nivel4,n.nombre_nivel4");
            sql.append(",n.codigo_nivel5,n.nombre_nivel5");
            sql.append(",n.codigo_establecimiento, n.nombre_establecimiento");
            sql.append(",n.codigo_sede, n.nombre_sede");
            sql.append(",n.codigo_predio, n.nombre_predio");
            // *indicadores 
            //tipo cerramiento
            sql.append(", tbl_cerramiento.cerramiento");
            //condicion cerramiento
            sql.append(", tbl_cerramiento.condicion_cerramiento");
            //condicion orden publico
            sql.append(", coalesce(tbl_cond_orden_publico.condicion_orden_publico,'sql.ind.general.noTiene')");
            //vulnerabilidad
            sql.append(", tbl_vulnerabilidad.vulnerabilidad");
            if (filtro.getSistemaIluminacion() != null) {//?sistema_iluminacion
                //# edificios según sistema  de iluminación exterior
                sql.append(", coalesce(tbl_edif_sis_iluminacion.total_edificio,0)");
                //proporcion sistema  de iluminación exterior
                sql.append(" ,coalesce(tbl_edif_sis_iluminacion.total_edificio,0)/case when tbl_edificios.total_edificios = 0 then 1 else tbl_edificios.total_edificios end ");
            }
            if (filtro.getSistemaCamara() != null) {//?sistema_camara
                //# edificios según sistema  de Cámara exterior 
                sql.append(", coalesce(tbl_edif_sis_camara.total_edificio,0)");
                //proporcion sistema  de Cámara exterior
                sql.append(" ,coalesce(tbl_edif_sis_camara.total_edificio,0)/case when tbl_edificios.total_edificios = 0 then 1 else tbl_edificios.total_edificios end ");
            }
            //total Edificios
            sql.append(", tbl_edificios.total_edificios");
            //*otros
            sql.append(" , n.direccion_predio direccion_predio, n.nombre_zona zona");
            sql.append(" , n.nombre_sector sector, n.nombre_clima clima");
            //etnias
            sql.append(" , etnias.etnias");
            //propiedad del predio
            sql.append(" , n.propiedad_predio");
            //condicion accesibilidad
            sql.append(" ,tbl_accesibilidad.accesibilidad");
        } else {
            if (filtro.isAgrupamientoNivel0()) {
                agrupamiento.append(" n.nombre_nivel0");
            }
            if (filtro.isAgrupamientoNivel1()) {
                agrupamiento.append(" n.codigo_nivel1,n.nombre_nivel1");
            }
            if (filtro.isAgrupamientoNivel2()) {
                sql.append("n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
            }
            if (filtro.isAgrupamientoNivel3()) {
                sql.append("n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
            }
            if (filtro.isAgrupamientoNivel4()) {
                sql.append("n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
                sql.append(",n.codigo_nivel4,n.nombre_nivel4");
            }
            if (filtro.isAgrupamientoNivel5()) {
                sql.append("n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
                sql.append(",n.codigo_nivel4,n.nombre_nivel4");
                sql.append(",n.codigo_nivel5,n.nombre_nivel5");
            }
            if (filtro.isAgrupamientoEstablecimiento()) {
                sql.append("n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
                sql.append(",n.codigo_nivel4,n.nombre_nivel4");
                sql.append(",n.codigo_nivel5,n.nombre_nivel5");
                agrupamiento.append(", n.codigo_establecimiento, n.nombre_establecimiento");
            }
            if (filtro.isAgrupamientoSede()) {
                sql.append("n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
                sql.append(",n.codigo_nivel4,n.nombre_nivel4");
                sql.append(",n.codigo_nivel5,n.nombre_nivel5");
                agrupamiento.append(", n.codigo_establecimiento, n.nombre_establecimiento");
                agrupamiento.append(", n.codigo_sede, n.nombre_sede");
            }

            // select
            sql.append(agrupamiento.toString());
            // *indicadores  
            if (filtro.getCondicionOrdenPublico() != null) {//?cond_orden_publico
                //Predios segun Orden publico 
                sql.append(" ,sum(coalesce(tbl_total_predio_orden_publico.total,0))");
                //proporcion
                sql.append(" ,sum(coalesce(tbl_total_predio_orden_publico.total,0))/case when sum(coalesce(tbl_total_predio.total,0)) = 0 then 1 else sum(coalesce(tbl_total_predio.total,0)) end ");
            }
            if (filtro.getVulnerabilidad() != null) {//?cond_vulnerabilidad
                //Predios segun vulnerabilidad 
                sql.append(" ,sum(coalesce(tot_pre_vulnerabilidad.total,0))");
                //proporcion
                sql.append(" ,sum(coalesce(tot_pre_vulnerabilidad.total,0))/case when sum(coalesce(tbl_total_predio.total,0)) = 0 then 1 else sum(coalesce(tbl_total_predio.total,0)) end ");
            }
            //Total Predios
            sql.append(" ,sum(coalesce(tbl_total_predio.total,0))");
        }

// FROM 
        sql.append(" from ind_auxiliar_indicador aux");
        sql.append(" inner join ind_auxiliar_consultas n on n.id_predio = aux.id_predio and n.periodo = aux.periodo and n.id_tnt = aux.id_tnt");

        if (filtro.isAgrupamientoPredio()) {
            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_CONTROL_VIGILANCIA_TIPO_CERRAMIENTO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) tbl_cerramiento on tbl_cerramiento.id_predio = aux.id_predio");

            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_CONTROL_VIGILANCIA_VULNERABILIDAD, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append("\n ) tbl_vulnerabilidad on tbl_vulnerabilidad.id_predio = aux.id_predio");

            if (filtro.getCondicionOrdenPublico() != null) {
                sql.append(" inner join");
                sql.append(" (");
                String subquery_condicion_ra = this.consultarFormulaSQLIndicador(ParamIndicador.IND_CONTROL_VIGILANCIA_CONDICION_ORDEN_PUBLICO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());
                subquery_condicion_ra = subquery_condicion_ra.replace("--filtro", "and d1.Resp_050_06 = " + filtro.getCondicionOrdenPublico());
                sql.append(subquery_condicion_ra);
            } else {
                sql.append(" left join");
                sql.append(" (");
                sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_CONTROL_VIGILANCIA_CONDICION_ORDEN_PUBLICO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            }
            sql.append(" ) tbl_cond_orden_publico on tbl_cond_orden_publico.id_predio = aux.id_predio");


            if (filtro.getSistemaIluminacion() != null) {
                sql.append(" left join");
                sql.append(" (");
                sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_CONTROL_VIGILANCIA_NUM_EDIFICIOS_SEGUN_SISTEMA_ILUMINACION, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo())
                        .replaceAll("\\?sistema_iluminacion", "'" + filtro.getSistemaIluminacion().getValorEntero() + "'"));
                sql.append(" ) tbl_edif_sis_iluminacion on tbl_edif_sis_iluminacion.id_predio = aux.id_predio");
            }

            if (filtro.getSistemaCamara() != null) {
                sql.append(" left join");
                sql.append(" (");
                sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_CONTROL_VIGILANCIA_NUM_EDIFICIOS_SEGUN_SISTEMA_CAMARA, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo())
                        .replaceAll("\\?sistema_camara", "'" + filtro.getSistemaCamara().getValorEntero() + "'"));
                sql.append(" ) tbl_edif_sis_camara on tbl_edif_sis_camara.id_predio = aux.id_predio");
            }

            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_TOTAL_EDIFICIOS, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) tbl_edificios on tbl_edificios.id_predio = aux.id_predio");

            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ETNIAS_PREDIO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) etnias on etnias.id_predio = aux.id_predio");

            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ACCESIBILIDAD_CONDICION_ACCESIBILIDAD, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) tbl_accesibilidad on tbl_accesibilidad.id_predio = aux.id_predio");
        } else {
            if (filtro.getCondicionOrdenPublico() != null) {
                sql.append(" left join (");
                sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_CONTROL_VIGILANCIA_NUM_PREDIOS_SEGUN_CONDICION_ORDEN_PUBLICO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo())
                        .replaceAll("\\?cond_orden_publico", "'" + filtro.getCondicionOrdenPublico() + "'"));
                sql.append(" ) tbl_total_predio_orden_publico on tbl_total_predio_orden_publico.id_predio = aux.id_predio");
            }

            if (filtro.getVulnerabilidad() != null) {
                sql.append(" left join (");
                sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_CONTROL_VIGILANCIA_NUM_PREDIOS_SEGUN_CONDICION_VULNERABILIDAD, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo())
                        .replaceAll("\\?cond_vulnerabilidad", "'" + filtro.getVulnerabilidad() + "'"));
                sql.append(" ) tot_pre_vulnerabilidad on tot_pre_vulnerabilidad.id_predio = aux.id_predio");
            }

            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_TOTAL_PREDIOS, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) tbl_total_predio on tbl_total_predio.id_predio = aux.id_predio");
        }
// WHERE
        sql.append(" where aux.id_tnt = ?id_tnt and aux.periodo = ?periodo");
        if (filtro.isAgrupamientoPredio()) {
            sql.append(" and n.principal_establecimiento = 1");
        }
        if (filtro.getIdNivel0() != null) {
            sql.append(" and n.id_nivel0 = ?id_nivel0");
        }
        if (filtro.getIdNivel1() != null) {
            sql.append(" and n.id_nivel1 = ?id_nivel1");
        }
        if (filtro.getIdNivel2() != null) {
            sql.append(" and n.id_nivel2 = ?id_nivel2");
        }
        if (filtro.getIdNivel3() != null) {
            sql.append(" and n.id_nivel3 = ?id_nivel3");
        }
        if (filtro.getIdNivel4() != null) {
            sql.append(" and n.id_nivel4 = ?id_nivel4");
        }
        if (filtro.getIdNivel5() != null) {
            sql.append(" and n.id_nivel5 = ?id_nivel5");
        }
        if (filtro.getIdEstablecimiento() != null) {
            sql.append(" and n.id_establecimiento = ?id_establecimiento");
        }
        if (filtro.getIdSede() != null) {
            sql.append(" and n.id_sede = ?id_sede");
        }
        if (filtro.getIdPredio() != null) {
            sql.append(" and n.id_predio = ?id_predio");
        }
        // otros filtros
        if (filtro.getCodZona() != null) {
            sql.append(" and n.codigo_zona = ?cod_zona");
        }
        if (filtro.getCodSector() != null) {
            sql.append(" and n.codigo_sector = ?cod_sector");
        }
        // GROUP BY 
        if (!filtro.isAgrupamientoPredio()) {
            sql.append(" group by ");
            sql.append(agrupamiento.toString());
        }

        String auxSql = sql.toString();
        if (ParamBaseDatos.POSTGRE.equals(UtilProperties.getDbMotor())) {
            auxSql = auxSql.replaceAll("\\?start", "");
            auxSql = auxSql.replaceAll("\\?end", "");
        }


        Query query = tpm.getEm().createNativeQuery(auxSql);
        query.setParameter("id_tnt", tpm.getCurrentTenant());
        query.setParameter("periodo", filtro.getPeriodo());
        query.setParameter("idioma", filtro.getIdioma());
        query.setParameter("id_nivel0", filtro.getIdNivel0());
        if (filtro.getIdNivel1() != null) {
            query.setParameter("id_nivel1", filtro.getIdNivel1());
        }
        if (filtro.getIdNivel2() != null) {
            query.setParameter("id_nivel2", filtro.getIdNivel2());
        }
        if (filtro.getIdNivel3() != null) {
            query.setParameter("id_nivel3", filtro.getIdNivel3());
        }
        if (filtro.getIdNivel4() != null) {
            query.setParameter("id_nivel4", filtro.getIdNivel4());
        }
        if (filtro.getIdNivel5() != null) {
            query.setParameter("id_nivel5", filtro.getIdNivel5());
        }
        if (filtro.getIdEstablecimiento() != null) {
            query.setParameter("id_establecimiento", filtro.getIdEstablecimiento());
        }
        if (filtro.getIdSede() != null) {
            query.setParameter("id_sede", filtro.getIdSede());
        }
        if (filtro.getIdPredio() != null) {
            query.setParameter("id_predio", filtro.getIdPredio());
        }
        // otros filtros
        if (filtro.getCodZona() != null) {
            query.setParameter("cod_zona", filtro.getCodZona());
        }
        if (filtro.getCodSector() != null) {
            query.setParameter("cod_sector", filtro.getCodSector());
        }

        return query.getResultList();
    }

    private List<Object[]> consultarControlVigilanciaIndicadores(FiltroAmbitoControlVigilancia filtro) {
        StringBuilder sql = new StringBuilder();
// consulta por nivel de agrupamiento superior a predio
// SELECT
        sql.append(" select ");
        if (filtro.isAgrupamientoPredio()) {
            sql.append(" n.codigo_nivel1,n.nombre_nivel1");
            sql.append(",n.codigo_nivel2,n.nombre_nivel2");
            sql.append(",n.codigo_nivel3,n.nombre_nivel3");
            sql.append(",n.codigo_nivel4,n.nombre_nivel4");
            sql.append(",n.codigo_nivel5,n.nombre_nivel5");
            sql.append(",n.codigo_establecimiento,n.nombre_establecimiento");
            sql.append(",n.codigo_sede,n.nombre_sede");
            sql.append(",n.codigo_predio,n.nombre_predio");

            // *indicadores
            //tipo cerramiento
            sql.append(", tbl_cerramiento.valor");
            //condicion cerramiento
            sql.append(", tbl_cond_cerramiento.valor");
            //condicion orden publico
            sql.append(", coalesce(tbl_cond_orden_publico.valor,'sql.ind.general.noTiene')");
            //vulnerabilidad
            sql.append(", tbl_vulnerabilidad.valor");
            //total Edificios
            sql.append(", tbl_edificios.valor");
            //*otros
            sql.append(" , n.direccion_predio direccion_predio, n.nombre_zona zona");
            sql.append(" , n.nombre_sector sector, n.nombre_clima clima");
            //etnias
            sql.append(" , etnias.valor");
            //propiedad del predio
            sql.append(" , n.propiedad_predio");
            //condicion accesibilidad
            sql.append(" ,tbl_accesibilidad.valor");
        } else {
            sql.append(" distinct ");
            if (filtro.isAgrupamientoNivel0()) {
                sql.append("n.nombre_nivel0");
            }
            if (filtro.isAgrupamientoNivel1()) {
                sql.append("n.codigo_nivel1,n.nombre_nivel1");
            }
            if (filtro.isAgrupamientoNivel2()) {
                sql.append("n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
            }
            if (filtro.isAgrupamientoNivel3()) {
                sql.append("n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
            }
            if (filtro.isAgrupamientoNivel4()) {
                sql.append("n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
                sql.append(",n.codigo_nivel4,n.nombre_nivel4");
            }
            if (filtro.isAgrupamientoNivel5()) {
                sql.append("n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
                sql.append(",n.codigo_nivel4,n.nombre_nivel4");
                sql.append(",n.codigo_nivel5,n.nombre_nivel5");
            }
            if (filtro.isAgrupamientoEstablecimiento()) {
                sql.append("n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
                sql.append(",n.codigo_nivel4,n.nombre_nivel4");
                sql.append(",n.codigo_nivel5,n.nombre_nivel5");
                sql.append(", n.codigo_establecimiento, n.nombre_establecimiento");
            }
            if (filtro.isAgrupamientoSede()) {
                sql.append("n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
                sql.append(",n.codigo_nivel4,n.nombre_nivel4");
                sql.append(",n.codigo_nivel5,n.nombre_nivel5");
                sql.append(",n.codigo_establecimiento, n.nombre_establecimiento");
                sql.append(",n.codigo_sede, n.nombre_sede");
            }
            //Total Predios
            sql.append(" ,coalesce(tbl_total_predio.valor,'0')");
        }
// FROM 
        sql.append(" from ind_auxiliar_indicador aux");
        sql.append(" inner join ind_auxiliar_consultas n on n.id_predio = aux.id_predio and n.periodo = aux.periodo and n.id_tnt = aux.id_tnt");

        String strSQLNivelAgrupamiento = this.getSQLNivelAgrupamiento(filtro);
        String strSQLConsultarIndicador = this.getSQLConsultarIndicadorAlmacenado();

        if (filtro.isAgrupamientoPredio()) {

            //tipo cerramiento
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_cerramiento on tbl_cerramiento.id_tnt = aux.id_tnt and tbl_cerramiento.periodo = aux.periodo");
            sql.append(String.format(" and tbl_cerramiento.cod_indicador = '%s'", ParamIndicador.IND_CONTROL_VIGILANCIA_TIPO_CERRAMIENTO));
            sql.append(" and tbl_cerramiento.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_cerramiento.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            //condicion cerramiento
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_cond_cerramiento on tbl_cond_cerramiento.id_tnt = aux.id_tnt and tbl_cond_cerramiento.periodo = aux.periodo");
            sql.append(String.format(" and tbl_cond_cerramiento.cod_indicador = '%s'", ParamIndicador.IND_CONTROL_VIGILANCIA_CONDICION_CERRAMIENTO));
            sql.append(" and tbl_cond_cerramiento.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_cond_cerramiento.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            //condicion orden publico
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_cond_orden_publico on tbl_cond_orden_publico.id_tnt = aux.id_tnt and tbl_cond_orden_publico.periodo = aux.periodo");
            sql.append(String.format(" and tbl_cond_orden_publico.cod_indicador = '%s'", ParamIndicador.IND_CONTROL_VIGILANCIA_CONDICION_ORDEN_PUBLICO));
            sql.append(" and tbl_cond_orden_publico.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_cond_orden_publico.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            //vulnerabilidad
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_vulnerabilidad on tbl_vulnerabilidad.id_tnt = aux.id_tnt and tbl_vulnerabilidad.periodo = aux.periodo");
            sql.append(String.format(" and tbl_vulnerabilidad.cod_indicador = '%s'", ParamIndicador.IND_CONTROL_VIGILANCIA_VULNERABILIDAD));
            sql.append(" and tbl_vulnerabilidad.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_vulnerabilidad.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            //total Edificios
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_edificios on tbl_edificios.id_tnt = aux.id_tnt and tbl_edificios.periodo = aux.periodo");
            sql.append(String.format(" and tbl_edificios.cod_indicador = '%s'", ParamIndicador.IND_TOTAL_EDIFICIOS));
            sql.append(" and tbl_edificios.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_edificios.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            //etnias del predio
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) etnias on etnias.id_tnt = aux.id_tnt and etnias.periodo = aux.periodo");
            sql.append(String.format(" and etnias.cod_indicador = '%s'", ParamIndicador.IND_ETNIAS_PREDIO));
            sql.append(" and etnias.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and etnias.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            //Condición de accesibilidad
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_accesibilidad on tbl_accesibilidad.id_tnt = aux.id_tnt and tbl_accesibilidad.periodo = aux.periodo");
            sql.append(String.format(" and tbl_accesibilidad.cod_indicador = '%s'", ParamIndicador.IND_ACCESIBILIDAD_CONDICION_ACCESIBILIDAD));
            sql.append(" and tbl_accesibilidad.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_accesibilidad.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
        } else {

            //total predio
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_total_predio on tbl_total_predio.id_tnt = aux.id_tnt and tbl_total_predio.periodo = aux.periodo");
            sql.append(String.format(" and tbl_total_predio.cod_indicador = '%s'", ParamIndicador.IND_TOTAL_PREDIOS));
            sql.append(" and tbl_total_predio.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_total_predio.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

        }

// WHERE
        sql.append(" where aux.id_tnt = ?id_tnt and aux.periodo = ?periodo");
        if (filtro.isAgrupamientoPredio()) {
            /*sql.append(" and (tbl_tipo1.valor IS NOT NULL or");
             sql.append(" tbl_tipo2.valor IS NOT NULL or");
             sql.append(" tbl_tipo3.valor IS NOT NULL)");*/

            sql.append(" and n.principal_establecimiento = 1");
        }
        if (filtro.getIdNivel0() != null) {
            sql.append(" and n.id_nivel0 = ?id_nivel0");
        }
        if (filtro.getIdNivel1() != null) {
            sql.append(" and n.id_nivel1 = ?id_nivel1");
        }
        if (filtro.getIdNivel2() != null) {
            sql.append(" and n.id_nivel2 = ?id_nivel2");
        }
        if (filtro.getIdNivel3() != null) {
            sql.append(" and n.id_nivel3 = ?id_nivel3");
        }
        if (filtro.getIdNivel4() != null) {
            sql.append(" and n.id_nivel4 = ?id_nivel4");
        }
        if (filtro.getIdNivel5() != null) {
            sql.append(" and n.id_nivel5 = ?id_nivel5");
        }
        if (filtro.getIdEstablecimiento() != null) {
            sql.append(" and n.id_establecimiento = ?id_establecimiento");
        }
        if (filtro.getIdSede() != null) {
            sql.append(" and n.id_sede = ?id_sede");
        }
        if (filtro.getIdPredio() != null) {
            sql.append(" and n.id_predio = ?id_predio");
        }

        Query query = tpm.getEm().createNativeQuery(sql.toString());
        query.setParameter("id_tnt", tpm.getCurrentTenant());
        query.setParameter("periodo", filtro.getPeriodo());
        query.setParameter("idioma", filtro.getIdioma());
        query.setParameter("id_nivel0", filtro.getIdNivel0());
        query.setParameter("nivel_agrupamiento", filtro.getAgrupamiento());
        if (filtro.getIdNivel1() != null) {
            query.setParameter("id_nivel1", filtro.getIdNivel1());
        }
        if (filtro.getIdNivel2() != null) {
            query.setParameter("id_nivel2", filtro.getIdNivel2());
        }
        if (filtro.getIdNivel3() != null) {
            query.setParameter("id_nivel3", filtro.getIdNivel3());
        }
        if (filtro.getIdNivel4() != null) {
            query.setParameter("id_nivel4", filtro.getIdNivel4());
        }
        if (filtro.getIdNivel5() != null) {
            query.setParameter("id_nivel5", filtro.getIdNivel5());
        }
        if (filtro.getIdEstablecimiento() != null) {
            query.setParameter("id_establecimiento", filtro.getIdEstablecimiento());
        }
        if (filtro.getIdSede() != null) {
            query.setParameter("id_sede", filtro.getIdSede());
        }
        if (filtro.getIdPredio() != null) {
            query.setParameter("id_predio", filtro.getIdPredio());
        }
        return query.getResultList();
    }

    @Override
    public List<Object[]> consultarSostenibilidad(FiltroAmbitoSostenibilidad filtro) {
        if (filtro.isConsultaDeTiempoReal()) {
            if (ParamBaseDatos.POSTGRE.equals(UtilProperties.getDbMotor())) {
                return this.consultarSostenibilidadTiempoRealPostgre(filtro);
            } else {
                return this.consultarSostenibilidadTiempoRealOracle(filtro);
            }
        } else {
            return this.consultarSostenibilidadIndicadores(filtro);
        }
    }

    private List<Object[]> consultarSostenibilidadTiempoRealPostgre(FiltroAmbitoSostenibilidad filtro) {
        String codInstrumento = this.consultarCodInstrumentoPorPeriodo(filtro.getPeriodo());
        StringBuilder sql = new StringBuilder();
        StringBuilder orden = new StringBuilder();
//SELECT
        sql.append(" select distinct");
        if (filtro.isAgrupamientoPredio()) {
            orden.append(" n.codigo_nivel1,n.nombre_nivel1");
            orden.append(",n.codigo_nivel2,n.nombre_nivel2");
            orden.append(",n.codigo_nivel3,n.nombre_nivel3");
            orden.append(",n.codigo_nivel4,n.nombre_nivel4");
            orden.append(",n.codigo_nivel5,n.nombre_nivel5");
            orden.append(" ,n.codigo_establecimiento, n.nombre_establecimiento");
            orden.append(" ,n.codigo_sede, n.nombre_sede");
            orden.append(" ,n.codigo_predio, n.nombre_predio");
            //otros
            orden.append(" ,n.direccion_predio, n.propiedad_predio");
            orden.append(" ,n.nombre_zona, n.nombre_sector, n.nombre_clima");
            //etnias
            orden.append(" ,etnias.etnias");
            sql.append(orden.toString());
            //indicadores 
            sql.append(", serv_rec.disponibilidad_sistema_reciclaje");
            sql.append(", serv_rec.condicion_sistema_reciclaje");
            sql.append(", cons_agua.consumo_agua");
            sql.append(", cons_energia.consumo_energia_electrica");
            sql.append(", cons_agua.analisis_consumo_promedio_agua");
            sql.append(", cons_energia.analisis_consumo_promedio_energia_electrica");
            sql.append(", area_ver.disponibilidad_area_verde");
        } else {
            if (filtro.isAgrupamientoNivel0()) {
                orden.append(" n.nombre_nivel0");
            }
            if (filtro.isAgrupamientoNivel1()) {
                orden.append(" n.codigo_nivel1,n.nombre_nivel1");
            }
            if (filtro.isAgrupamientoNivel2()) {
                orden.append(" n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
            }
            if (filtro.isAgrupamientoNivel3()) {
                orden.append(" n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
            }
            if (filtro.isAgrupamientoNivel4()) {
                orden.append(" n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
                orden.append(",n.codigo_nivel4,n.nombre_nivel4");
            }
            if (filtro.isAgrupamientoNivel5()) {
                orden.append(" n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
                orden.append(",n.codigo_nivel4,n.nombre_nivel4");
                orden.append(",n.codigo_nivel5,n.nombre_nivel5");
            }
            if (filtro.isAgrupamientoEstablecimiento()) {
                orden.append(" n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
                orden.append(",n.codigo_nivel4,n.nombre_nivel4");
                orden.append(",n.codigo_nivel5,n.nombre_nivel5");
                orden.append(" ,n.codigo_establecimiento, n.nombre_establecimiento");
            }
            if (filtro.isAgrupamientoSede()) {
                orden.append(" n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
                orden.append(",n.codigo_nivel4,n.nombre_nivel4");
                orden.append(",n.codigo_nivel5,n.nombre_nivel5");
                orden.append(" ,n.codigo_establecimiento, n.nombre_establecimiento");
                orden.append(" ,n.codigo_sede, n.nombre_sede");
            }
            // datos informativos
            sql.append(orden.toString());
            sql.append(" , coalesce(pred_disp_rec.num_predios_disponibilidad_sistema_reciclaje,0) num_predios_disponibilidad");
            sql.append(" , coalesce(pred_cond_rec.num_predios_condicion_sistema_reciclaje,0) num_predios_condicion");
            if (filtro.getAnalisisConsumoAgua() != null) {
                sql.append(" ,coalesce(anal_agua.total_predios,0) analisis_agua");
            }
            if (filtro.getAnalisisConsumoEnergia() != null) {
                sql.append(" ,coalesce(anal_energia.total_predios,0) analisis_energia");
            }
            sql.append(" ,coalesce(num_predio.total,0) numero_predios");
            if (filtro.isAgrupamientoEstablecimiento()) {
                sql.append(" ,cump_leed.cumplimiento_area_verde_norma_LEED");
            } else {
                sql.append(" ,est_cump_leed.num_establecimientos_cump_area_verde_norma_LEED");
                if (!filtro.isAgrupamientoSede()) {
                    sql.append(" ,coalesce(num_estab.total,0) numero_establecimientos");
                }
            }
        }
// FROM 
        sql.append(" from cier.ind_auxiliar_indicador aux");
        sql.append(" inner join cier.ind_auxiliar_consultas n on n.id_predio = aux.id_predio and n.periodo = aux.periodo and n.id_tnt = aux.id_tnt");
        if (filtro.isAgrupamientoPredio()) {
            //etnias
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ETNIAS_PREDIO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) as etnias on etnias.id_dig_instrumento = aux.id_dig_instrumento and etnias.id_predio = aux.id_predio");
            //tipo de reciclaje
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_SERVICIO_DISPONIBILIDAD_SISTEMA_RECICLAJE, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) as serv_rec on serv_rec.id_dig_instrumento = aux.id_dig_instrumento and serv_rec.id_predio = aux.id_predio");
            //consumo agua
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_SERVICIO_CONSUMO_AGUA, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) as cons_agua on cons_agua.id_dig_instrumento = aux.id_dig_instrumento and cons_agua.id_predio = aux.id_predio");
            //consumo energia
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_SERVICIO_CONSUMO_ENERGIA_ELECTRICA, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) as cons_energia on cons_energia.id_dig_instrumento = aux.id_dig_instrumento and cons_energia.id_predio = aux.id_predio");
            //disponibilidad areas verdes
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_SOSTENIBILIDAD_DISPONIBILIDAD_AREA_VERDE_PREDIO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) as area_ver on area_ver.id_dig_instrumento = aux.id_dig_instrumento and area_ver.id_predio = aux.id_predio");
        } else {
            String strSQLNivelAgrupamiento = this.getSQLNivelAgrupamiento(filtro);
            // numero de predios por disponiblidad reciclaje
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_SERVICIO_NUM_PREDIOS_DISPONIBILIDAD_SISTEMA_RECICLAJE, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
            sql.append(String.format(" ) as pred_disp_rec on pred_disp_rec.%1$s = n.%1$s", strSQLNivelAgrupamiento));
            sql.append(" and pred_disp_rec.periodo = aux.periodo and pred_disp_rec.id_tnt = aux.id_tnt");
            // numero de predios por condicion reciclaje
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_SERVICIO_NUM_PREDIOS_CONDICION_SISTEMA_RECICLAJE, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
            sql.append(String.format(" ) as pred_cond_rec on pred_cond_rec.%1$s = n.%1$s", strSQLNivelAgrupamiento));
            sql.append(" and pred_cond_rec.periodo = aux.periodo and pred_cond_rec.id_tnt = aux.id_tnt");
            if (filtro.getAnalisisConsumoAgua() != null) {
                // numero de predios analisis
                sql.append(" left join (");
                sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_SERVICIO_NUM_PREDIOS_ANALISIS_CONSUMO_PROMEDIO_AGUA, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
                sql.append(String.format(" ) as anal_agua on anal_agua.%1$s = n.%1$s", strSQLNivelAgrupamiento));
                sql.append(" and anal_agua.periodo = aux.periodo and anal_agua.id_tnt = aux.id_tnt");
                sql.append(String.format(" and anal_agua.analisis_consumo_promedio_agua = '%s'", filtro.getAnalisisConsumoAgua()));
            }
            if (filtro.getAnalisisConsumoEnergia() != null) {
                // numero de predios analisis
                sql.append(" left join (");
                sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_SERVICIO_NUM_PREDIOS_ANALISIS_CONSUMO_PROMEDIO_ENERGIA_ELECTRICA, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
                sql.append(String.format(" ) as anal_energia on anal_energia.%1$s = n.%1$s", strSQLNivelAgrupamiento));
                sql.append(" and anal_energia.periodo = aux.periodo and anal_energia.id_tnt = aux.id_tnt");
                sql.append(String.format(" and anal_energia.analisis_consumo_promedio_energia_electrica = '%s'", filtro.getAnalisisConsumoEnergia()));
            }
            // total predios
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_TOTAL_PREDIOS, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
            sql.append(String.format(" ) as num_predio on num_predio.%1$s = n.%1$s", strSQLNivelAgrupamiento));
            sql.append(" and num_predio.periodo = aux.periodo and num_predio.id_tnt = aux.id_tnt");
            if (filtro.isAgrupamientoEstablecimiento()) {
                // cumplimiento áreas verdes norma LEED
                sql.append(" left join (");
                sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_SOSTENIBILIDAD_CUMPLIMIENTO_AREA_VERDE, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
                sql.append(String.format(" ) as cump_leed on cump_leed.%1$s = n.%1$s", strSQLNivelAgrupamiento));
                sql.append(" and cump_leed.periodo = aux.periodo and cump_leed.id_tnt = aux.id_tnt");
            } else {
                // cumplimiento áreas verdes norma LEED
                sql.append(" left join (");
                sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_SOSTENIBILIDAD_NUM_ESTABLECIMIENTOS_CUMPLIMIENTO_AREA_VERDE, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
                sql.append(String.format(" ) as est_cump_leed on est_cump_leed.%1$s = n.%1$s", strSQLNivelAgrupamiento));
                sql.append(" and est_cump_leed.periodo = aux.periodo and est_cump_leed.id_tnt = aux.id_tnt");
                if (!filtro.isAgrupamientoSede()) {
                    // numero de establecimientos
                    sql.append(" left join (");
                    sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_TOTAL_ESTABLECIMIENTOS, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
                    sql.append(String.format(" ) as num_estab on num_estab.%1$s = n.%1$s", strSQLNivelAgrupamiento));
                    sql.append(" and num_estab.periodo = aux.periodo and num_estab.id_tnt = aux.id_tnt");
                }
            }
        }
// WHERE
        sql.append(" where aux.id_tnt = ?id_tnt and aux.periodo = ?periodo");
        if (filtro.isAgrupamientoPredio()) {
            sql.append(" and n.principal_establecimiento = 1");
        }
        if (filtro.getIdNivel0() != null) {
            sql.append(" and n.id_nivel0 = ?id_nivel0");
        }
        if (filtro.getIdNivel1() != null) {
            sql.append(" and n.id_nivel1 = ?id_nivel1");
        }
        if (filtro.getIdNivel2() != null) {
            sql.append(" and n.id_nivel2 = ?id_nivel2");
        }
        if (filtro.getIdNivel3() != null) {
            sql.append(" and n.id_nivel3 = ?id_nivel3");
        }
        if (filtro.getIdNivel4() != null) {
            sql.append(" and n.id_nivel4 = ?id_nivel4");
        }
        if (filtro.getIdNivel5() != null) {
            sql.append(" and n.id_nivel5 = ?id_nivel5");
        }
        if (filtro.getIdEstablecimiento() != null) {
            sql.append(" and n.id_establecimiento = ?id_establecimiento");
        }
        if (filtro.getIdSede() != null) {
            sql.append(" and n.id_sede = ?id_sede");
        }
        if (filtro.getIdPredio() != null) {
            sql.append(" and n.id_predio = ?id_predio");
        }
        // otros filtros
        if (filtro.getCodZona() != null) {
            sql.append(" and n.codigo_zona = ?cod_zona");
        }
        if (filtro.getCodSector() != null) {
            sql.append(" and n.codigo_sector = ?cod_sector");
        }
        if (filtro.getCodClima() != null) {
            sql.append(" and n.codigo_clima = ?cod_clima");
        }
        if (filtro.getCondicionReciclaje() != null) {
            if (filtro.isAgrupamientoPredio()) {
                sql.append(" and serv_rec.condicion_sistema_reciclaje  = ?cond_reciclaje");
            } else {
                sql.append(" and pred_cond_rec.condicion_sistema_reciclaje = ?cond_reciclaje");
            }
        }
        if (filtro.isAgrupamientoPredio()) {
            if (filtro.getDisponibilidadReciclaje() != null) {
                sql.append(" and serv_rec.disponibilidad_sistema_reciclaje = ?disp_servicio");
            }
            if (filtro.getAnalisisConsumoAgua() != null) {
                sql.append(" and cons_agua.analisis_consumo_promedio_agua = ?analisis_agua");
            }
            if (filtro.getAnalisisConsumoEnergia() != null) {
                sql.append(" and cons_energia.analisis_consumo_promedio_energia_electrica = ?analisis_energia");
            }
        }
        // ORDER BY 
        sql.append(" ORDER by ");
        sql.append(orden.toString());

        String auxSql = sql.toString();
        auxSql = auxSql.replaceAll("\\?start", "");
        auxSql = auxSql.replaceAll("\\?end", "");
        if (!filtro.isAgrupamientoPredio() && filtro.getDisponibilidadReciclaje() != null) {
            String disp_servicio = filtro.getDisponibilidadReciclaje().equalsIgnoreCase("sql.ind.general.si") ? "1" : "0";
            auxSql = auxSql.replaceAll("\\?disp_servicio", "'" + disp_servicio + "'");
        }

        Query query = tpm.getEm().createNativeQuery(auxSql);
        query.setParameter("id_tnt", tpm.getCurrentTenant());
        query.setParameter("periodo", filtro.getPeriodo());
        query.setParameter("id_nivel0", filtro.getIdNivel0());
        if (filtro.getIdNivel1() != null) {
            query.setParameter("id_nivel1", filtro.getIdNivel1());
        }
        if (filtro.getIdNivel2() != null) {
            query.setParameter("id_nivel2", filtro.getIdNivel2());
        }
        if (filtro.getIdNivel3() != null) {
            query.setParameter("id_nivel3", filtro.getIdNivel3());
        }
        if (filtro.getIdNivel4() != null) {
            query.setParameter("id_nivel4", filtro.getIdNivel4());
        }
        if (filtro.getIdNivel5() != null) {
            query.setParameter("id_nivel5", filtro.getIdNivel5());
        }
        if (filtro.getIdEstablecimiento() != null) {
            query.setParameter("id_establecimiento", filtro.getIdEstablecimiento());
        }
        if (filtro.getIdSede() != null) {
            query.setParameter("id_sede", filtro.getIdSede());
        }
        if (filtro.getIdPredio() != null) {
            query.setParameter("id_predio", filtro.getIdPredio());
        }
        // otros filtros
        if (filtro.getCodZona() != null) {
            query.setParameter("cod_zona", filtro.getCodZona());
        }
        if (filtro.getCodSector() != null) {
            query.setParameter("cod_sector", filtro.getCodSector());
        }
        if (filtro.getCodClima() != null) {
            query.setParameter("cod_clima", filtro.getCodClima());
        }
        if (filtro.getCondicionReciclaje() != null) {
            query.setParameter("cond_reciclaje", filtro.getCondicionReciclaje().toString());
        }
        if (filtro.isAgrupamientoPredio()) {
            if (filtro.getDisponibilidadReciclaje() != null) {
                query.setParameter("disp_servicio", filtro.getDisponibilidadReciclaje());
            }
            if (filtro.getAnalisisConsumoAgua() != null) {
                query.setParameter("analisis_agua", filtro.getAnalisisConsumoAgua());
            }
            if (filtro.getAnalisisConsumoEnergia() != null) {
                query.setParameter("analisis_energia", filtro.getAnalisisConsumoEnergia());
            }
        }
        return query.getResultList();
    }

    private List<Object[]> consultarSostenibilidadTiempoRealOracle(FiltroAmbitoSostenibilidad filtro) {
        String codInstrumento = this.consultarCodInstrumentoPorPeriodo(filtro.getPeriodo());
        StringBuilder sql = new StringBuilder();
        StringBuilder orden = new StringBuilder();
        String funcion = "";
        if (ParamBaseDatos.ORACLE.equals(UtilProperties.getDbMotor())) {
            funcion = "nvl";
        } else {
            funcion = "coalesce";
        }
//SELECT
        sql.append(" select distinct");
        if (filtro.isAgrupamientoPredio()) {
            orden.append(" n.codigo_nivel1,n.nombre_nivel1");
            orden.append(",n.codigo_nivel2,n.nombre_nivel2");
            orden.append(",n.codigo_nivel3,n.nombre_nivel3");
            orden.append(",n.codigo_nivel4,n.nombre_nivel4");
            orden.append(",n.codigo_nivel5,n.nombre_nivel5");
            orden.append(" ,n.codigo_establecimiento, n.nombre_establecimiento");
            orden.append(" ,n.codigo_sede, n.nombre_sede");
            orden.append(" ,n.codigo_predio, n.nombre_predio");
            //otros
            orden.append(" ,n.direccion_predio, n.propiedad_predio");
            orden.append(" ,n.nombre_zona, n.nombre_sector, n.nombre_clima");
            //etnias
            orden.append(" ,etnias.etnias");
            sql.append(orden.toString());
            //indicadores 
            sql.append(", serv_rec.dispo_sistema_reciclaje");
            sql.append(", serv_rec.cond_sistema_reciclaje");
            sql.append(", cons_agua.consumo_agua");
            sql.append(", cons_energia.consumo_energia_electrica");
            sql.append(", cons_agua.analisis_consumo_promedio_agua");
            sql.append(", cons_energia.analis_cons_prom_ener_elect");
            sql.append(", area_ver.disponibilidad_area_verde");
        } else {
            if (filtro.isAgrupamientoNivel0()) {
                orden.append(" n.nombre_nivel0");
            }
            if (filtro.isAgrupamientoNivel1()) {
                orden.append(" n.codigo_nivel1,n.nombre_nivel1");
            }
            if (filtro.isAgrupamientoNivel2()) {
                orden.append(" n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
            }
            if (filtro.isAgrupamientoNivel3()) {
                orden.append(" n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
            }
            if (filtro.isAgrupamientoNivel4()) {
                orden.append(" n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
                orden.append(",n.codigo_nivel4,n.nombre_nivel4");
            }
            if (filtro.isAgrupamientoNivel5()) {
                orden.append(" n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
                orden.append(",n.codigo_nivel4,n.nombre_nivel4");
                orden.append(",n.codigo_nivel5,n.nombre_nivel5");
            }
            if (filtro.isAgrupamientoEstablecimiento()) {
                orden.append(" n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
                orden.append(",n.codigo_nivel4,n.nombre_nivel4");
                orden.append(",n.codigo_nivel5,n.nombre_nivel5");
                orden.append(" ,n.codigo_establecimiento, n.nombre_establecimiento");
            }
            if (filtro.isAgrupamientoSede()) {
                orden.append(" n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
                orden.append(",n.codigo_nivel4,n.nombre_nivel4");
                orden.append(",n.codigo_nivel5,n.nombre_nivel5");
                orden.append(" ,n.codigo_establecimiento, n.nombre_establecimiento");
                orden.append(" ,n.codigo_sede, n.nombre_sede");
            }
            // datos informativos
            sql.append(orden.toString());
            sql.append(" , ").append(funcion).append("(pred_disp_rec.valor,0) num_predios_disponibilidad");
            sql.append(" , ").append(funcion).append("(pred_cond_rec.num_pred_cond_sis_rec,0) num_predios_condicion");
            if (filtro.getAnalisisConsumoAgua() != null) {
                sql.append(" ,").append(funcion).append("(anal_agua.total_predios,0) analisis_agua");
            }
            if (filtro.getAnalisisConsumoEnergia() != null) {
                sql.append(" ,").append(funcion).append("(anal_energia.total_predios,0) analisis_energia");
            }
            sql.append(" ,").append(funcion).append("(num_predio.total,0) numero_predios");
            if (filtro.isAgrupamientoEstablecimiento()) {
                sql.append(" ,cump_leed.cumpli_area_verde_norma_LEED");
            } else {
                sql.append(" ,est_cump_leed.num_cum_area_verde_norma_leed");
                if (!filtro.isAgrupamientoSede()) {
                    sql.append(" ,").append(funcion).append("(num_estab.total,0) numero_establecimientos");
                }
            }
        }
// FROM 
        sql.append(" from ind_auxiliar_indicador aux");
        sql.append(" inner join ind_auxiliar_consultas n on n.id_predio = aux.id_predio and n.periodo = aux.periodo and n.id_tnt = aux.id_tnt");
        if (filtro.isAgrupamientoPredio()) {
            //etnias
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ETNIAS_PREDIO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) etnias on etnias.id_predio = aux.id_predio");
            //tipo de reciclaje
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_SERVICIO_DISPONIBILIDAD_SISTEMA_RECICLAJE, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) serv_rec on serv_rec.id_predio = aux.id_predio");
            //consumo agua
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_SERVICIO_CONSUMO_AGUA, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) cons_agua on cons_agua.id_predio = aux.id_predio");
            //consumo energia
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_SERVICIO_CONSUMO_ENERGIA_ELECTRICA, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) cons_energia on cons_energia.id_predio = aux.id_predio");
            //disponibilidad areas verdes
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_SOSTENIBILIDAD_DISPONIBILIDAD_AREA_VERDE_PREDIO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) area_ver on area_ver.id_predio = aux.id_predio");
        } else {
            String strSQLNivelAgrupamiento = this.getSQLNivelAgrupamiento(filtro);
            // numero de predios por disponiblidad reciclaje
            sql.append(" left join (");
            String formula = this.consultarFormulaSQLIndicador(ParamIndicador.IND_SERVICIO_NUM_PREDIOS_DISPONIBILIDAD_SISTEMA_RECICLAJE, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo());
            if (filtro.getDisponibilidadReciclaje() != null) {
                String disp_servicio = filtro.getDisponibilidadReciclaje().equalsIgnoreCase("sql.ind.general.si") ? "1" : "0";
                formula = formula.replaceAll("\\?disp_servicio", disp_servicio);
            }
            sql.append(formula);
            sql.append(String.format(" ) pred_disp_rec on pred_disp_rec.%1$s = n.%1$s", strSQLNivelAgrupamiento));
            sql.append(" and pred_disp_rec.periodo = aux.periodo and pred_disp_rec.id_tnt = aux.id_tnt");
            // numero de predios por condicion reciclaje
            sql.append(" left join (");
            formula = this.consultarFormulaSQLIndicador(ParamIndicador.IND_SERVICIO_NUM_PREDIOS_CONDICION_SISTEMA_RECICLAJE, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo());
            if (filtro.getCondicionReciclaje() != null) {
                formula = formula.replaceAll("\\?cond_servicio", filtro.getCondicionReciclaje().toString());
            }
            sql.append(formula);
            sql.append(String.format(" ) pred_cond_rec on pred_cond_rec.%1$s = n.%1$s", strSQLNivelAgrupamiento));
            sql.append(" and pred_cond_rec.periodo = aux.periodo and pred_cond_rec.id_tnt = aux.id_tnt");
            if (filtro.getAnalisisConsumoAgua() != null) {
                // numero de predios analisis
                sql.append(" left join (");
                sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_SERVICIO_NUM_PREDIOS_ANALISIS_CONSUMO_PROMEDIO_AGUA, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
                sql.append(String.format(" ) anal_agua on anal_agua.%1$s = n.%1$s", strSQLNivelAgrupamiento));
                sql.append(" and anal_agua.periodo = aux.periodo and anal_agua.id_tnt = aux.id_tnt");
                sql.append(String.format(" and anal_agua.analisis_consumo_promedio_agua = '%s'", filtro.getAnalisisConsumoAgua()));
            }
            if (filtro.getAnalisisConsumoEnergia() != null) {
                // numero de predios analisis
                sql.append(" left join (");
                sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_SERVICIO_NUM_PREDIOS_ANALISIS_CONSUMO_PROMEDIO_ENERGIA_ELECTRICA, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
                sql.append(String.format(" ) anal_energia on anal_energia.%1$s = n.%1$s", strSQLNivelAgrupamiento));
                sql.append(" and anal_energia.periodo = aux.periodo and anal_energia.id_tnt = aux.id_tnt");
                sql.append(String.format(" and anal_energia.analisis_con_pro_ene_ele = '%s'", filtro.getAnalisisConsumoEnergia()));
            }
            // total predios
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_TOTAL_PREDIOS, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
            sql.append(String.format(" ) num_predio on num_predio.%1$s = n.%1$s", strSQLNivelAgrupamiento));
            sql.append(" and num_predio.periodo = aux.periodo and num_predio.id_tnt = aux.id_tnt");
            if (filtro.isAgrupamientoEstablecimiento()) {
                // cumplimiento áreas verdes norma LEED
                sql.append(" left join (");
                sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_SOSTENIBILIDAD_CUMPLIMIENTO_AREA_VERDE, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
                sql.append(String.format(" ) cump_leed on cump_leed.%1$s = n.%1$s", strSQLNivelAgrupamiento));
                sql.append(" and cump_leed.periodo = aux.periodo and cump_leed.id_tnt = aux.id_tnt");
            } else {
                // cumplimiento áreas verdes norma LEED
                sql.append(" left join (");
                sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_SOSTENIBILIDAD_NUM_ESTABLECIMIENTOS_CUMPLIMIENTO_AREA_VERDE, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
                sql.append(String.format(" ) est_cump_leed on est_cump_leed.%1$s = n.%1$s", strSQLNivelAgrupamiento));
                sql.append(" and est_cump_leed.periodo = aux.periodo and est_cump_leed.id_tnt = aux.id_tnt");
                if (!filtro.isAgrupamientoSede()) {
                    // numero de establecimientos
                    sql.append(" left join (");
                    sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_TOTAL_ESTABLECIMIENTOS, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
                    sql.append(String.format(" ) num_estab on num_estab.%1$s = n.%1$s", strSQLNivelAgrupamiento));
                    sql.append(" and num_estab.periodo = aux.periodo and num_estab.id_tnt = aux.id_tnt");
                }
            }
        }
// WHERE
        sql.append(" where aux.id_tnt = ?id_tnt and aux.periodo = ?periodo");
        if (filtro.isAgrupamientoPredio()) {
            sql.append(" and n.principal_establecimiento = 1");
        }
        if (filtro.getIdNivel0() != null) {
            sql.append(" and n.id_nivel0 = ?id_nivel0");
        }
        if (filtro.getIdNivel1() != null) {
            sql.append(" and n.id_nivel1 = ?id_nivel1");
        }
        if (filtro.getIdNivel2() != null) {
            sql.append(" and n.id_nivel2 = ?id_nivel2");
        }
        if (filtro.getIdNivel3() != null) {
            sql.append(" and n.id_nivel3 = ?id_nivel3");
        }
        if (filtro.getIdNivel4() != null) {
            sql.append(" and n.id_nivel4 = ?id_nivel4");
        }
        if (filtro.getIdNivel5() != null) {
            sql.append(" and n.id_nivel5 = ?id_nivel5");
        }
        if (filtro.getIdEstablecimiento() != null) {
            sql.append(" and n.id_establecimiento = ?id_establecimiento");
        }
        if (filtro.getIdSede() != null) {
            sql.append(" and n.id_sede = ?id_sede");
        }
        if (filtro.getIdPredio() != null) {
            sql.append(" and n.id_predio = ?id_predio");
        }
        // otros filtros
        if (filtro.getCodZona() != null) {
            sql.append(" and n.codigo_zona = ?cod_zona");
        }
        if (filtro.getCodSector() != null) {
            sql.append(" and n.codigo_sector = ?cod_sector");
        }
        if (filtro.getCodClima() != null) {
            sql.append(" and n.codigo_clima = ?cod_clima");
        }

        if (filtro.isAgrupamientoPredio()) {
            if (filtro.getCondicionReciclaje() != null) {
                sql.append(" and serv_rec.cond_sistema_reciclaje  = ?cond_reciclaje");
            }
            if (filtro.getDisponibilidadReciclaje() != null) {
                sql.append(" and serv_rec.dispo_sistema_reciclaje = ?disp_servicio");
            }
            if (filtro.getAnalisisConsumoAgua() != null) {
                sql.append(" and cons_agua.analisis_consumo_promedio_agua = ?analisis_agua");
            }
            if (filtro.getAnalisisConsumoEnergia() != null) {
                sql.append(" and cons_energia.analis_cons_prom_ener_elect = ?analisis_energia");
            }
        }
        // ORDER BY 
        sql.append(" ORDER by ");
        sql.append(orden.toString());

        String auxSql = sql.toString();
        if (ParamBaseDatos.POSTGRE.equals(UtilProperties.getDbMotor())) {
            auxSql = auxSql.replaceAll("\\?start", "");
            auxSql = auxSql.replaceAll("\\?end", "");

        }

        Query query = tpm.getEm().createNativeQuery(auxSql);
        query.setParameter("id_tnt", tpm.getCurrentTenant());
        query.setParameter("periodo", filtro.getPeriodo());
        query.setParameter("id_nivel0", filtro.getIdNivel0());
        if (filtro.getIdNivel1() != null) {
            query.setParameter("id_nivel1", filtro.getIdNivel1());
        }
        if (filtro.getIdNivel2() != null) {
            query.setParameter("id_nivel2", filtro.getIdNivel2());
        }
        if (filtro.getIdNivel3() != null) {
            query.setParameter("id_nivel3", filtro.getIdNivel3());
        }
        if (filtro.getIdNivel4() != null) {
            query.setParameter("id_nivel4", filtro.getIdNivel4());
        }
        if (filtro.getIdNivel5() != null) {
            query.setParameter("id_nivel5", filtro.getIdNivel5());
        }
        if (filtro.getIdEstablecimiento() != null) {
            query.setParameter("id_establecimiento", filtro.getIdEstablecimiento());
        }
        if (filtro.getIdSede() != null) {
            query.setParameter("id_sede", filtro.getIdSede());
        }
        if (filtro.getIdPredio() != null) {
            query.setParameter("id_predio", filtro.getIdPredio());
        }
        // otros filtros
        if (filtro.getCodZona() != null) {
            query.setParameter("cod_zona", filtro.getCodZona());
        }
        if (filtro.getCodSector() != null) {
            query.setParameter("cod_sector", filtro.getCodSector());
        }
        if (filtro.getCodClima() != null) {
            query.setParameter("cod_clima", filtro.getCodClima());
        }

        if (filtro.isAgrupamientoPredio()) {
            if (filtro.getCondicionReciclaje() != null) {
                query.setParameter("cond_reciclaje", filtro.getCondicionReciclaje().toString());
            }
            if (filtro.getDisponibilidadReciclaje() != null) {
                query.setParameter("disp_servicio", filtro.getDisponibilidadReciclaje());
            }
            if (filtro.getAnalisisConsumoAgua() != null) {
                query.setParameter("analisis_agua", filtro.getAnalisisConsumoAgua());
            }
            if (filtro.getAnalisisConsumoEnergia() != null) {
                query.setParameter("analisis_energia", filtro.getAnalisisConsumoEnergia());
            }
        }
        return query.getResultList();
    }

    private List<Object[]> consultarSostenibilidadIndicadores(FiltroAmbitoSostenibilidad filtro) {
        StringBuilder sql = new StringBuilder();
        StringBuilder orden = new StringBuilder();
//SELECT
        sql.append(" select distinct");
        if (filtro.isAgrupamientoPredio()) {
            orden.append(" n.codigo_nivel1,n.nombre_nivel1");
            orden.append(",n.codigo_nivel2,n.nombre_nivel2");
            orden.append(",n.codigo_nivel3,n.nombre_nivel3");
            orden.append(",n.codigo_nivel4,n.nombre_nivel4");
            orden.append(",n.codigo_nivel5,n.nombre_nivel5");
            orden.append(" ,n.codigo_establecimiento, n.nombre_establecimiento");
            orden.append(" ,n.codigo_sede, n.nombre_sede");
            orden.append(" ,n.codigo_predio, n.nombre_predio");
            //otros
            orden.append(" ,n.direccion_predio, n.propiedad_predio");
            orden.append(" ,n.nombre_zona, n.nombre_sector, n.nombre_clima");
            //etnias
            orden.append(" ,etnias.valor");
            sql.append(orden.toString());
            //indicadores 
            sql.append(" ,serv_rec_disp.valor disponibilidad_reciclaje");
            sql.append(" ,serv_rec_cond.valor condicion_reciclaje");
            sql.append(" ,cons_agua.valor consumo_agua");
            sql.append(" ,cons_energia.valor consumo_energia_electrica");
            sql.append(", anal_agua.valor analisis_agua");
            sql.append(" ,anal_energia.valor analisis_energia_electrica");
            sql.append(" ,area_ver.valor disponibilidad_area_verde");
        } else {
            if (filtro.isAgrupamientoNivel0()) {
                orden.append(" n.nombre_nivel0");
            }
            if (filtro.isAgrupamientoNivel1()) {
                orden.append(" n.codigo_nivel1,n.nombre_nivel1");
            }
            if (filtro.isAgrupamientoNivel2()) {
                orden.append(" n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
            }
            if (filtro.isAgrupamientoNivel3()) {
                orden.append(" n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
            }
            if (filtro.isAgrupamientoNivel4()) {
                orden.append(" n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
                orden.append(",n.codigo_nivel4,n.nombre_nivel4");
            }
            if (filtro.isAgrupamientoNivel5()) {
                orden.append(" n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
                orden.append(",n.codigo_nivel4,n.nombre_nivel4");
                orden.append(",n.codigo_nivel5,n.nombre_nivel5");
            }
            if (filtro.isAgrupamientoEstablecimiento()) {
                orden.append(" n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
                orden.append(",n.codigo_nivel4,n.nombre_nivel4");
                orden.append(",n.codigo_nivel5,n.nombre_nivel5");
                orden.append(" ,n.codigo_establecimiento, n.nombre_establecimiento");
            }
            if (filtro.isAgrupamientoSede()) {
                orden.append(" n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
                orden.append(",n.codigo_nivel4,n.nombre_nivel4");
                orden.append(",n.codigo_nivel5,n.nombre_nivel5");
                orden.append(" ,n.codigo_establecimiento, n.nombre_establecimiento");
                orden.append(" ,n.codigo_sede, n.nombre_sede");
            }
            // datos informativos
            sql.append(orden.toString());
            sql.append(" ,coalesce(pred_disp_rec.valor,'0') num_predios_disponibilidad");
            sql.append(" ,coalesce(pred_cond_rec.valor,'0') num_predios_condicion");
            if (filtro.getAnalisisConsumoAgua() != null) {
                sql.append(" ,coalesce(anal_agua.valor,'0') analisis_agua");
            }
            if (filtro.getAnalisisConsumoEnergia() != null) {
                sql.append(" ,coalesce(anal_energia.valor,'0') analisis_energia");
            }
            sql.append(" ,coalesce(num_predio.valor,'0') numero_predios");
            if (filtro.isAgrupamientoEstablecimiento() || filtro.isAgrupamientoSede()) {
                sql.append(" ,cump_leed.valor cumplimiento_area_verde_norma_LEED");
            } else {
                sql.append(" ,est_cump_leed.valor num_cum_area_verde_norma_leed");
                sql.append(" ,coalesce(num_estab.valor,'0') numero_establecimientos");
            }
        }
// FROM 
        sql.append(" from ind_auxiliar_indicador aux");
        sql.append(" inner join ind_auxiliar_consultas n on n.id_predio = aux.id_predio and n.periodo = aux.periodo and n.id_tnt = aux.id_tnt");
        String strSQLNivelAgrupamiento = this.getSQLNivelAgrupamiento(filtro);
        String strSQLConsultarIndicador = this.getSQLConsultarIndicadorAlmacenado();
        if (filtro.isAgrupamientoPredio()) {
            //etnias
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) etnias on etnias.id_tnt = aux.id_tnt and etnias.periodo = aux.periodo");
            sql.append(String.format(" and etnias.cod_indicador = '%s'", ParamIndicador.IND_ETNIAS_PREDIO));
            sql.append(" and etnias.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and etnias.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            //dispo_sistema_reciclaje
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) serv_rec_disp on serv_rec_disp.id_tnt = aux.id_tnt and serv_rec_disp.periodo = aux.periodo");
            sql.append(String.format(" and serv_rec_disp.cod_indicador = '%s'", ParamIndicador.IND_SERVICIO_DISPONIBILIDAD_SISTEMA_RECICLAJE));
            sql.append(" and serv_rec_disp.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and serv_rec_disp.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            //cond_sistema_reciclaje            
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) serv_rec_cond on serv_rec_cond.id_tnt = aux.id_tnt and serv_rec_cond.periodo = aux.periodo");
            sql.append(String.format(" and serv_rec_cond.cod_indicador = '%s'", ParamIndicador.IND_SERVICIO_CONDICION_SISTEMA_RECICLAJE));
            sql.append(" and serv_rec_cond.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and serv_rec_cond.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            //consumo agua
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) cons_agua on cons_agua.id_tnt = aux.id_tnt and cons_agua.periodo = aux.periodo");
            sql.append(String.format(" and cons_agua.cod_indicador = '%s'", ParamIndicador.IND_SERVICIO_CONSUMO_AGUA));
            sql.append(" and cons_agua.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and cons_agua.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            //consumo energia
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) cons_energia on cons_energia.id_tnt = aux.id_tnt and cons_energia.periodo = aux.periodo");
            sql.append(String.format(" and cons_energia.cod_indicador = '%s'", ParamIndicador.IND_SERVICIO_CONSUMO_ENERGIA_ELECTRICA));
            sql.append(" and cons_energia.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and cons_energia.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            //consumo analisis agua
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) anal_agua on anal_agua.id_tnt = aux.id_tnt and anal_agua.periodo = aux.periodo");
            sql.append(String.format(" and anal_agua.cod_indicador = '%s'", ParamIndicador.IND_SERVICIO_ANALISIS_CONSUMO_PROMEDIO_AGUA));
            sql.append(" and anal_agua.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and anal_agua.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            //consumo analisis energia
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) anal_energia on anal_energia.id_tnt = aux.id_tnt and anal_energia.periodo = aux.periodo");
            sql.append(String.format(" and anal_energia.cod_indicador = '%s'", ParamIndicador.IND_SERVICIO_ANALISIS_CONSUMO_PROMEDIO_ENERGIA_ELECTRICA));
            sql.append(" and anal_energia.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and anal_energia.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            //disponibilidad areas verdes
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) area_ver on area_ver.id_tnt = aux.id_tnt and area_ver.periodo = aux.periodo");
            sql.append(String.format(" and area_ver.cod_indicador = '%s'", ParamIndicador.IND_SOSTENIBILIDAD_DISPONIBILIDAD_AREA_VERDE_PREDIO));
            sql.append(" and area_ver.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and area_ver.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
        } else {
            //dispo_sistema_reciclaje
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) pred_disp_rec on pred_disp_rec.id_tnt = aux.id_tnt and pred_disp_rec.periodo = aux.periodo");
            sql.append(String.format(" and pred_disp_rec.cod_indicador = '%s'", ParamIndicador.IND_SERVICIO_NUM_PREDIOS_DISPONIBILIDAD_SISTEMA_RECICLAJE));
            sql.append(" and pred_disp_rec.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and pred_disp_rec.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            sql.append(" and pred_disp_rec.cod_valor = '").append(filtro.getDisponibilidadReciclaje()).append("'");
            //num_predios_condicion            
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) pred_cond_rec on pred_cond_rec.id_tnt = aux.id_tnt and pred_cond_rec.periodo = aux.periodo");
            sql.append(String.format(" and pred_cond_rec.cod_indicador = '%s'", ParamIndicador.IND_SERVICIO_NUM_PREDIOS_CONDICION_SISTEMA_RECICLAJE));
            sql.append(" and pred_cond_rec.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and pred_cond_rec.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            if (filtro.getAnalisisConsumoAgua() != null) {
                // numero de predios analisis
                sql.append(" left join (");
                sql.append(strSQLConsultarIndicador);
                sql.append(" ) anal_agua on anal_agua.id_tnt = aux.id_tnt and anal_agua.periodo = aux.periodo");
                sql.append(String.format(" and anal_agua.cod_indicador = '%s'", ParamIndicador.IND_SERVICIO_NUM_PREDIOS_ANALISIS_CONSUMO_PROMEDIO_AGUA));
                sql.append(" and anal_agua.nivel_agrupamiento = ?nivel_agrupamiento");
                sql.append(" and anal_agua.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
                sql.append(String.format(" and anal_agua.cod_valor = '%s'", filtro.getAnalisisConsumoAgua()));
            }
            if (filtro.getAnalisisConsumoEnergia() != null) {
                // numero de predios analisis
                sql.append(" left join (");
                sql.append(strSQLConsultarIndicador);
                sql.append(" ) anal_energia on anal_energia.id_tnt = aux.id_tnt and anal_energia.periodo = aux.periodo");
                sql.append(String.format(" and anal_energia.cod_indicador = '%s'", ParamIndicador.IND_SERVICIO_NUM_PREDIOS_ANALISIS_CONSUMO_PROMEDIO_ENERGIA_ELECTRICA));
                sql.append(" and anal_energia.nivel_agrupamiento = ?nivel_agrupamiento");
                sql.append(" and anal_energia.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
                sql.append(String.format(" and anal_energia.cod_valor = '%s'", filtro.getAnalisisConsumoEnergia()));
            }
            //total_predio
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) num_predio on num_predio.id_tnt = aux.id_tnt and num_predio.periodo = aux.periodo");
            sql.append(String.format(" and num_predio.cod_indicador = '%s'", ParamIndicador.IND_TOTAL_PREDIOS));
            sql.append(" and num_predio.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and num_predio.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            if (filtro.isAgrupamientoEstablecimiento() || filtro.isAgrupamientoSede()) {
                // cumplimiento áreas verdes norma LEED
                sql.append(" left join (");
                sql.append(strSQLConsultarIndicador);
                sql.append(" ) cump_leed on cump_leed.id_tnt = aux.id_tnt and cump_leed.periodo = aux.periodo");
                sql.append(String.format(" and cump_leed.cod_indicador = '%s'", ParamIndicador.IND_SOSTENIBILIDAD_CUMPLIMIENTO_AREA_VERDE));
                sql.append(" and cump_leed.nivel_agrupamiento = ?nivel_agrupamiento");
                sql.append(" and cump_leed.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            } else {
                // numero de establecimientos que cumplen áreas verdes norma LEED
                sql.append(" left join (");
                sql.append(strSQLConsultarIndicador);
                sql.append(" ) est_cump_leed on est_cump_leed.id_tnt = aux.id_tnt and est_cump_leed.periodo = aux.periodo");
                sql.append(String.format(" and est_cump_leed.cod_indicador = '%s'", ParamIndicador.IND_SOSTENIBILIDAD_NUM_ESTABLECIMIENTOS_CUMPLIMIENTO_AREA_VERDE));
                sql.append(" and est_cump_leed.nivel_agrupamiento = ?nivel_agrupamiento");
                sql.append(" and est_cump_leed.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
                // numero de establecimientos
                sql.append(" left join (");
                sql.append(strSQLConsultarIndicador);
                sql.append(" ) num_estab on num_estab.id_tnt = aux.id_tnt and num_estab.periodo = aux.periodo");
                sql.append(String.format(" and num_estab.cod_indicador = '%s'", ParamIndicador.IND_TOTAL_ESTABLECIMIENTOS));
                sql.append(" and num_estab.nivel_agrupamiento = ?nivel_agrupamiento");
                sql.append(" and num_estab.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            }
        }
// WHERE
        sql.append(" where aux.id_tnt = ?id_tnt and aux.periodo = ?periodo");
        if (filtro.isAgrupamientoPredio()) {
            sql.append(" and n.principal_establecimiento = 1");
        }
        if (filtro.getIdNivel0() != null) {
            sql.append(" and n.id_nivel0 = ?id_nivel0");
        }
        if (filtro.getIdNivel1() != null) {
            sql.append(" and n.id_nivel1 = ?id_nivel1");
        }
        if (filtro.getIdNivel2() != null) {
            sql.append(" and n.id_nivel2 = ?id_nivel2");
        }
        if (filtro.getIdNivel3() != null) {
            sql.append(" and n.id_nivel3 = ?id_nivel3");
        }
        if (filtro.getIdNivel4() != null) {
            sql.append(" and n.id_nivel4 = ?id_nivel4");
        }
        if (filtro.getIdNivel5() != null) {
            sql.append(" and n.id_nivel5 = ?id_nivel5");
        }
        if (filtro.getIdEstablecimiento() != null) {
            sql.append(" and n.id_establecimiento = ?id_establecimiento");
        }
        if (filtro.getIdSede() != null) {
            sql.append(" and n.id_sede = ?id_sede");
        }
        if (filtro.getIdPredio() != null) {
            sql.append(" and n.id_predio = ?id_predio");
        }
        // otros filtros
        if (filtro.getCodZona() != null) {
            sql.append(" and n.codigo_zona = ?cod_zona");
        }
        if (filtro.getCodSector() != null) {
            sql.append(" and n.codigo_sector = ?cod_sector");
        }
        if (filtro.getCodClima() != null) {
            sql.append(" and n.codigo_clima = ?cod_clima");
        }
        if (filtro.getCondicionReciclaje() != null) {
            if (filtro.isAgrupamientoPredio()) {
                sql.append(" and serv_rec_cond.valor  = ?cond_reciclaje");
            } else {
                sql.append(" and pred_cond_rec.cod_valor  = ?cond_reciclaje");
            }
        }
        if (filtro.isAgrupamientoPredio()) {
            if (filtro.getDisponibilidadReciclaje() != null) {
                sql.append(" and serv_rec_disp.valor = ?disp_servicio");
            }
            if (filtro.getAnalisisConsumoAgua() != null) {
                sql.append(" and anal_agua.valor = ?analisis_agua");
            }
            if (filtro.getAnalisisConsumoEnergia() != null) {
                sql.append(" and anal_energia.valor = ?analisis_energia");
            }
        }
        // ORDER BY 
        sql.append(" ORDER by ");
        sql.append(orden.toString());

        Query query = tpm.getEm().createNativeQuery(sql.toString());
        query.setParameter("id_tnt", tpm.getCurrentTenant());
        query.setParameter("periodo", filtro.getPeriodo());
        query.setParameter("idioma", filtro.getIdioma());
        query.setParameter("id_nivel0", filtro.getIdNivel0());
        query.setParameter("nivel_agrupamiento", filtro.getAgrupamiento());
        if (filtro.getIdNivel1() != null) {
            query.setParameter("id_nivel1", filtro.getIdNivel1());
        }
        if (filtro.getIdNivel2() != null) {
            query.setParameter("id_nivel2", filtro.getIdNivel2());
        }
        if (filtro.getIdNivel3() != null) {
            query.setParameter("id_nivel3", filtro.getIdNivel3());
        }
        if (filtro.getIdNivel4() != null) {
            query.setParameter("id_nivel4", filtro.getIdNivel4());
        }
        if (filtro.getIdNivel5() != null) {
            query.setParameter("id_nivel5", filtro.getIdNivel5());
        }
        if (filtro.getIdEstablecimiento() != null) {
            query.setParameter("id_establecimiento", filtro.getIdEstablecimiento());
        }
        if (filtro.getIdSede() != null) {
            query.setParameter("id_sede", filtro.getIdSede());
        }
        if (filtro.getIdPredio() != null) {
            query.setParameter("id_predio", filtro.getIdPredio());
        }
        // otros filtros
        if (filtro.getCodZona() != null) {
            query.setParameter("cod_zona", filtro.getCodZona());
        }
        if (filtro.getCodSector() != null) {
            query.setParameter("cod_sector", filtro.getCodSector());
        }
        if (filtro.getCodClima() != null) {
            query.setParameter("cod_clima", filtro.getCodClima());
        }
        if (filtro.getCondicionReciclaje() != null) {
            query.setParameter("cond_reciclaje", filtro.getCondicionReciclaje().toString());
        }
        if (filtro.isAgrupamientoPredio()) {
            if (filtro.getDisponibilidadReciclaje() != null) {
                query.setParameter("disp_servicio", filtro.getDisponibilidadReciclaje());
            }
            if (filtro.getAnalisisConsumoAgua() != null) {
                query.setParameter("analisis_agua", filtro.getAnalisisConsumoAgua());
            }
            if (filtro.getAnalisisConsumoEnergia() != null) {
                query.setParameter("analisis_energia", filtro.getAnalisisConsumoEnergia());
            }
        }
        return query.getResultList();
    }

    @Override
    public List<Object[]> consultarSeguridad(FiltroAmbitoSeguridad filtro) {
        if (filtro.isConsultaDeTiempoReal()) {
            if (ParamBaseDatos.ORACLE.equals(UtilProperties.getDbMotor())) {
                return this.consultarSeguridadTiempoRealOracle(filtro);
            } else {
                return consultarSeguridadTiempoRealPostgre(filtro);
            }

        } else {
            if (ParamBaseDatos.ORACLE.equals(UtilProperties.getDbMotor())) {
                return consultarSeguridadIndicadoresOracle(filtro);
            } else {
                return consultarSeguridadIndicadoresPostgre(filtro);
            }
        }
    }

    private List<Object[]> consultarSeguridadTiempoRealPostgre(FiltroAmbitoSeguridad filtro) {
        String codInstrumento = this.consultarCodInstrumentoPorPeriodo(filtro.getPeriodo());
        StringBuilder sql = new StringBuilder();
        StringBuilder agrupamiento = new StringBuilder();
//SELECT
        sql.append(" select ");
        if (filtro.isAgrupamientoPredio()) {
            sql.append(" n.codigo_nivel1,n.nombre_nivel1");
            sql.append(",n.codigo_nivel2,n.nombre_nivel2");
            sql.append(",n.codigo_nivel3,n.nombre_nivel3");
            sql.append(",n.codigo_nivel4,n.nombre_nivel4");
            sql.append(",n.codigo_nivel5,n.nombre_nivel5");
            sql.append(", n.codigo_establecimiento, n.nombre_establecimiento");
            sql.append(", n.codigo_sede, n.nombre_sede");
            sql.append(", n.codigo_predio, n.nombre_predio");

            // *indicadores
            //EstadoEstructura
            sql.append(" , tb_estado_estructura.condicion_estructura");
            //AnalisisRutaEvacuacion
            sql.append(" , tb_ruta_evacuacion.condicion_ruta_evacuacion");
            //ReactivoIncendios
            sql.append(" , tb_reactivo_incendio.reactivo_contra_incendio");
            //SenalizacionEvacuacion
            sql.append(" , tb_senalizacion_evacuacion.senalizacion_evacuacion_predio");
            //Edificio
            sql.append(" , d1.valor edificio");
            //Estructura
            sql.append(" , tb_estructura.sistema_estructural");
            //CondicionEstructura
            sql.append(" , tb_cond_estructura.condicion_sistema_estructural");
            //CondicionRutaEvacuacion
            sql.append(" , coalesce(tb_cond_ruta_evacuacion.cond_ruta_evacuacion,'No')");
            //SenalizacionEvacuacionEdificio
            sql.append(" , tb_senalizacion_evacuacion_edif.senalizacion_evacuacion");
            //SistemaContraIncendio
            sql.append(" , tb_sistema_incendio.equipo_incendio");
            //TotalEstudiantes
            sql.append(" , tb_estudiante.total_estudiantes");
            //*otros
            sql.append(" , n.direccion_predio direccion_predio, n.nombre_zona zona");
            sql.append(" , n.nombre_sector sector, n.nombre_clima clima");
            //propiedad del predio
            sql.append(" , n.propiedad_predio");
            //condicion accesibilidad
            sql.append(" ,tbl_accesibilidad.accesibilidad");
            // Condicion de Riesgo Antropico
            sql.append(" ,tbl_cond_ra.condicion_riesgo");
            // Condicion de Riesgo Natural
            sql.append(" ,tbl_cond_rn.condicion_riesgo");
        } else {
            if (filtro.isAgrupamientoNivel0()) {
                agrupamiento.append(" n.nombre_nivel0");
            }
            if (filtro.isAgrupamientoNivel1()) {
                agrupamiento.append(" n.codigo_nivel1,n.nombre_nivel1");
            }
            if (filtro.isAgrupamientoNivel2()) {
                agrupamiento.append("n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
            }
            if (filtro.isAgrupamientoNivel3()) {
                agrupamiento.append("n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
            }
            if (filtro.isAgrupamientoNivel4()) {
                agrupamiento.append("n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
            }
            if (filtro.isAgrupamientoNivel5()) {
                agrupamiento.append("n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
                agrupamiento.append(",n.codigo_nivel5,n.nombre_nivel5");
            }
            if (filtro.isAgrupamientoEstablecimiento()) {
                agrupamiento.append("n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
                agrupamiento.append(",n.codigo_nivel5,n.nombre_nivel5");
                agrupamiento.append(", n.codigo_establecimiento, n.nombre_establecimiento");
            }
            if (filtro.isAgrupamientoSede()) {
                agrupamiento.append("n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
                agrupamiento.append(",n.codigo_nivel5,n.nombre_nivel5");
                agrupamiento.append(", n.codigo_establecimiento, n.nombre_establecimiento");
                agrupamiento.append(", n.codigo_sede, n.nombre_sede");
            }

            // select
            sql.append(agrupamiento.toString());

            //PrediosSegunEstadoEstructura
            if (filtro.getEstadoEstructura() != null) {
                sql.append(" ,count(tbl_predios_estado_estructura.id_dig_instrumento)");
            }
            //PrediosSegunRutaEvacuacion
            if (filtro.getAnalisisRutaEvacuacion() != null) {
                sql.append(" ,count(tbl_predios_ruta_evacuacion.id_dig_instrumento)");
            }
            //PrediosSegunReactivoIncendios
            if (filtro.getSistemaContraIncendio() != null) {
                sql.append(" ,count(tbl_predios_reactivo_incendio.id_dig_instrumento)");
            }
            //PrediosSegunSenalizacionEvacuacion
            if (filtro.getSenalizacionEvacuacion() != null) {
                sql.append(" ,count(tbl_predios_senalizacion_evacuacion.id_dig_instrumento)");
            }
            //TotalEstudiantes
            sql.append(" ,sum(coalesce(tb_estudiante.total_estudiantes,0))");
            //Total Predios
            sql.append(" ,sum(coalesce(tot_pred.total,0))");
        }
// FROM 
        sql.append(" from cier.ind_auxiliar_indicador aux");
        sql.append(" inner join cier.ind_auxiliar_consultas n on n.id_predio = aux.id_predio and n.periodo = aux.periodo and n.id_tnt = aux.id_tnt");

        if (filtro.isAgrupamientoPredio()) {
            //edificio
            sql.append(" inner join cier.ind_auxiliar_respuesta d1 on d1.id_dig_instrumento = aux.id_dig_instrumento and d1.id_tnt = aux.id_tnt and d1.periodo = aux.periodo and d1.cod_respuesta=(select cier.get_cod_respuesta(31))");

            //filtro edificios
            if (filtro.getSenalizacionEvacuacion() != null) {
                sql.append(" inner join cier.ind_auxiliar_respuesta filt1 on filt1.id_elemento = d1.id_elemento and filt1.id_dig_instrumento = d1.id_dig_instrumento and filt1.id_tnt = d1.id_tnt and filt1.periodo = aux.periodo and filt1.cod_respuesta = (select cier.get_cod_respuesta(103))");
                sql.append(" and filt1.valor='").append(filtro.getSenalizacionEvacuacion()).append("'");
            }
            if (filtro.getCondicionTipoEstructura() != null) {
                sql.append(" inner join cier.ind_auxiliar_respuesta filt2 on filt2.id_elemento = d1.id_elemento and filt2.id_dig_instrumento = d1.id_dig_instrumento and filt2.id_tnt = d1.id_tnt and filt2.periodo = aux.periodo and filt2.cod_respuesta = (select cier.get_cod_respuesta(99))");
                sql.append(" and filt2.valor='").append(filtro.getCondicionTipoEstructura()).append("'");
            }
            if (filtro.getEstructura() != null) {
                sql.append(" inner join cier.ind_auxiliar_respuesta filt3 on filt3.id_elemento = d1.id_elemento and filt3.id_dig_instrumento = d1.id_dig_instrumento and filt3.id_tnt = d1.id_tnt and filt3.periodo = aux.periodo and filt3.cod_respuesta = (select cier.get_cod_respuesta(125))");
                sql.append(" and filt3.valor in(").append(filtro.getEstructura()).append(")");
            }

            //EstadoEstructura
            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_SEGURIDAD_ESTADO_ESTRUCTURA, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append("\n ) as tb_estado_estructura on tb_estado_estructura.id_dig_instrumento = aux.id_dig_instrumento and tb_estado_estructura.id_predio = aux.id_predio and tb_estado_estructura.id_tnt = aux.id_tnt");

            //AnalisisRutaEvacuacion
            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_SEGURIDAD_ANALISIS_RUTA_EVACUACION, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append("\n ) as tb_ruta_evacuacion on tb_ruta_evacuacion.id_dig_instrumento = aux.id_dig_instrumento and tb_ruta_evacuacion.id_predio = aux.id_predio and tb_ruta_evacuacion.id_tnt = aux.id_tnt");

            //ReactivoIncendios
            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_SEGURIDAD_REACTIVO_CONTRA_INCENDIO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append("\n ) as tb_reactivo_incendio on tb_reactivo_incendio.id_dig_instrumento = aux.id_dig_instrumento and tb_reactivo_incendio.id_predio = aux.id_predio and tb_reactivo_incendio.id_tnt = aux.id_tnt");

            //SenalizacionEvacuacion
            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_SEGURIDAD_SENALIZACION_EVACUACION, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append("\n ) as tb_senalizacion_evacuacion on tb_senalizacion_evacuacion.id_dig_instrumento = aux.id_dig_instrumento and tb_senalizacion_evacuacion.id_predio = aux.id_predio and tb_senalizacion_evacuacion.id_tnt = aux.id_tnt");

            //Estructura
            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_SEGURIDAD_EDIF_SISTEMA_ESTRUCTURAL, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" )tb_estructura on tb_estructura.periodo=aux.periodo and tb_estructura.id_dig_instrumento=aux.id_dig_instrumento and tb_estructura.id_predio=aux.id_predio and tb_estructura.edificio=d1.valor and tb_estructura.elemento=d1.id_elemento and tb_estructura.id_tnt = aux.id_tnt");

            //CondicionEstructura
            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_SEGURIDAD_EDIF_CONDICION_SISTEMA_ESTRUCTURAL, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" )tb_cond_estructura on tb_cond_estructura.periodo=aux.periodo and tb_cond_estructura.id_dig_instrumento=aux.id_dig_instrumento and tb_cond_estructura.id_predio=aux.id_predio and tb_cond_estructura.edificio=d1.valor and tb_cond_estructura.elemento=d1.id_elemento and tb_cond_estructura.id_tnt = aux.id_tnt");

            //CondicionRutaEvacuacion
            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_SEGURIDAD_EDIF_CONDICION_RUTA_EVACUACION, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" )tb_cond_ruta_evacuacion on tb_cond_ruta_evacuacion.periodo=aux.periodo and tb_cond_ruta_evacuacion.id_dig_instrumento=aux.id_dig_instrumento and tb_cond_ruta_evacuacion.id_predio=aux.id_predio and tb_cond_ruta_evacuacion.edificio=d1.valor and tb_cond_ruta_evacuacion.elemento=d1.id_elemento and tb_cond_ruta_evacuacion.id_tnt = aux.id_tnt");

            //SenalizacionEvacuacionEdificio
            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_SEGURIDAD_EDIF_SENALIZACION_EVACUACION, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" )tb_senalizacion_evacuacion_edif on tb_senalizacion_evacuacion_edif.periodo=aux.periodo and tb_senalizacion_evacuacion_edif.id_dig_instrumento=aux.id_dig_instrumento and tb_senalizacion_evacuacion_edif.id_predio=aux.id_predio and tb_senalizacion_evacuacion_edif.edificio=d1.valor and tb_senalizacion_evacuacion_edif.elemento=d1.id_elemento and tb_senalizacion_evacuacion_edif.id_tnt = aux.id_tnt");

            //SistemaContraIncendio
            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_SEGURIDAD_EDIF_SISTEMA_CONTRA_INCENDIO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" )tb_sistema_incendio on tb_sistema_incendio.periodo=aux.periodo and tb_sistema_incendio.id_dig_instrumento=aux.id_dig_instrumento and tb_sistema_incendio.id_predio=aux.id_predio and tb_sistema_incendio.edificio=d1.valor and tb_sistema_incendio.elemento=d1.id_elemento and tb_sistema_incendio.id_tnt = aux.id_tnt");

            //TotalEstudiantes
            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_TOTAL_ESTUDIANTES, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) as tb_estudiante on tb_estudiante.id_dig_instrumento = aux.id_dig_instrumento and tb_estudiante.id_predio = aux.id_predio and tb_estudiante.id_tnt = aux.id_tnt");

            //condicion accesibilidad
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ACCESIBILIDAD_CONDICION_ACCESIBILIDAD, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) as tbl_accesibilidad on tbl_accesibilidad.id_dig_instrumento = aux.id_dig_instrumento and tbl_accesibilidad.id_predio = aux.id_predio");

            //condicion riesgo Antropico
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_RIESGO_ANTROPICO_CONDICION_RIESGO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) as tbl_cond_ra on tbl_cond_ra.id_dig_instrumento = aux.id_dig_instrumento and tbl_cond_ra.id_predio = aux.id_predio");

            //condicion riesgo Natural            
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_RIESGO_NATURAL_CONDICION_RIESGO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) as tbl_cond_rn on tbl_cond_rn.id_dig_instrumento = aux.id_dig_instrumento and tbl_cond_rn.id_predio = aux.id_predio");
        } else {
            //PrediosSegunEstadoEstructura
            if (filtro.getEstadoEstructura() != null) {
                sql.append(" left join (");
                sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_SEGURIDAD_NUM_PREDIOS_SEGUN_ESTADO_ESTRUCTURA, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
                sql.append(" ) as tbl_predios_estado_estructura on tbl_predios_estado_estructura.id_dig_instrumento = aux.id_dig_instrumento and tbl_predios_estado_estructura.id_predio = aux.id_predio and tbl_predios_estado_estructura.id_tnt = aux.id_tnt");
            }
            //PrediosSegunRutaEvacuacion
            if (filtro.getAnalisisRutaEvacuacion() != null) {
                sql.append(" left join (");
                sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_SEGURIDAD_NUM_PREDIOS_SEGUN_ANALISIS_RUTA_EVALUACION, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
                sql.append(" ) as tbl_predios_ruta_evacuacion on tbl_predios_ruta_evacuacion.id_dig_instrumento = aux.id_dig_instrumento and tbl_predios_ruta_evacuacion.id_predio = aux.id_predio and tbl_predios_ruta_evacuacion.id_tnt = aux.id_tnt");
            }
            //PrediosSegunReactivoIncendios
            if (filtro.getSistemaContraIncendio() != null) {
                sql.append(" left join (");
                sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_SEGURIDAD_NUM_PREDIOS_SEGUN_REACTIVO_CONTRA_INCENDIO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
                sql.append(" ) as tbl_predios_reactivo_incendio on tbl_predios_reactivo_incendio.id_dig_instrumento = aux.id_dig_instrumento and tbl_predios_reactivo_incendio.id_predio = aux.id_predio and tbl_predios_reactivo_incendio.id_tnt = aux.id_tnt");
            }
            //PrediosSegunSenalizacionEvacuacion
            if (filtro.getSenalizacionEvacuacion() != null) {
                sql.append(" left join (");
                sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_SEGURIDAD_NUM_PREDIOS_SEGUN_SENALIZACION_EVACUACION, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
                sql.append(" ) as tbl_predios_senalizacion_evacuacion on tbl_predios_senalizacion_evacuacion.id_dig_instrumento = aux.id_dig_instrumento and tbl_predios_senalizacion_evacuacion.id_predio = aux.id_predio and tbl_predios_senalizacion_evacuacion.id_tnt = aux.id_tnt");
            }
            //TotalEstudiantes            
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_TOTAL_ESTUDIANTES, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) as tb_estudiante on tb_estudiante.id_dig_instrumento = aux.id_dig_instrumento and tb_estudiante.id_predio = aux.id_predio and tb_estudiante.id_tnt = aux.id_tnt");

            //TotalPredios
            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_TOTAL_PREDIOS, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) as tot_pred on tot_pred.id_dig_instrumento = aux.id_dig_instrumento and tot_pred.id_predio = aux.id_predio and tot_pred.id_tnt = aux.id_tnt");
        }

// WHERE
        sql.append(" where aux.id_tnt = ?id_tnt and aux.periodo = ?periodo");
        if (filtro.isAgrupamientoPredio()) {
            if (filtro.getSistemaContraIncendio() != null) {
                sql.append(" and tb_sistema_incendio.equipo_incendio = '");
                sql.append(filtro.getSistemaContraIncendio()).append("'");
            }
        }
        if (filtro.getIdNivel0() != null) {
            sql.append(" and n.id_nivel0 = ?id_nivel0");
        }
        if (filtro.getIdNivel1() != null) {
            sql.append(" and n.id_nivel1 = ?id_nivel1");
        }
        if (filtro.getIdNivel2() != null) {
            sql.append(" and n.id_nivel2 = ?id_nivel2");
        }
        if (filtro.getIdNivel3() != null) {
            sql.append(" and n.id_nivel3 = ?id_nivel3");
        }
        if (filtro.getIdNivel4() != null) {
            sql.append(" and n.id_nivel4 = ?id_nivel4");
        }
        if (filtro.getIdNivel5() != null) {
            sql.append(" and n.id_nivel5 = ?id_nivel5");
        }
        if (filtro.getIdEstablecimiento() != null) {
            sql.append(" and n.id_establecimiento = ?id_establecimiento");
        }
        if (filtro.getIdSede() != null) {
            sql.append(" and n.id_sede = ?id_sede");
        }
        if (filtro.getIdPredio() != null) {
            sql.append(" and n.id_predio = ?id_predio");
        }
        // otros filtros
        if (filtro.getCodZona() != null) {
            sql.append(" and n.codigo_zona = ?cod_zona");
        }
        if (filtro.getCodSector() != null) {
            sql.append(" and n.codigo_sector = ?cod_sector");
        }

        // GROUP BY 
        if (!filtro.isAgrupamientoPredio()) {
            sql.append(" group by ");
            sql.append(agrupamiento.toString());
        }

        String auxSql = sql.toString();
        if (ParamBaseDatos.POSTGRE.equals(UtilProperties.getDbMotor())) {
            auxSql = auxSql.replaceAll("\\?start", "");
            auxSql = auxSql.replaceAll("\\?end", "");

        }
        Query query = tpm.getEm().createNativeQuery(auxSql);
        query.setParameter("id_tnt", tpm.getCurrentTenant());
        query.setParameter("periodo", filtro.getPeriodo());
        query.setParameter("idioma", filtro.getIdioma());
        query.setParameter("id_nivel0", filtro.getIdNivel0());
        if (filtro.getIdNivel1() != null) {
            query.setParameter("id_nivel1", filtro.getIdNivel1());
        }
        if (filtro.getIdNivel2() != null) {
            query.setParameter("id_nivel2", filtro.getIdNivel2());
        }
        if (filtro.getIdNivel3() != null) {
            query.setParameter("id_nivel3", filtro.getIdNivel3());
        }
        if (filtro.getIdNivel4() != null) {
            query.setParameter("id_nivel4", filtro.getIdNivel4());
        }
        if (filtro.getIdNivel5() != null) {
            query.setParameter("id_nivel5", filtro.getIdNivel5());
        }
        if (filtro.getIdEstablecimiento() != null) {
            query.setParameter("id_establecimiento", filtro.getIdEstablecimiento());
        }
        if (filtro.getIdSede() != null) {
            query.setParameter("id_sede", filtro.getIdSede());
        }
        if (filtro.getIdPredio() != null) {
            query.setParameter("id_predio", filtro.getIdPredio());
        }
        // otros filtros
        if (filtro.getCodZona() != null) {
            query.setParameter("cod_zona", filtro.getCodZona());
        }
        if (filtro.getCodSector() != null) {
            query.setParameter("cod_sector", filtro.getCodSector());
        }
        if (!filtro.isAgrupamientoPredio()) {
            if (filtro.getEstadoEstructura() != null) {
                query.setParameter("estado_estructura", filtro.getEstadoEstructura());
            }
            if (filtro.getAnalisisRutaEvacuacion() != null) {
                query.setParameter("condicion_ruta_evacuacion", filtro.getAnalisisRutaEvacuacion());
            }
            if (filtro.getSistemaContraIncendio() != null) {
                query.setParameter("reactivo_contra_incendio", filtro.getSistemaContraIncendio());
            }
            if (filtro.getSenalizacionEvacuacion() != null) {
                query.setParameter("senalizacion_evacuacion_predio", filtro.getSenalizacionEvacuacion());
            }
        }

        return query.getResultList();
    }

    private List<Object[]> consultarSeguridadTiempoRealOracle(FiltroAmbitoSeguridad filtro) {
        String codInstrumento = this.consultarCodInstrumentoPorPeriodo(filtro.getPeriodo());
        StringBuilder sql = new StringBuilder();
        StringBuilder agrupamiento = new StringBuilder();
//SELECT
        sql.append(" select distinct ");
        if (filtro.isAgrupamientoPredio()) {
            sql.append(" n.codigo_nivel1,n.nombre_nivel1");
            sql.append(",n.codigo_nivel2,n.nombre_nivel2");
            sql.append(",n.codigo_nivel3,n.nombre_nivel3");
            sql.append(",n.codigo_nivel4,n.nombre_nivel4");
            sql.append(",n.codigo_nivel5,n.nombre_nivel5");
            sql.append(", n.codigo_establecimiento, n.nombre_establecimiento");
            sql.append(", n.codigo_sede, n.nombre_sede");
            sql.append(", n.codigo_predio, n.nombre_predio");

            // *indicadores
            //EstadoEstructura
            sql.append(" , tb_estado_estructura.condicion_estructura");
            //AnalisisRutaEvacuacion
            sql.append(" , tb_ruta_evacuacion.condicion_ruta_evacuacion");
            //ReactivoIncendios
            sql.append(" , tb_reactivo_incendio.reactivo_contra_incendio");
            //SenalizacionEvacuacion
            sql.append(" , tb_senalizacion_evacuacion.senalizacion_evacuacion_predio");
            //Edificio
            sql.append(" , d1.valor edificio");
            //Estructura
            sql.append(" , tb_estructura.sistema_estructural");
            //CondicionEstructura
            sql.append(" , tb_cond_estructura.condicion_sistema_estructural");
            //CondicionRutaEvacuacion
            sql.append(" , coalesce(tb_cond_ruta_evacuacion.cond_ruta_evacuacion,'No')");
            //SenalizacionEvacuacionEdificio
            sql.append(" , tb_sen_eva_edif.senalizacion_evacuacion");
            //SistemaContraIncendio
            sql.append(" , tb_sistema_incendio.equipo_incendio");
            //TotalEstudiantes
            sql.append(" , tb_estudiante.total_estudiantes");
            //*otros
            sql.append(" , n.direccion_predio direccion_predio, n.nombre_zona zona");
            sql.append(" , n.nombre_sector sector, n.nombre_clima clima");
            //propiedad del predio
            sql.append(" , n.propiedad_predio");
            //condicion accesibilidad
            sql.append(" ,tbl_accesibilidad.accesibilidad");
            // Condicion de Riesgo Antropico
            sql.append(" ,tbl_cond_ra.condicion_riesgo");
            // Condicion de Riesgo Natural
            sql.append(" ,tbl_cond_rn.condicion_riesgo");
        } else {
            if (filtro.isAgrupamientoNivel0()) {
                agrupamiento.append(" n.nombre_nivel0");
            }
            if (filtro.isAgrupamientoNivel1()) {
                agrupamiento.append(" n.codigo_nivel1,n.nombre_nivel1");
            }
            if (filtro.isAgrupamientoNivel2()) {
                agrupamiento.append("n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
            }
            if (filtro.isAgrupamientoNivel3()) {
                agrupamiento.append("n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
            }
            if (filtro.isAgrupamientoNivel4()) {
                agrupamiento.append("n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
            }
            if (filtro.isAgrupamientoNivel5()) {
                agrupamiento.append("n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
                agrupamiento.append(",n.codigo_nivel5,n.nombre_nivel5");
            }
            if (filtro.isAgrupamientoEstablecimiento()) {
                agrupamiento.append("n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
                agrupamiento.append(",n.codigo_nivel5,n.nombre_nivel5");
                agrupamiento.append(", n.codigo_establecimiento, n.nombre_establecimiento");
            }
            if (filtro.isAgrupamientoSede()) {
                agrupamiento.append("n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
                agrupamiento.append(",n.codigo_nivel5,n.nombre_nivel5");
                agrupamiento.append(", n.codigo_establecimiento, n.nombre_establecimiento");
                agrupamiento.append(", n.codigo_sede, n.nombre_sede");
            }

            // select
            sql.append(agrupamiento.toString());

            //PrediosSegunEstadoEstructura
            if (filtro.getEstadoEstructura() != null) {
                sql.append(" ,count(tbl_predios_estado_estructura.id_predio)");
            }
            //PrediosSegunRutaEvacuacion
            if (filtro.getAnalisisRutaEvacuacion() != null) {
                sql.append(" ,count(tbl_predios_ruta_evacuacion.id_predio)");
            }
            //PrediosSegunReactivoIncendios
            if (filtro.getSistemaContraIncendio() != null) {
                sql.append(" ,count(tbl_predios_reactivo_incendio.id_predio)");
            }
            //PrediosSegunSenalizacionEvacuacion
            if (filtro.getSenalizacionEvacuacion() != null) {
                sql.append(" ,count(tbl_pred_sen_evacuacion.id_predio)");
            }
            //TotalEstudiantes
            sql.append(" ,sum(coalesce(tb_estudiante.total_estudiantes,0))");
            //Total Predios
            sql.append(" ,sum(coalesce(tot_pred.total,0))");
        }
// FROM 
        sql.append(" from ind_auxiliar_indicador aux");
        sql.append(" inner join ind_auxiliar_consultas n on n.id_predio = aux.id_predio and n.periodo = aux.periodo and n.id_tnt = aux.id_tnt");

        if (filtro.isAgrupamientoPredio()) {
            //edificio
            sql.append(" inner join (select id_tnt,periodo,id_predio,resp_073 valor,id_dig_elemento id_elemento from ind_aux_respuesta_ele where resp_073 is not null) d1 on d1.id_predio = aux.id_predio and d1.id_tnt = aux.id_tnt and d1.periodo = aux.periodo");

            //filtro edificios
            if (filtro.getSenalizacionEvacuacion() != null) {
                sql.append(" inner join")
                        .append(" (select id_tnt,periodo,id_predio,RESP_088 valor,id_dig_elemento id_elemento from ind_aux_respuesta_ele where resp_073 is not null) filt1")
                        .append(" on filt1.id_elemento = d1.id_elemento and filt1.id_predio = d1.id_predio and filt1.id_tnt = d1.id_tnt and filt1.periodo = aux.periodo");
                sql.append(" and filt1.valor in(").append(filtro.getSenalizacionEvacuacion()).append(")");
            }
            if (filtro.getCondicionTipoEstructura() != null) {
                sql.append(" inner join")
                        .append(" (select id_tnt,periodo,id_predio,RESP_077_03 valor,id_dig_elemento id_elemento from ind_aux_respuesta_ele where resp_073 is not null) filt2")
                        .append(" on filt2.id_elemento = d1.id_elemento and filt2.id_predio = d1.id_predio and filt2.id_tnt = d1.id_tnt and filt2.periodo = aux.periodo");
                sql.append(" and filt2.valor in(").append(filtro.getCondicionTipoEstructura()).append(")");
            }
            if (filtro.getEstructura() != null) {
                sql.append(" inner join")
                        .append(" (select id_tnt,periodo,id_predio,RESP_077_01 valor,id_dig_elemento id_elemento from ind_aux_respuesta_ele where resp_073 is not null) filt3")
                        .append(" on filt3.id_elemento = d1.id_elemento and filt3.id_predio = d1.id_predio and filt3.id_tnt = d1.id_tnt and filt3.periodo = aux.periodo");
                sql.append(" and filt3.valor in(").append(filtro.getEstructura()).append(")");
            }

            //EstadoEstructura
            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_SEGURIDAD_ESTADO_ESTRUCTURA, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append("\n ) tb_estado_estructura on tb_estado_estructura.id_predio = aux.id_predio and tb_estado_estructura.id_tnt = aux.id_tnt");

            //AnalisisRutaEvacuacion
            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_SEGURIDAD_ANALISIS_RUTA_EVACUACION, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append("\n ) tb_ruta_evacuacion on tb_ruta_evacuacion.id_predio = aux.id_predio and tb_ruta_evacuacion.id_tnt = aux.id_tnt");

            //ReactivoIncendios
            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_SEGURIDAD_REACTIVO_CONTRA_INCENDIO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append("\n ) tb_reactivo_incendio on tb_reactivo_incendio.id_predio = aux.id_predio and tb_reactivo_incendio.id_tnt = aux.id_tnt");

            //SenalizacionEvacuacion
            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_SEGURIDAD_SENALIZACION_EVACUACION, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append("\n ) tb_senalizacion_evacuacion on tb_senalizacion_evacuacion.id_predio = aux.id_predio and tb_senalizacion_evacuacion.id_tnt = aux.id_tnt");

            //Estructura
            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_SEGURIDAD_EDIF_SISTEMA_ESTRUCTURAL, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" )tb_estructura on tb_estructura.periodo=aux.periodo and tb_estructura.id_predio=aux.id_predio and tb_estructura.edificio=d1.valor and tb_estructura.elemento=d1.id_elemento and tb_estructura.id_tnt = aux.id_tnt");

            //CondicionEstructura
            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_SEGURIDAD_EDIF_CONDICION_SISTEMA_ESTRUCTURAL, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" )tb_cond_estructura on tb_cond_estructura.periodo=aux.periodo and tb_cond_estructura.id_predio=aux.id_predio and tb_cond_estructura.edificio=d1.valor and tb_cond_estructura.elemento=d1.id_elemento and tb_cond_estructura.id_tnt = aux.id_tnt");

            //CondicionRutaEvacuacion
            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_SEGURIDAD_EDIF_CONDICION_RUTA_EVACUACION, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" )tb_cond_ruta_evacuacion on tb_cond_ruta_evacuacion.periodo=aux.periodo and tb_cond_ruta_evacuacion.id_predio=aux.id_predio and tb_cond_ruta_evacuacion.edificio=d1.valor and tb_cond_ruta_evacuacion.elemento=d1.id_elemento and tb_cond_ruta_evacuacion.id_tnt = aux.id_tnt");

            //SenalizacionEvacuacionEdificio
            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_SEGURIDAD_EDIF_SENALIZACION_EVACUACION, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" )tb_sen_eva_edif on tb_sen_eva_edif.periodo=aux.periodo and tb_sen_eva_edif.id_predio=aux.id_predio and tb_sen_eva_edif.edificio=d1.valor and tb_sen_eva_edif.elemento=d1.id_elemento and tb_sen_eva_edif.id_tnt = aux.id_tnt");

            //SistemaContraIncendio
            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_SEGURIDAD_EDIF_SISTEMA_CONTRA_INCENDIO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" )tb_sistema_incendio on tb_sistema_incendio.periodo=aux.periodo and tb_sistema_incendio.id_predio=aux.id_predio and tb_sistema_incendio.edificio=d1.valor and tb_sistema_incendio.elemento=d1.id_elemento and tb_sistema_incendio.id_tnt = aux.id_tnt");

            //TotalEstudiantes
            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_TOTAL_ESTUDIANTES, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) tb_estudiante on tb_estudiante.id_predio = aux.id_predio and tb_estudiante.id_tnt = aux.id_tnt");

            //condicion accesibilidad
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ACCESIBILIDAD_CONDICION_ACCESIBILIDAD, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) tbl_accesibilidad on tbl_accesibilidad.id_predio = aux.id_predio");

            //condicion riesgo Antropico
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_RIESGO_ANTROPICO_CONDICION_RIESGO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) tbl_cond_ra on tbl_cond_ra.id_predio = aux.id_predio");

            //condicion riesgo Natural            
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_RIESGO_NATURAL_CONDICION_RIESGO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) tbl_cond_rn on tbl_cond_rn.id_predio = aux.id_predio");
        } else {
            //PrediosSegunEstadoEstructura
            if (filtro.getEstadoEstructura() != null) {
                sql.append(" left join (");
                String formula = this.consultarFormulaSQLIndicador(ParamIndicador.IND_SEGURIDAD_NUM_PREDIOS_SEGUN_ESTADO_ESTRUCTURA, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());
                formula = formula.replaceAll("\\?condicion", filtro.getEstadoEstructura());
                sql.append(formula);
                sql.append(" ) tbl_predios_estado_estructura on tbl_predios_estado_estructura.id_predio = aux.id_predio and tbl_predios_estado_estructura.id_tnt = aux.id_tnt");
            }
            //PrediosSegunRutaEvacuacion
            if (filtro.getAnalisisRutaEvacuacion() != null) {
                sql.append(" left join (");
                String formula = this.consultarFormulaSQLIndicador(ParamIndicador.IND_SEGURIDAD_NUM_PREDIOS_SEGUN_ANALISIS_RUTA_EVALUACION, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());
                formula = formula.replaceAll("\\?condicion", filtro.getAnalisisRutaEvacuacion());
                sql.append(formula);
                sql.append(" ) tbl_predios_ruta_evacuacion on tbl_predios_ruta_evacuacion.id_predio = aux.id_predio and tbl_predios_ruta_evacuacion.id_tnt = aux.id_tnt");
            }
            //PrediosSegunReactivoIncendios
            if (filtro.getSistemaContraIncendio() != null) {
                sql.append(" left join (");
                String formula = this.consultarFormulaSQLIndicador(ParamIndicador.IND_SEGURIDAD_NUM_PREDIOS_SEGUN_REACTIVO_CONTRA_INCENDIO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());
                formula = formula.replaceAll("\\?condicion", filtro.getSistemaContraIncendio());
                sql.append(formula);
                sql.append(" ) tbl_predios_reactivo_incendio on tbl_predios_reactivo_incendio.id_predio = aux.id_predio and tbl_predios_reactivo_incendio.id_tnt = aux.id_tnt");
            }
            //PrediosSegunSenalizacionEvacuacion
            if (filtro.getSenalizacionEvacuacion() != null) {
                sql.append(" left join (");
                String formula = this.consultarFormulaSQLIndicador(ParamIndicador.IND_SEGURIDAD_NUM_PREDIOS_SEGUN_SENALIZACION_EVACUACION, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());
                formula = formula.replaceAll("\\?condicion", filtro.getSenalizacionEvacuacion());
                sql.append(formula);
                sql.append(" ) tbl_pred_sen_evacuacion on tbl_pred_sen_evacuacion.id_predio = aux.id_predio and tbl_pred_sen_evacuacion.id_tnt = aux.id_tnt");
            }
            //TotalEstudiantes            
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_TOTAL_ESTUDIANTES, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) tb_estudiante on tb_estudiante.id_predio = aux.id_predio and tb_estudiante.id_tnt = aux.id_tnt");

            //TotalPredios
            sql.append(" left join");
            sql.append(" (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_TOTAL_PREDIOS, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) tot_pred on tot_pred.id_predio = aux.id_predio and tot_pred.id_tnt = aux.id_tnt");
        }

// WHERE
        sql.append(" where aux.id_tnt = ?id_tnt and aux.periodo = ?periodo");
        if (filtro.isAgrupamientoPredio()) {
            if (filtro.getSistemaContraIncendio() != null) {
                sql.append(" and tb_sistema_incendio.equipo_incendio = '");
                sql.append(filtro.getSistemaContraIncendio()).append("'");
            }
        }
        if (filtro.getIdNivel0() != null) {
            sql.append(" and n.id_nivel0 = ?id_nivel0");
        }
        if (filtro.getIdNivel1() != null) {
            sql.append(" and n.id_nivel1 = ?id_nivel1");
        }
        if (filtro.getIdNivel2() != null) {
            sql.append(" and n.id_nivel2 = ?id_nivel2");
        }
        if (filtro.getIdNivel3() != null) {
            sql.append(" and n.id_nivel3 = ?id_nivel3");
        }
        if (filtro.getIdNivel4() != null) {
            sql.append(" and n.id_nivel4 = ?id_nivel4");
        }
        if (filtro.getIdNivel5() != null) {
            sql.append(" and n.id_nivel5 = ?id_nivel5");
        }
        if (filtro.getIdEstablecimiento() != null) {
            sql.append(" and n.id_establecimiento = ?id_establecimiento");
        }
        if (filtro.getIdSede() != null) {
            sql.append(" and n.id_sede = ?id_sede");
        }
        if (filtro.getIdPredio() != null) {
            sql.append(" and n.id_predio = ?id_predio");
        }
        // otros filtros
        if (filtro.getCodZona() != null) {
            sql.append(" and n.codigo_zona = ?cod_zona");
        }
        if (filtro.getCodSector() != null) {
            sql.append(" and n.codigo_sector = ?cod_sector");
        }

        // GROUP BY 
        if (!filtro.isAgrupamientoPredio()) {
            sql.append(" group by ");
            sql.append(agrupamiento.toString());
        }


        Query query = tpm.getEm().createNativeQuery(sql.toString());
        query.setParameter("id_tnt", tpm.getCurrentTenant());
        query.setParameter("periodo", filtro.getPeriodo());
        query.setParameter("idioma", filtro.getIdioma());
        query.setParameter("id_nivel0", filtro.getIdNivel0());
        if (filtro.getIdNivel1() != null) {
            query.setParameter("id_nivel1", filtro.getIdNivel1());
        }
        if (filtro.getIdNivel2() != null) {
            query.setParameter("id_nivel2", filtro.getIdNivel2());
        }
        if (filtro.getIdNivel3() != null) {
            query.setParameter("id_nivel3", filtro.getIdNivel3());
        }
        if (filtro.getIdNivel4() != null) {
            query.setParameter("id_nivel4", filtro.getIdNivel4());
        }
        if (filtro.getIdNivel5() != null) {
            query.setParameter("id_nivel5", filtro.getIdNivel5());
        }
        if (filtro.getIdEstablecimiento() != null) {
            query.setParameter("id_establecimiento", filtro.getIdEstablecimiento());
        }
        if (filtro.getIdSede() != null) {
            query.setParameter("id_sede", filtro.getIdSede());
        }
        if (filtro.getIdPredio() != null) {
            query.setParameter("id_predio", filtro.getIdPredio());
        }
        // otros filtros
        if (filtro.getCodZona() != null) {
            query.setParameter("cod_zona", filtro.getCodZona());
        }
        if (filtro.getCodSector() != null) {
            query.setParameter("cod_sector", filtro.getCodSector());
        }

        return query.getResultList();
    }

    private List<Object[]> consultarSeguridadIndicadoresOracle(FiltroAmbitoSeguridad filtro) {
        StringBuilder sql = new StringBuilder();
// consulta por nivel de agrupamiento superior a predio
// SELECT
        sql.append(" select ");
        if (filtro.isAgrupamientoPredio()) {
            sql.append(" distinct");
            sql.append(" n.codigo_nivel1,n.nombre_nivel1");
            sql.append(",n.codigo_nivel2,n.nombre_nivel2");
            sql.append(",n.codigo_nivel3,n.nombre_nivel3");
            sql.append(",n.codigo_nivel4,n.nombre_nivel4");
            sql.append(",n.codigo_nivel5,n.nombre_nivel5");
            sql.append(", n.codigo_establecimiento, n.nombre_establecimiento");
            sql.append(", n.codigo_sede, n.nombre_sede");
            sql.append(", n.codigo_predio, n.nombre_predio");

            // *indicadores
            //EstadoEstructura
            sql.append(" , tb_estado_estructura.valor");
            //AnalisisRutaEvacuacion
            sql.append(" , tb_ruta_evacuacion.valor");
            //ReactivoIncendios
            sql.append(" , tb_reactivo_incendio.valor");
            //SenalizacionEvacuacion
            sql.append(" , tb_senalizacion_evacuacion.valor");
            //Edificio
            sql.append(" , d1.valor edificio");
            //Estructura
            sql.append(" , tb_estructura.valor");
            //CondicionEstructura
            sql.append(" , tb_cond_estructura.valor");
            //CondicionRutaEvacuacion
            sql.append(" , coalesce(tb_cond_ruta_evacuacion.valor,'No')");
            //SenalizacionEvacuacionEdificio
            sql.append(" , tb_sen_eva_edif.valor");
            //SistemaContraIncendio
            sql.append(" , tb_sistema_incendio.valor");
            //TotalEstudiantes
            sql.append(" , tb_estudiante.valor");
            //*otros
            sql.append(" , n.direccion_predio direccion_predio, n.nombre_zona zona");
            sql.append(" , n.nombre_sector sector, n.nombre_clima clima");
            //propiedad del predio
            sql.append(" , n.propiedad_predio");
            //condicion accesibilidad
            sql.append(" ,tbl_accesibilidad.valor");
            // Condicion de Riesgo Antropico
            sql.append(" ,tbl_cond_ra.valor");
            // Condicion de Riesgo Natural
            sql.append(" ,tbl_cond_rn.valor");
        } else {
            sql.append(" distinct ");
            if (filtro.isAgrupamientoNivel0()) {
                sql.append(" n.nombre_nivel0");
            }
            if (filtro.isAgrupamientoNivel1()) {
                sql.append(" n.codigo_nivel1,n.nombre_nivel1");
            }
            if (filtro.isAgrupamientoNivel2()) {
                sql.append("n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
            }
            if (filtro.isAgrupamientoNivel3()) {
                sql.append("n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
            }
            if (filtro.isAgrupamientoNivel4()) {
                sql.append("n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
                sql.append(",n.codigo_nivel4,n.nombre_nivel4");
            }
            if (filtro.isAgrupamientoNivel5()) {
                sql.append("n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
                sql.append(",n.codigo_nivel4,n.nombre_nivel4");
                sql.append(",n.codigo_nivel5,n.nombre_nivel5");
            }
            if (filtro.isAgrupamientoEstablecimiento()) {
                sql.append("n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
                sql.append(",n.codigo_nivel4,n.nombre_nivel4");
                sql.append(",n.codigo_nivel5,n.nombre_nivel5");
                sql.append(" ,n.codigo_establecimiento, n.nombre_establecimiento");
            }
            if (filtro.isAgrupamientoSede()) {
                sql.append("n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
                sql.append(",n.codigo_nivel4,n.nombre_nivel4");
                sql.append(",n.codigo_nivel5,n.nombre_nivel5");
                sql.append(" ,n.codigo_establecimiento, n.nombre_establecimiento");
                sql.append(" ,n.codigo_sede, n.nombre_sede");
            }
            //TotalEstudiantes
            sql.append(" ,coalesce(tb_estudiante.valor,'0')");
            //Total Predio
            sql.append(" ,coalesce(tot_pred.valor,'0')");
        }
// FROM 
        sql.append(" from ind_auxiliar_indicador aux");
        sql.append(" inner join ind_auxiliar_consultas n on n.id_predio = aux.id_predio and n.periodo = aux.periodo and n.id_tnt = aux.id_tnt");

        String strSQLNivelAgrupamiento = this.getSQLNivelAgrupamiento(filtro);
        String strSQLConsultarIndicador = this.getSQLConsultarIndicadorAlmacenado();

        if (filtro.isAgrupamientoPredio()) {
            //edificio
            sql.append(" inner join (select id_tnt,periodo,id_predio,resp_073 valor,id_dig_elemento id_elemento from ind_aux_respuesta_ele where resp_073 is not null) d1 on d1.id_predio = aux.id_predio and d1.id_tnt = aux.id_tnt and d1.periodo = aux.periodo");

            //EstadoEstructura
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tb_estado_estructura on tb_estado_estructura.id_tnt = aux.id_tnt and tb_estado_estructura.periodo = aux.periodo");
            sql.append(String.format(" and tb_estado_estructura.cod_indicador = '%s'", ParamIndicador.IND_SEGURIDAD_ESTADO_ESTRUCTURA));
            sql.append(" and tb_estado_estructura.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tb_estado_estructura.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            //AnalisisRutaEvacuacion
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tb_ruta_evacuacion on tb_ruta_evacuacion.id_tnt = aux.id_tnt and tb_ruta_evacuacion.periodo = aux.periodo");
            sql.append(String.format(" and tb_ruta_evacuacion.cod_indicador = '%s'", ParamIndicador.IND_SEGURIDAD_ANALISIS_RUTA_EVACUACION));
            sql.append(" and tb_ruta_evacuacion.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tb_ruta_evacuacion.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            //ReactivoIncendios
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tb_reactivo_incendio on tb_reactivo_incendio.id_tnt = aux.id_tnt and tb_reactivo_incendio.periodo = aux.periodo");
            sql.append(String.format(" and tb_reactivo_incendio.cod_indicador = '%s'", ParamIndicador.IND_SEGURIDAD_REACTIVO_CONTRA_INCENDIO));
            sql.append(" and tb_reactivo_incendio.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tb_reactivo_incendio.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            //SenalizacionEvacuacion
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tb_senalizacion_evacuacion on tb_senalizacion_evacuacion.id_tnt = aux.id_tnt and tb_senalizacion_evacuacion.periodo = aux.periodo");
            sql.append(String.format(" and tb_senalizacion_evacuacion.cod_indicador = '%s'", ParamIndicador.IND_SEGURIDAD_SENALIZACION_EVACUACION));
            sql.append(" and tb_senalizacion_evacuacion.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tb_senalizacion_evacuacion.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            //Estructura
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tb_estructura on tb_estructura.id_tnt = aux.id_tnt and tb_estructura.periodo = aux.periodo");
            sql.append(String.format(" and tb_estructura.cod_indicador = '%s'", ParamIndicador.IND_SEGURIDAD_EDIF_SISTEMA_ESTRUCTURAL));
            sql.append(" and tb_estructura.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tb_estructura.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            sql.append(" and tb_estructura.cod_valor = d1.id_elemento");

            //CondicionEstructura
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tb_cond_estructura on tb_cond_estructura.id_tnt = aux.id_tnt and tb_cond_estructura.periodo = aux.periodo");
            sql.append(String.format(" and tb_cond_estructura.cod_indicador = '%s'", ParamIndicador.IND_SEGURIDAD_EDIF_CONDICION_SISTEMA_ESTRUCTURAL));
            sql.append(" and tb_cond_estructura.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tb_cond_estructura.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            sql.append(" and tb_cond_estructura.cod_valor = d1.id_elemento");

            //CondicionRutaEvacuacion
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tb_cond_ruta_evacuacion on tb_cond_ruta_evacuacion.id_tnt = aux.id_tnt and tb_cond_ruta_evacuacion.periodo = aux.periodo");
            sql.append(String.format(" and tb_cond_ruta_evacuacion.cod_indicador = '%s'", ParamIndicador.IND_SEGURIDAD_EDIF_CONDICION_RUTA_EVACUACION));
            sql.append(" and tb_cond_ruta_evacuacion.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tb_cond_ruta_evacuacion.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            sql.append(" and tb_cond_ruta_evacuacion.cod_valor = d1.id_elemento");

            //SenalizacionEvacuacionEdificio
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tb_sen_eva_edif on tb_sen_eva_edif.id_tnt = aux.id_tnt and tb_sen_eva_edif.periodo = aux.periodo");
            sql.append(String.format(" and tb_sen_eva_edif.cod_indicador = '%s'", ParamIndicador.IND_SEGURIDAD_EDIF_SENALIZACION_EVACUACION));
            sql.append(" and tb_sen_eva_edif.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tb_sen_eva_edif.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            sql.append(" and tb_sen_eva_edif.cod_valor = d1.id_elemento");

            //SistemaContraIncendio
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tb_sistema_incendio on tb_sistema_incendio.id_tnt = aux.id_tnt and tb_sistema_incendio.periodo = aux.periodo");
            sql.append(String.format(" and tb_sistema_incendio.cod_indicador = '%s'", ParamIndicador.IND_SEGURIDAD_EDIF_SISTEMA_CONTRA_INCENDIO));
            sql.append(" and tb_sistema_incendio.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tb_sistema_incendio.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            sql.append(" and tb_sistema_incendio.cod_valor = d1.id_elemento");

            //TotalEstudiantes
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tb_estudiante on tb_estudiante.id_tnt = aux.id_tnt and tb_estudiante.periodo = aux.periodo");
            sql.append(String.format(" and tb_estudiante.cod_indicador = '%s'", ParamIndicador.IND_TOTAL_ESTUDIANTES));
            sql.append(" and tb_estudiante.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tb_estudiante.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            //Condición de accesibilidad
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_accesibilidad on tbl_accesibilidad.id_tnt = aux.id_tnt and tbl_accesibilidad.periodo = aux.periodo");
            sql.append(String.format(" and tbl_accesibilidad.cod_indicador = '%s'", ParamIndicador.IND_ACCESIBILIDAD_CONDICION_ACCESIBILIDAD));
            sql.append(" and tbl_accesibilidad.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_accesibilidad.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            // Condicion de Riesgo Antropico
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_cond_ra on tbl_cond_ra.id_tnt = aux.id_tnt and tbl_cond_ra.periodo = aux.periodo");
            sql.append(String.format(" and tbl_cond_ra.cod_indicador = '%s'", ParamIndicador.IND_RIESGO_ANTROPICO_CONDICION_RIESGO));
            sql.append(" and tbl_cond_ra.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_cond_ra.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            // Condicion de Riesgo Natural
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_cond_rn on tbl_cond_rn.id_tnt = aux.id_tnt and tbl_cond_rn.periodo = aux.periodo");
            sql.append(String.format(" and tbl_cond_rn.cod_indicador = '%s'", ParamIndicador.IND_RIESGO_NATURAL_CONDICION_RIESGO));
            sql.append(" and tbl_cond_rn.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_cond_rn.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
        } else {
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tb_estudiante on tb_estudiante.id_tnt = aux.id_tnt and tb_estudiante.periodo = aux.periodo");
            sql.append(String.format(" and tb_estudiante.cod_indicador = '%s'", ParamIndicador.IND_TOTAL_ESTUDIANTES));
            sql.append(" and tb_estudiante.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tb_estudiante.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            //Total Predio
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tot_pred on tot_pred.id_tnt = aux.id_tnt and tot_pred.periodo = aux.periodo");
            sql.append(String.format(" and tot_pred.cod_indicador = '%s'", ParamIndicador.IND_TOTAL_PREDIOS));
            sql.append(" and tot_pred.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tot_pred.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
        }

// WHERE
        sql.append(" where aux.id_tnt = ?id_tnt and aux.periodo = ?periodo");
        if (filtro.isAgrupamientoPredio()) {
            /*sql.append(" and (tbl_tipo1.valor IS NOT NULL or");
             sql.append(" tbl_tipo2.valor IS NOT NULL or");
             sql.append(" tbl_tipo3.valor IS NOT NULL)");*/

            sql.append(" and n.principal_establecimiento = 1");
        }
        if (filtro.getIdNivel0() != null) {
            sql.append(" and n.id_nivel0 = ?id_nivel0");
        }
        if (filtro.getIdNivel1() != null) {
            sql.append(" and n.id_nivel1 = ?id_nivel1");
        }
        if (filtro.getIdNivel2() != null) {
            sql.append(" and n.id_nivel2 = ?id_nivel2");
        }
        if (filtro.getIdNivel3() != null) {
            sql.append(" and n.id_nivel3 = ?id_nivel3");
        }
        if (filtro.getIdNivel4() != null) {
            sql.append(" and n.id_nivel4 = ?id_nivel4");
        }
        if (filtro.getIdNivel5() != null) {
            sql.append(" and n.id_nivel5 = ?id_nivel5");
        }
        if (filtro.getIdEstablecimiento() != null) {
            sql.append(" and n.id_establecimiento = ?id_establecimiento");
        }
        if (filtro.getIdSede() != null) {
            sql.append(" and n.id_sede = ?id_sede");
        }
        if (filtro.getIdPredio() != null) {
            sql.append(" and n.id_predio = ?id_predio");
        }
        //ORDER BY       
        if (filtro.isAgrupamientoPredio()) {
            sql.append(" order by ");
            sql.append(" n.codigo_predio");
            sql.append(" ,d1.valor");
        }

        Query query = tpm.getEm().createNativeQuery(sql.toString());
        query.setParameter("id_tnt", tpm.getCurrentTenant());
        query.setParameter("periodo", filtro.getPeriodo());
        query.setParameter("idioma", filtro.getIdioma());
        query.setParameter("id_nivel0", filtro.getIdNivel0());
        query.setParameter("nivel_agrupamiento", filtro.getAgrupamiento());
        if (filtro.getIdNivel1() != null) {
            query.setParameter("id_nivel1", filtro.getIdNivel1());
        }
        if (filtro.getIdNivel2() != null) {
            query.setParameter("id_nivel2", filtro.getIdNivel2());
        }
        if (filtro.getIdNivel3() != null) {
            query.setParameter("id_nivel3", filtro.getIdNivel3());
        }
        if (filtro.getIdNivel4() != null) {
            query.setParameter("id_nivel4", filtro.getIdNivel4());
        }
        if (filtro.getIdNivel5() != null) {
            query.setParameter("id_nivel5", filtro.getIdNivel5());
        }
        if (filtro.getIdEstablecimiento() != null) {
            query.setParameter("id_establecimiento", filtro.getIdEstablecimiento());
        }
        if (filtro.getIdSede() != null) {
            query.setParameter("id_sede", filtro.getIdSede());
        }
        if (filtro.getIdPredio() != null) {
            query.setParameter("id_predio", filtro.getIdPredio());
        }
        return query.getResultList();
    }

    @Override
    public List<Object[]> consultarEdificios(FiltroAmbitoEdificio filtro) {
        if (filtro.isConsultaDeTiempoReal()) {
            if (ParamBaseDatos.POSTGRE.equals(UtilProperties.getDbMotor())) {
                return this.consultarEdificiosTiempoRealPostgre(filtro);
            } else {
                return this.consultarEdificiosTiempoRealOracle(filtro);
            }
        } else {
            return consultarEdificiosIndicadores(filtro);
        }
    }

    public List<Object[]> consultarEdificiosTiempoRealPostgre(FiltroAmbitoEdificio filtro) {
        String codInstrumento = this.consultarCodInstrumentoPorPeriodo(filtro.getPeriodo());
        StringBuilder sql = new StringBuilder();
        StringBuilder orden = new StringBuilder();
//SELECT
        sql.append(" select distinct ");
        if (filtro.isAgrupamientoPredio()) {
            orden.append(" n.codigo_nivel1,n.nombre_nivel1");
            orden.append(",n.codigo_nivel2,n.nombre_nivel2");
            orden.append(",n.codigo_nivel3,n.nombre_nivel3");
            orden.append(",n.codigo_nivel4,n.nombre_nivel4");
            orden.append(",n.codigo_nivel5,n.nombre_nivel5");
            orden.append(" ,n.codigo_establecimiento, n.nombre_establecimiento");
            orden.append(" ,n.codigo_sede, n.nombre_sede");
            orden.append(" ,n.codigo_predio, n.nombre_predio");
            //otros
            orden.append(" ,n.direccion_predio, n.propiedad_predio");
            orden.append(" ,n.nombre_zona, n.nombre_sector, n.nombre_clima");
            //etnias
            orden.append(" ,etnias.etnias");
            sql.append(orden.toString());
            //indicadores            
            sql.append(", mat_pred.condicion_materialidad_predio");
            sql.append(", pred_edif.edificio");
            sql.append(", mat_mur.material_muros_fechadas");
            sql.append(", mat_mur.condicion_material_muros_fechadas");
            sql.append(", mat_acab.material_acabados_fechadas");
            sql.append(", mat_acab.condicion_material_acabados_fechadas");
            sql.append(", mat_cub.material_cubiertas");
            sql.append(", mat_cub.condicion_material_cubiertas");
            sql.append(", mat_edif.condicion_materialidad_edificio");
            sql.append(", coalesce(tot_est.total_estudiantes,0) total_estudiantes");
            sql.append(", num_pis.numero_pisos_niveles");
            sql.append(", año_cons.años_construccion");
            sql.append(", tip_est.tipo_sistema_estructural");
            sql.append(", tip_est.condicion_tipo_sistema_estructural");
            sql.append(", edif_pat.edificacion_interes_patrimonial_cultural");
            sql.append(", lic_cons.licencia_construccion");
            sql.append(", rut_eva.tiene_ruta_evacuacion");
            sql.append(", rut_eva.condicion_fisica_ruta_evacuacion");
            sql.append(", señ_eva.señalizacion_medios_evacuacion");
        } else {
            if (filtro.isAgrupamientoNivel0()) {
                orden.append(" n.nombre_nivel0");
            }
            if (filtro.isAgrupamientoNivel1()) {
                orden.append(" n.codigo_nivel1,n.nombre_nivel1");
            }
            if (filtro.isAgrupamientoNivel2()) {
                orden.append("n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
            }
            if (filtro.isAgrupamientoNivel3()) {
                orden.append("n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
            }
            if (filtro.isAgrupamientoNivel4()) {
                orden.append("n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
                orden.append(",n.codigo_nivel4,n.nombre_nivel4");
            }
            if (filtro.isAgrupamientoNivel5()) {
                orden.append("n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
                orden.append(",n.codigo_nivel4,n.nombre_nivel4");
                orden.append(",n.codigo_nivel5,n.nombre_nivel5");
            }
            if (filtro.isAgrupamientoEstablecimiento()) {
                orden.append(" n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
                orden.append(",n.codigo_nivel4,n.nombre_nivel4");
                orden.append(",n.codigo_nivel5,n.nombre_nivel5");
                orden.append(", n.codigo_establecimiento, n.nombre_establecimiento");
            }
            if (filtro.isAgrupamientoSede()) {
                orden.append(" n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
                orden.append(",n.codigo_nivel4,n.nombre_nivel4");
                orden.append(",n.codigo_nivel5,n.nombre_nivel5");
                orden.append(", n.codigo_establecimiento, n.nombre_establecimiento");
                orden.append(", n.codigo_sede, n.nombre_sede");
            }
            // datos informativos
            sql.append(orden.toString());
            if (filtro.getCondMaterialidadPredio() != null) {
                sql.append(", coalesce(mat_pred.total_predios,0) total_predios_mat");
                sql.append(", coalesce(mat_pred.total_predios,0)/case when tot_pred.total is null or tot_pred.total='0' then 1 else tot_pred.total end *100 prop_predios_mat");
            }
            sql.append(", coalesce(tot_pred.total,0) total_predios");
            sql.append(", coalesce(mat_cri.total_material_criticos,0) total_material_criticos");
            sql.append(", coalesce(mat_cri.total_material_criticos,0)/case when tot_edif.total_edificios is null or tot_edif.total_edificios='0' then 1 else (3 * tot_edif.total_edificios) * 100 end prop_material_criticos");
            sql.append(", coalesce(tot_est.total_estudiantes,0) total_estudiantes");
        }
// FROM 
        sql.append(" from cier.ind_auxiliar_indicador aux");
        sql.append(" inner join cier.ind_auxiliar_consultas n on n.id_predio = aux.id_predio and n.periodo = aux.periodo and n.id_tnt = aux.id_tnt");
        if (filtro.isAgrupamientoPredio()) {
            //etnias
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ETNIAS_PREDIO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) as etnias on etnias.id_dig_instrumento = aux.id_dig_instrumento and etnias.id_predio = aux.id_predio");
            // CondMaterialidadPredio
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_EDIFICIO_CONDICION_MATERIALIDAD_PREDIO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) as mat_pred on mat_pred.id_dig_instrumento = aux.id_dig_instrumento and mat_pred.id_predio = aux.id_predio");
            //TotalEstudiantes
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_TOTAL_ESTUDIANTES, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) as tot_est on tot_est.id_dig_instrumento = aux.id_dig_instrumento and tot_est.id_predio = aux.id_predio");
            //NumeroEdificio
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_PREDIOS_EDIFICIOS, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) as pred_edif on pred_edif.id_dig_instrumento = aux.id_dig_instrumento and pred_edif.id_predio = aux.id_predio");
            //MaterialMurosFachadas  CondMaterialMurosFachadas
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_EDIFICIO_MATERIAL_MUROS_FACHADAS, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) as mat_mur on mat_mur.id_dig_instrumento = aux.id_dig_instrumento and mat_mur.id_predio = aux.id_predio");
            sql.append(" and mat_mur.edificio = pred_edif.edificio and mat_mur.elemento = pred_edif.elemento");
            //MaterialAcabadosFachadas CondMaterialAcabadosFachadas
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_EDIFICIO_MATERIAL_ACABADOS_FACHADAS, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) as mat_acab on mat_acab.id_dig_instrumento = aux.id_dig_instrumento and mat_acab.id_predio = aux.id_predio");
            sql.append(" and mat_acab.edificio = pred_edif.edificio and mat_acab.elemento = pred_edif.elemento");
            //MaterialCubiertas CondMaterialCubiertas
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_EDIFICIO_MATERIAL_CUBIERTAS, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) as mat_cub on mat_cub.id_dig_instrumento = aux.id_dig_instrumento and mat_cub.id_predio = aux.id_predio");
            sql.append(" and mat_cub.edificio = pred_edif.edificio and mat_cub.elemento = pred_edif.elemento");
            //CondMaterialidadEdificio
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_EDIFICIO_CONDICION_MATERIALIDAD, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) as mat_edif on mat_edif.id_dig_instrumento = aux.id_dig_instrumento and mat_edif.id_predio = aux.id_predio");
            sql.append(" and mat_edif.edificio = pred_edif.edificio and mat_edif.elemento = pred_edif.elemento");
            //NumeroPisosNiveles
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_EDIFICIO_NUMERO_PISOS_NIVELES, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) as num_pis on num_pis.id_dig_instrumento = aux.id_dig_instrumento and num_pis.id_predio = aux.id_predio");
            sql.append(" and num_pis.edificio = pred_edif.edificio and num_pis.elemento = pred_edif.elemento");
            //AñosConstruccionEdificio
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_EDIFICIO_ANNOS_CONSTRUCCION, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) as año_cons on año_cons.id_dig_instrumento = aux.id_dig_instrumento and año_cons.id_predio = aux.id_predio");
            sql.append(" and año_cons.edificio = pred_edif.edificio and año_cons.elemento = pred_edif.elemento");
            //TipoSistemaEstructural CondTipoSistemaEstructural
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_EDIFICIO_TIPO_SISTEMA_ESTRUCTURAL, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) as tip_est on tip_est.id_dig_instrumento = aux.id_dig_instrumento and tip_est.id_predio = aux.id_predio");
            sql.append(" and tip_est.edificio = pred_edif.edificio and tip_est.elemento = pred_edif.elemento");
            //EdificacionPatrimonialCultural
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_EDIFICIO_INTERES_PATRIMONIAL_CULTURAL, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) as edif_pat on edif_pat.id_dig_instrumento = aux.id_dig_instrumento and edif_pat.id_predio = aux.id_predio");
            sql.append(" and edif_pat.edificio = pred_edif.edificio and edif_pat.elemento = pred_edif.elemento");
            //LicenciaConstruccion
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_EDIFICIO_LICENCIA_CONSTRUCCION, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) as lic_cons on lic_cons.id_dig_instrumento = aux.id_dig_instrumento and lic_cons.id_predio = aux.id_predio");
            sql.append(" and lic_cons.edificio = pred_edif.edificio and lic_cons.elemento = pred_edif.elemento");
            //TieneRutaEvacuacion CondFisicaRutaEvacuacion
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_EDIFICIO_TIENE_RUTA_EVACUACION, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) as rut_eva on rut_eva.id_dig_instrumento = aux.id_dig_instrumento and rut_eva.id_predio = aux.id_predio");
            sql.append(" and rut_eva.edificio = pred_edif.edificio and rut_eva.elemento = pred_edif.elemento");
            //SeñalizacionMediosEvacuacion
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_EDIFICIO_SENNALIZACION_MEDIOS_EVACUACION, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) as señ_eva on señ_eva.id_dig_instrumento = aux.id_dig_instrumento and señ_eva.id_predio = aux.id_predio");
            sql.append(" and señ_eva.edificio = pred_edif.edificio and señ_eva.elemento = pred_edif.elemento");
        } else {
            String strSQLNivelAgrupamiento = this.getSQLNivelAgrupamiento(filtro);
            if (filtro.getCondMaterialidadPredio() != null) {
                //NumPredCondMaterialidad
                sql.append(" left join (");
                sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_EDIFICIO_NUM_PREDIOS_CONDICION_MATERIALIDAD, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
                sql.append(String.format(" ) as mat_pred on mat_pred.%1$s = n.%1$s", strSQLNivelAgrupamiento));
                sql.append(" and mat_pred.periodo = aux.periodo and mat_pred.id_tnt = aux.id_tnt");
                sql.append(" and mat_pred.condicion_materialidad_predio = ?cond_mat_pred");
            }
            //TotalPredios
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_TOTAL_PREDIOS, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
            sql.append(String.format(" ) as tot_pred on tot_pred.%1$s = n.%1$s", strSQLNivelAgrupamiento));
            sql.append(" and tot_pred.periodo = aux.periodo and tot_pred.id_tnt = aux.id_tnt");
            //total edificios
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_TOTAL_EDIFICIOS, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
            sql.append(String.format(" ) as tot_edif on tot_edif.%1$s = n.%1$s", strSQLNivelAgrupamiento));
            sql.append(" and tot_edif.periodo = aux.periodo and tot_edif.id_tnt = aux.id_tnt");
            //NumMaterialesCondCriticaPredio
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_EDIFICIO_NUM_MATERIALES_CONDICION_CRITICA_PREDIO, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
            sql.append(String.format(" ) as mat_cri on mat_cri.%1$s = n.%1$s", strSQLNivelAgrupamiento));
            sql.append(" and mat_cri.periodo = aux.periodo and mat_cri.id_tnt = aux.id_tnt");
            //TotalEstudiantes
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_TOTAL_ESTUDIANTES, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
            sql.append(String.format(" ) as tot_est on tot_est.%1$s = n.%1$s", strSQLNivelAgrupamiento));
            sql.append(" and tot_est.periodo = aux.periodo and tot_est.id_tnt = aux.id_tnt");
        }
// WHERE
        sql.append(" where aux.id_tnt = ?id_tnt and aux.periodo = ?periodo");
        if (filtro.isAgrupamientoPredio()) {
            sql.append(" and n.principal_establecimiento = 1");
        }
        if (filtro.getIdNivel0() != null) {
            sql.append(" and n.id_nivel0 = ?id_nivel0");
        }
        if (filtro.getIdNivel1() != null) {
            sql.append(" and n.id_nivel1 = ?id_nivel1");
        }
        if (filtro.getIdNivel2() != null) {
            sql.append(" and n.id_nivel2 = ?id_nivel2");
        }
        if (filtro.getIdNivel3() != null) {
            sql.append(" and n.id_nivel3 = ?id_nivel3");
        }
        if (filtro.getIdNivel4() != null) {
            sql.append(" and n.id_nivel4 = ?id_nivel4");
        }
        if (filtro.getIdNivel5() != null) {
            sql.append(" and n.id_nivel5 = ?id_nivel5");
        }
        if (filtro.getIdEstablecimiento() != null) {
            sql.append(" and n.id_establecimiento = ?id_establecimiento");
        }
        if (filtro.getIdSede() != null) {
            sql.append(" and n.id_sede = ?id_sede");
        }
        if (filtro.getIdPredio() != null) {
            sql.append(" and n.id_predio = ?id_predio");
        }
        // otros filtros
        if (filtro.getCodZona() != null) {
            sql.append(" and n.codigo_zona = ?cod_zona");
        }
        if (filtro.getCodSector() != null) {
            sql.append(" and n.codigo_sector = ?cod_sector");
        }
        // filtros adicionales
        if (filtro.getCodMaterialMuros() != null) {
            sql.append(" and mat_mur.codigo_material_muros_fechadas = ?cod_muros");
        }
        if (filtro.getCodMaterialAcabados() != null) {
            sql.append(" and mat_acab.codigo_material_acabados_fechadas = ?cod_acabados");
        }
        if (filtro.getCodMaterialCubiertas() != null) {
            sql.append(" and mat_cub.codigo_material_cubiertas = ?cod_cubiertas");
        }
        if (filtro.getCondMaterial() != null) {
            sql.append(" and (mat_mur.condicion_material_muros_fechadas = ?cond_material");
            sql.append(" or mat_acab.condicion_material_acabados_fechadas = ?cond_material");
            sql.append(" or mat_cub.condicion_material_cubiertas = ?cond_material)");
        }
        if (filtro.getCondMaterialidadEdificio() != null) {
            sql.append(" and mat_edif.condicion_materialidad_edificio = ?cond_mat_edif");
        }
        if (filtro.getCondMaterialidadPredio() != null && filtro.isAgrupamientoPredio()) {
            sql.append(" and mat_pred.condicion_materialidad_predio = ?cond_mat_pred");
        }
        // ORDER BY 
        sql.append(" ORDER by ");
        sql.append(orden.toString());

        String auxSql = sql.toString();
        auxSql = auxSql.replaceAll("\\?start", "");
        auxSql = auxSql.replaceAll("\\?end", "");

        Query query = tpm.getEm().createNativeQuery(auxSql);
        query.setParameter("id_tnt", tpm.getCurrentTenant());
        query.setParameter("periodo", filtro.getPeriodo());
        query.setParameter("idioma", filtro.getIdioma());
        query.setParameter("id_nivel0", filtro.getIdNivel0());
        if (filtro.getIdNivel1() != null) {
            query.setParameter("id_nivel1", filtro.getIdNivel1());
        }
        if (filtro.getIdNivel2() != null) {
            query.setParameter("id_nivel2", filtro.getIdNivel2());
        }
        if (filtro.getIdNivel3() != null) {
            query.setParameter("id_nivel3", filtro.getIdNivel3());
        }
        if (filtro.getIdNivel4() != null) {
            query.setParameter("id_nivel4", filtro.getIdNivel4());
        }
        if (filtro.getIdNivel5() != null) {
            query.setParameter("id_nivel5", filtro.getIdNivel5());
        }
        if (filtro.getIdEstablecimiento() != null) {
            query.setParameter("id_establecimiento", filtro.getIdEstablecimiento());
        }
        if (filtro.getIdSede() != null) {
            query.setParameter("id_sede", filtro.getIdSede());
        }
        if (filtro.getIdPredio() != null) {
            query.setParameter("id_predio", filtro.getIdPredio());
        }
        // otros filtros
        if (filtro.getCodZona() != null) {
            query.setParameter("cod_zona", filtro.getCodZona());
        }
        if (filtro.getCodSector() != null) {
            query.setParameter("cod_sector", filtro.getCodSector());
        }
        // filtros adicionales
        if (filtro.getCodMaterialMuros() != null) {
            query.setParameter("cod_muros", filtro.getCodMaterialMuros());
        }
        if (filtro.getCodMaterialAcabados() != null) {
            query.setParameter("cod_acabados", filtro.getCodMaterialAcabados());
        }
        if (filtro.getCodMaterialCubiertas() != null) {
            query.setParameter("cod_cubiertas", filtro.getCodMaterialCubiertas());
        }
        if (filtro.getCondMaterialidadPredio() != null) {
            query.setParameter("cond_mat_pred", filtro.getCondMaterialidadPredio());
        }
        if (filtro.getCondMaterial() != null) {
            query.setParameter("cond_material", filtro.getCondMaterial().toString());
        }
        if (filtro.getCondMaterialidadEdificio() != null) {
            query.setParameter("cond_mat_edif", filtro.getCondMaterialidadEdificio());
        }
        return query.getResultList();
    }

    public List<Object[]> consultarEdificiosTiempoRealOracle(FiltroAmbitoEdificio filtro) {
        String codInstrumento = this.consultarCodInstrumentoPorPeriodo(filtro.getPeriodo());
        StringBuilder sql = new StringBuilder();
        StringBuilder orden = new StringBuilder();
//SELECT
        sql.append(" select distinct ");
        if (filtro.isAgrupamientoPredio()) {
            orden.append(" n.codigo_nivel1,n.nombre_nivel1");
            orden.append(",n.codigo_nivel2,n.nombre_nivel2");
            orden.append(",n.codigo_nivel3,n.nombre_nivel3");
            orden.append(",n.codigo_nivel4,n.nombre_nivel4");
            orden.append(",n.codigo_nivel5,n.nombre_nivel5");
            orden.append(" ,n.codigo_establecimiento, n.nombre_establecimiento");
            orden.append(" ,n.codigo_sede, n.nombre_sede");
            orden.append(" ,n.codigo_predio, n.nombre_predio");
            //otros
            orden.append(" ,n.direccion_predio, n.propiedad_predio");
            orden.append(" ,n.nombre_zona, n.nombre_sector, n.nombre_clima");
            //etnias
            orden.append(" ,etnias.etnias");
            sql.append(orden.toString());
            //indicadores            
            sql.append(", mat_pred.condicion_materialidad_predio");
            sql.append(", pred_edif.edificio");
            sql.append(", mat_mur.material_muros_fechadas");
            sql.append(", mat_mur.cond_mat_muros_fachadas");
            sql.append(", mat_acab.material_acabados_fechadas");
            sql.append(", mat_acab.cond_mat_acabados_fachadas");
            sql.append(", mat_cub.material_cubiertas");
            sql.append(", mat_cub.condicion_material_cubiertas");
            sql.append(", mat_edif.cond_materialidad_edificio");
            sql.append(", coalesce(tot_est.total_estudiantes,0) total_estudiantes");
            sql.append(", num_pis.numero_pisos_niveles");
            sql.append(", ano_cons.anos_construccion");
            sql.append(", tip_est.tipo_sistema_estructural");
            sql.append(", tip_est.cond_tipo_sistema_estructural");
            sql.append(", edif_pat.edificacion_int_patri_ctural");
            sql.append(", lic_cons.licencia_construccion");
            sql.append(", rut_eva.tiene_ruta_evacuacion");
            sql.append(", rut_eva.cond_fisica_ruta_evacuacion");
            sql.append(", sen_eva.senalizacion_medios_evacuacion");
        } else {
            if (filtro.isAgrupamientoNivel0()) {
                orden.append(" n.nombre_nivel0");
            }
            if (filtro.isAgrupamientoNivel1()) {
                orden.append(" n.codigo_nivel1,n.nombre_nivel1");
            }
            if (filtro.isAgrupamientoNivel2()) {
                orden.append("n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
            }
            if (filtro.isAgrupamientoNivel3()) {
                orden.append("n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
            }
            if (filtro.isAgrupamientoNivel4()) {
                orden.append("n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
                orden.append(",n.codigo_nivel4,n.nombre_nivel4");
            }
            if (filtro.isAgrupamientoNivel5()) {
                orden.append("n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
                orden.append(",n.codigo_nivel4,n.nombre_nivel4");
                orden.append(",n.codigo_nivel5,n.nombre_nivel5");
            }
            if (filtro.isAgrupamientoEstablecimiento()) {
                orden.append(" n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
                orden.append(",n.codigo_nivel4,n.nombre_nivel4");
                orden.append(",n.codigo_nivel5,n.nombre_nivel5");
                orden.append(", n.codigo_establecimiento, n.nombre_establecimiento");
            }
            if (filtro.isAgrupamientoSede()) {
                orden.append(" n.codigo_nivel1,n.nombre_nivel1");
                orden.append(",n.codigo_nivel2,n.nombre_nivel2");
                orden.append(",n.codigo_nivel3,n.nombre_nivel3");
                orden.append(",n.codigo_nivel4,n.nombre_nivel4");
                orden.append(",n.codigo_nivel5,n.nombre_nivel5");
                orden.append(", n.codigo_establecimiento, n.nombre_establecimiento");
                orden.append(", n.codigo_sede, n.nombre_sede");
            }
            // datos informativos
            sql.append(orden.toString());
            if (filtro.getCondMaterialidadPredio() != null) {
                sql.append(", coalesce(mat_pred.total_predios,0) total_predios_mat");
                sql.append(", coalesce(mat_pred.total_predios,0)/case when tot_pred.total is null or tot_pred.total='0' then 1 else tot_pred.total end *100 prop_predios_mat");
            }
            sql.append(", coalesce(tot_pred.total,0) total_predios");
            sql.append(", coalesce(mat_cri.total_material_criticos,0) total_material_criticos");
            sql.append(", DIVIDIR(MAT_CRI.TOTAL_MATERIAL_CRITICOS,CASE WHEN TOT_EDIF.TOTAL_EDIFICIOS IS NULL OR TOT_EDIF.TOTAL_EDIFICIOS='0' THEN 1 ELSE (3 * TOT_EDIF.TOTAL_EDIFICIOS) END) * 100 prop_material_criticos");
            sql.append(", coalesce(tot_est.total_estudiantes,0) total_estudiantes");
        }
// FROM 
        sql.append(" from ind_auxiliar_indicador aux");
        sql.append(" inner join ind_auxiliar_consultas n on n.id_predio = aux.id_predio and n.periodo = aux.periodo and n.id_tnt = aux.id_tnt");
        if (filtro.isAgrupamientoPredio()) {
            //etnias
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ETNIAS_PREDIO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) etnias on etnias.id_predio = aux.id_predio");
            // CondMaterialidadPredio
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_EDIFICIO_CONDICION_MATERIALIDAD_PREDIO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) mat_pred on mat_pred.id_predio = aux.id_predio");
            //TotalEstudiantes
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_TOTAL_ESTUDIANTES, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) tot_est on tot_est.id_predio = aux.id_predio");
            //NumeroEdificio
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_PREDIOS_EDIFICIOS, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) pred_edif on pred_edif.id_predio = aux.id_predio");
            //MaterialMurosFachadas  CondMaterialMurosFachadas
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_EDIFICIO_MATERIAL_MUROS_FACHADAS, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) mat_mur on mat_mur.id_predio = aux.id_predio");
            sql.append(" and mat_mur.edificio = pred_edif.edificio and mat_mur.elemento = pred_edif.elemento");
            //MaterialAcabadosFachadas CondMaterialAcabadosFachadas
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_EDIFICIO_MATERIAL_ACABADOS_FACHADAS, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) mat_acab on mat_acab.id_predio = aux.id_predio");
            sql.append(" and mat_acab.edificio = pred_edif.edificio and mat_acab.elemento = pred_edif.elemento");
            //MaterialCubiertas CondMaterialCubiertas
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_EDIFICIO_MATERIAL_CUBIERTAS, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) mat_cub on mat_cub.id_predio = aux.id_predio");
            sql.append(" and mat_cub.edificio = pred_edif.edificio and mat_cub.elemento = pred_edif.elemento");
            //CondMaterialidadEdificio
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_EDIFICIO_CONDICION_MATERIALIDAD, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) mat_edif on mat_edif.id_predio = aux.id_predio");
            sql.append(" and mat_edif.edificio = pred_edif.edificio and mat_edif.elemento = pred_edif.elemento");
            //NumeroPisosNiveles
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_EDIFICIO_NUMERO_PISOS_NIVELES, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) num_pis on num_pis.id_predio = aux.id_predio");
            sql.append(" and num_pis.edificio = pred_edif.edificio and num_pis.elemento = pred_edif.elemento");
            //AñosConstruccionEdificio
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_EDIFICIO_ANNOS_CONSTRUCCION, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) ano_cons on ano_cons.id_predio = aux.id_predio");
            sql.append(" and ano_cons.edificio = pred_edif.edificio and ano_cons.elemento = pred_edif.elemento");
            //TipoSistemaEstructural CondTipoSistemaEstructural
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_EDIFICIO_TIPO_SISTEMA_ESTRUCTURAL, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) tip_est on tip_est.id_predio = aux.id_predio");
            sql.append(" and tip_est.edificio = pred_edif.edificio and tip_est.elemento = pred_edif.elemento");
            //EdificacionPatrimonialCultural
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_EDIFICIO_INTERES_PATRIMONIAL_CULTURAL, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) edif_pat on edif_pat.id_predio = aux.id_predio");
            sql.append(" and edif_pat.edificio = pred_edif.edificio and edif_pat.elemento = pred_edif.elemento");
            //LicenciaConstruccion
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_EDIFICIO_LICENCIA_CONSTRUCCION, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) lic_cons on lic_cons.id_predio = aux.id_predio");
            sql.append(" and lic_cons.edificio = pred_edif.edificio and lic_cons.elemento = pred_edif.elemento");
            //TieneRutaEvacuacion CondFisicaRutaEvacuacion
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_EDIFICIO_TIENE_RUTA_EVACUACION, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) rut_eva on rut_eva.id_predio = aux.id_predio");
            sql.append(" and rut_eva.edificio = pred_edif.edificio and rut_eva.elemento = pred_edif.elemento");
            //SeñalizacionMediosEvacuacion
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_EDIFICIO_SENNALIZACION_MEDIOS_EVACUACION, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) sen_eva on sen_eva.id_predio = aux.id_predio");
            sql.append(" and sen_eva.edificio = pred_edif.edificio and sen_eva.elemento = pred_edif.elemento");
        } else {
            String strSQLNivelAgrupamiento = this.getSQLNivelAgrupamiento(filtro);
            if (filtro.getCondMaterialidadPredio() != null) {
                //NumPredCondMaterialidad
                sql.append(" left join (");
                sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_EDIFICIO_NUM_PREDIOS_CONDICION_MATERIALIDAD, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
                sql.append(String.format(" ) mat_pred on mat_pred.%1$s = n.%1$s", strSQLNivelAgrupamiento));
                sql.append(" and mat_pred.periodo = aux.periodo and mat_pred.id_tnt = aux.id_tnt");
                sql.append(" and mat_pred.condicion_materialidad_predio = ?cond_mat_pred");
            }
            //TotalPredios
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_TOTAL_PREDIOS, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
            sql.append(String.format(" ) tot_pred on tot_pred.%1$s = n.%1$s", strSQLNivelAgrupamiento));
            sql.append(" and tot_pred.periodo = aux.periodo and tot_pred.id_tnt = aux.id_tnt");
            //total edificios
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_TOTAL_EDIFICIOS, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
            sql.append(String.format(" ) tot_edif on tot_edif.%1$s = n.%1$s", strSQLNivelAgrupamiento));
            sql.append(" and tot_edif.periodo = aux.periodo and tot_edif.id_tnt = aux.id_tnt");
            //NumMaterialesCondCriticaPredio
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_EDIFICIO_NUM_MATERIALES_CONDICION_CRITICA_PREDIO, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
            sql.append(String.format(" ) mat_cri on mat_cri.%1$s = n.%1$s", strSQLNivelAgrupamiento));
            sql.append(" and mat_cri.periodo = aux.periodo and mat_cri.id_tnt = aux.id_tnt");
            //TotalEstudiantes
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_TOTAL_ESTUDIANTES, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
            sql.append(String.format(" ) tot_est on tot_est.%1$s = n.%1$s", strSQLNivelAgrupamiento));
            sql.append(" and tot_est.periodo = aux.periodo and tot_est.id_tnt = aux.id_tnt");
        }
// WHERE
        sql.append(" where aux.id_tnt = ?id_tnt and aux.periodo = ?periodo");
        if (filtro.isAgrupamientoPredio()) {
            sql.append(" and n.principal_establecimiento = 1");
        }
        if (filtro.getIdNivel0() != null) {
            sql.append(" and n.id_nivel0 = ?id_nivel0");
        }
        if (filtro.getIdNivel1() != null) {
            sql.append(" and n.id_nivel1 = ?id_nivel1");
        }
        if (filtro.getIdNivel2() != null) {
            sql.append(" and n.id_nivel2 = ?id_nivel2");
        }
        if (filtro.getIdNivel3() != null) {
            sql.append(" and n.id_nivel3 = ?id_nivel3");
        }
        if (filtro.getIdNivel4() != null) {
            sql.append(" and n.id_nivel4 = ?id_nivel4");
        }
        if (filtro.getIdNivel5() != null) {
            sql.append(" and n.id_nivel5 = ?id_nivel5");
        }
        if (filtro.getIdEstablecimiento() != null) {
            sql.append(" and n.id_establecimiento = ?id_establecimiento");
        }
        if (filtro.getIdSede() != null) {
            sql.append(" and n.id_sede = ?id_sede");
        }
        if (filtro.getIdPredio() != null) {
            sql.append(" and n.id_predio = ?id_predio");
        }
        // otros filtros
        if (filtro.getCodZona() != null) {
            sql.append(" and n.codigo_zona = ?cod_zona");
        }
        if (filtro.getCodSector() != null) {
            sql.append(" and n.codigo_sector = ?cod_sector");
        }
        // filtros adicionales
        if (filtro.getCodMaterialMuros() != null) {
            sql.append(" and mat_mur.codigo_mat_muros_fechadas = ?cod_muros");
        }
        if (filtro.getCodMaterialAcabados() != null) {
            sql.append(" and mat_acab.codigo_mat_aca_fechadas = ?cod_acabados");
        }
        if (filtro.getCodMaterialCubiertas() != null) {
            sql.append(" and mat_cub.codigo_material_cubiertas = ?cod_cubiertas");
        }
        if (filtro.getCondMaterial() != null) {
            sql.append(" and (mat_mur.cond_mat_muros_fachadas = ?cond_material");
            sql.append(" or mat_acab.cond_mat_acabados_fachadas = ?cond_material");
            sql.append(" or mat_cub.condicion_material_cubiertas = ?cond_material)");
        }
        if (filtro.getCondMaterialidadEdificio() != null) {
            sql.append(" and mat_edif.cond_materialidad_edificio = ?cond_mat_edif");
        }
        if (filtro.getCondMaterialidadPredio() != null && filtro.isAgrupamientoPredio()) {
            sql.append(" and mat_pred.condicion_materialidad_predio = ?cond_mat_pred");
        }
        // ORDER BY 
        sql.append(" ORDER by ");
        sql.append(orden.toString());

        Query query = tpm.getEm().createNativeQuery(sql.toString());
        query.setParameter("id_tnt", tpm.getCurrentTenant());
        query.setParameter("periodo", filtro.getPeriodo());
        query.setParameter("idioma", filtro.getIdioma());
        query.setParameter("id_nivel0", filtro.getIdNivel0());
        if (filtro.getIdNivel1() != null) {
            query.setParameter("id_nivel1", filtro.getIdNivel1());
        }
        if (filtro.getIdNivel2() != null) {
            query.setParameter("id_nivel2", filtro.getIdNivel2());
        }
        if (filtro.getIdNivel3() != null) {
            query.setParameter("id_nivel3", filtro.getIdNivel3());
        }
        if (filtro.getIdNivel4() != null) {
            query.setParameter("id_nivel4", filtro.getIdNivel4());
        }
        if (filtro.getIdNivel5() != null) {
            query.setParameter("id_nivel5", filtro.getIdNivel5());
        }
        if (filtro.getIdEstablecimiento() != null) {
            query.setParameter("id_establecimiento", filtro.getIdEstablecimiento());
        }
        if (filtro.getIdSede() != null) {
            query.setParameter("id_sede", filtro.getIdSede());
        }
        if (filtro.getIdPredio() != null) {
            query.setParameter("id_predio", filtro.getIdPredio());
        }
        // otros filtros
        if (filtro.getCodZona() != null) {
            query.setParameter("cod_zona", filtro.getCodZona());
        }
        if (filtro.getCodSector() != null) {
            query.setParameter("cod_sector", filtro.getCodSector());
        }
        // filtros adicionales
        if (filtro.getCodMaterialMuros() != null) {
            query.setParameter("cod_muros", filtro.getCodMaterialMuros());
        }
        if (filtro.getCodMaterialAcabados() != null) {
            query.setParameter("cod_acabados", filtro.getCodMaterialAcabados());
        }
        if (filtro.getCodMaterialCubiertas() != null) {
            query.setParameter("cod_cubiertas", filtro.getCodMaterialCubiertas());
        }
        if (filtro.getCondMaterialidadPredio() != null) {
            query.setParameter("cond_mat_pred", filtro.getCondMaterialidadPredio());
        }
        if (filtro.getCondMaterial() != null) {
            query.setParameter("cond_material", filtro.getCondMaterial().toString());
        }
        if (filtro.getCondMaterialidadEdificio() != null) {
            query.setParameter("cond_mat_edif", filtro.getCondMaterialidadEdificio());
        }
        return query.getResultList();
    }

    public List<Object[]> consultarEdificiosIndicadores(FiltroAmbitoEdificio filtro) {
        if (ParamBaseDatos.POSTGRE.equals(UtilProperties.getDbMotor())) {
            return consultarEdificiosTiempoRealPostgre(filtro);
        } else {
            return consultarEdificiosTiempoRealOracle(filtro);
        }
    }

    @Override
    public List<Object[]> consultarEspacios(FiltroAmbitoEspacio filtro) {
        if (ParamBaseDatos.POSTGRE.equals(UtilProperties.getDbMotor())) {
            return this.consultarEspaciosTiempoRealPostgre(filtro);
        } else {
            return this.consultarEspaciosTiempoRealOracle(filtro);
        }
    }

    private List<Object[]> consultarEspaciosTiempoRealPostgre(FiltroAmbitoEspacio filtro) {
        String codInstrumento = this.consultarCodInstrumentoPorPeriodo(filtro.getPeriodo());
        StringBuilder sql = new StringBuilder();
        StringBuilder agrupamiento = new StringBuilder();
//SELECT
        sql.append(" select ");
        if (filtro.isAgrupamientoPredio()) {
            sql.append(" distinct ");
            sql.append(" n.codigo_nivel1,n.nombre_nivel1");
            sql.append(",n.codigo_nivel2,n.nombre_nivel2");
            sql.append(",n.codigo_nivel3,n.nombre_nivel3");
            sql.append(",n.codigo_nivel4,n.nombre_nivel4");
            sql.append(",n.codigo_nivel5,n.nombre_nivel5");
            sql.append(", n.codigo_establecimiento, n.nombre_establecimiento");
            sql.append(", n.codigo_sede, n.nombre_sede");
            sql.append(", n.codigo_predio, n.nombre_predio");
            //*otros
            sql.append(" , n.direccion_predio direccion_predio, n.nombre_zona zona");
            sql.append(" , n.nombre_sector sector, n.nombre_clima clima");
            //condicion accesibilidad
            sql.append(" ,tbl_accesibilidad.accesibilidad");
            // Condicion de Riesgo Antropico
            sql.append(" ,tbl_cond_ra.condicion_riesgo");
            // Condicion de Riesgo Natural
            sql.append(" ,tbl_cond_rn.condicion_riesgo");
            // *indicadores        
            //# de espacios según condición de piso
            sql.append(" ,coalesce(espacios_piso.valor,0)");
            // Área (m2), según condición piso
            sql.append(" ,coalesce(area_piso.valor,0)");
            //Proporción área (m2) piso
            sql.append(" ,coalesce(area_piso.valor,0)/case when area_horizontal.valor = 0 then 1 else area_horizontal.valor end ::float");
            //# de espacios según condición de muro
            sql.append(" ,coalesce(espacios_muro.valor,0)");
            // Área (m2), según condición de muro
            sql.append(" ,coalesce(area_muro.valor,0)");
            //Proporción área (m2) muro
            sql.append(" ,coalesce(area_muro.valor,0)/case when area_vertical.valor = 0 then 1 else area_vertical.valor end ::float");
            //# de espacios según condición de acabado muro
            sql.append(" ,coalesce(espacios_acabado_muro.valor,0)");
            // Área (m2), según condición de acabado muro
            sql.append(" ,coalesce(area_acabado_muro.valor,0)");
            //Proporción área (m2) acabado muro
            sql.append(" ,coalesce(area_acabado_muro.valor,0)/case when area_vertical.valor = 0 then 1 else area_vertical.valor end ::float");
            //# de espacios según condición de ventana
            sql.append(" ,coalesce(espacios_ventana.valor,0)");
            //Proporción ventana
            sql.append(" ,coalesce(espacios_ventana.valor,0)/case when total_espacios_con_ventana.valor = 0 then 1 else total_espacios_con_ventana.valor end ::float");
            //# de espacios según condición de puerta
            sql.append(" ,coalesce(espacios_puerta.valor,0)");
            //Proporción puerta
            sql.append(" ,coalesce(espacios_puerta.valor,0)/case when total_espacios_con_puerta.valor = 0 then 1 else total_espacios_con_puerta.valor end ::float");
            //# de espacios según condición de techo
            sql.append(" ,coalesce(espacios_techo.valor,0)");
            // Área (m2), según condición techo
            sql.append(" ,coalesce(area_techo.valor,0)");
            //Proporción área (m2) techo
            sql.append(" ,coalesce(area_techo.valor,0)/case when area_total_techo.valor = 0 then 1 else area_total_techo.valor end ::float");
            //Área total
            sql.append(" ,coalesce(area_piso.valor,0)+coalesce(area_muro.valor,0)+coalesce(area_acabado_muro.valor,0)+coalesce(area_techo.valor,0)");

        } else {
            if (filtro.isAgrupamientoNivel0()) {
                agrupamiento.append(" n.nombre_nivel0");
            }
            if (filtro.isAgrupamientoNivel1()) {
                agrupamiento.append(" n.codigo_nivel1,n.nombre_nivel1");
            }
            if (filtro.isAgrupamientoNivel2()) {
                agrupamiento.append("n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
            }
            if (filtro.isAgrupamientoNivel3()) {
                agrupamiento.append("n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
            }
            if (filtro.isAgrupamientoNivel4()) {
                agrupamiento.append("n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
            }
            if (filtro.isAgrupamientoNivel5()) {
                agrupamiento.append("n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
                agrupamiento.append(",n.codigo_nivel5,n.nombre_nivel5");
            }
            if (filtro.isAgrupamientoEstablecimiento()) {
                agrupamiento.append(" n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
                agrupamiento.append(",n.codigo_nivel5,n.nombre_nivel5");
                agrupamiento.append(", n.codigo_establecimiento, n.nombre_establecimiento");
            }
            if (filtro.isAgrupamientoSede()) {
                agrupamiento.append(" n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
                agrupamiento.append(",n.codigo_nivel5,n.nombre_nivel5");
                agrupamiento.append(", n.codigo_establecimiento, n.nombre_establecimiento");
                agrupamiento.append(", n.codigo_sede, n.nombre_sede");
            }

            // select
            sql.append(agrupamiento.toString());
            // *indicadores        
            //# de espacios según condición de piso
            sql.append(" ,sum(coalesce(espacios_piso.valor,0))");
            // Área (m2), según condición piso
            sql.append(" ,sum(coalesce(area_piso.valor,0))");
            //Proporción área (m2) piso
            sql.append(" ,sum(coalesce(area_piso.valor,0))/case when sum(area_horizontal.valor) = 0 then 1 else sum(area_horizontal.valor) end ::float");
            //# de espacios según condición de muro
            sql.append(" ,sum(coalesce(espacios_muro.valor,0))");
            // Área (m2), según condición de muro
            sql.append(" ,sum(coalesce(area_muro.valor,0))");
            //Proporción área (m2) muro
            sql.append(" ,sum(coalesce(area_muro.valor,0))/case when sum(area_vertical.valor) = 0 then 1 else sum(area_vertical.valor) end ::float");
            //# de espacios según condición de acabado muro
            sql.append(" ,sum(coalesce(espacios_acabado_muro.valor,0))");
            // Área (m2), según condición de acabado muro
            sql.append(" ,sum(coalesce(area_acabado_muro.valor,0))");
            //Proporción área (m2) acabado muro
            sql.append(" ,sum(coalesce(area_acabado_muro.valor,0))/case when sum(area_vertical.valor) = 0 then 1 else sum(area_vertical.valor) end ::float");
            //# de espacios según condición de ventana
            sql.append(" ,sum(coalesce(espacios_ventana.valor,0))");
            //Proporción ventana
            sql.append(" ,sum(coalesce(espacios_ventana.valor,0))/case when sum(total_espacios_con_ventana.valor) = 0 then 1 else sum(total_espacios_con_ventana.valor) end ::float");
            //# de espacios según condición de puerta
            sql.append(" ,sum(coalesce(espacios_puerta.valor,0))");
            //Proporción puerta
            sql.append(" ,sum(coalesce(espacios_puerta.valor,0))/case when sum(total_espacios_con_puerta.valor) = 0 then 1 else sum(total_espacios_con_puerta.valor) end ::float");
            //# de espacios según condición de techo
            sql.append(" ,sum(coalesce(espacios_techo.valor,0))");
            // Área (m2), según condición techo
            sql.append(" ,sum(coalesce(area_techo.valor,0))");
            //Proporción área (m2) techo
            sql.append(" ,sum(coalesce(area_techo.valor,0))/case when sum(area_total_techo.valor) = 0 then 1 else sum(area_total_techo.valor) end ::float");
            //Área total
            sql.append(" ,sum(coalesce(area_piso.valor,0))+sum(coalesce(area_muro.valor,0))+sum(coalesce(area_acabado_muro.valor,0))+sum(coalesce(area_techo.valor,0))");
        }

// FROM 
        sql.append(" from cier.ind_auxiliar_indicador aux");
        sql.append(" inner join cier.ind_auxiliar_consultas n on n.id_predio = aux.id_predio and n.periodo = aux.periodo and n.id_tnt = aux.id_tnt");

        if (filtro.isAgrupamientoPredio()) {
            //condicion accesibilidad
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ACCESIBILIDAD_CONDICION_ACCESIBILIDAD, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) as tbl_accesibilidad on tbl_accesibilidad.id_dig_instrumento = aux.id_dig_instrumento and tbl_accesibilidad.id_predio = aux.id_predio");

            //condicion riesgo Antropico
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_RIESGO_ANTROPICO_CONDICION_RIESGO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) as tbl_cond_ra on tbl_cond_ra.id_dig_instrumento = aux.id_dig_instrumento and tbl_cond_ra.id_predio = aux.id_predio");

            //condicion riesgo Natural            
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_RIESGO_NATURAL_CONDICION_RIESGO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) as tbl_cond_rn on tbl_cond_rn.id_dig_instrumento = aux.id_dig_instrumento and tbl_cond_rn.id_predio = aux.id_predio");
        }

        //# de espacios según condición de piso
        sql.append(" left join");
        sql.append(" (");
        if (filtro.getCodPiso() != null) {
            String aux = this.consultarFormulaSQLIndicador(ParamIndicador.IND_ESPACIOS_NUMERO_ESPACIOS_SEGUN_CONDICION_PISO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());
            aux = aux.replace("--filtro_material", "");
            aux = aux.replace("tipo_piso", filtro.getCodPiso());
            sql.append(aux);
        } else {
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ESPACIOS_NUMERO_ESPACIOS_SEGUN_CONDICION_PISO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
        }
        sql.append(" ) espacios_piso on espacios_piso.id_dig_instrumento = aux.id_dig_instrumento and espacios_piso.id_predio = aux.id_predio");

        // Área (m2), según condición piso
        sql.append(" left join");
        sql.append(" (");
        if (filtro.getCodPiso() != null) {
            String aux = this.consultarFormulaSQLIndicador(ParamIndicador.IND_ESPACIOS_AREA_SEGUN_CONDICION_PISO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());
            aux = aux.replace("--filtro_material", "");
            aux = aux.replace("tipo_piso", filtro.getCodPiso());
            sql.append(aux);
        } else {
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ESPACIOS_AREA_SEGUN_CONDICION_PISO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
        }
        sql.append(" ) area_piso on area_piso.id_dig_instrumento = aux.id_dig_instrumento and area_piso.id_predio = aux.id_predio");

        //# de espacios según condición de muro
        sql.append(" left join");
        sql.append(" (");
        if (filtro.getCodMuro() != null) {
            String aux = this.consultarFormulaSQLIndicador(ParamIndicador.IND_ESPACIOS_NUMERO_ESPACIOS_SEGUN_CONDICION_MURO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());
            aux = aux.replace("--filtro_material", "");
            aux = aux.replace("tipo_muro", filtro.getCodMuro());
            sql.append(aux);
        } else {
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ESPACIOS_NUMERO_ESPACIOS_SEGUN_CONDICION_MURO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
        }
        sql.append(" ) espacios_muro on espacios_muro.id_dig_instrumento = aux.id_dig_instrumento and espacios_muro.id_predio = aux.id_predio");

        // Área (m2), según condición de muro
        sql.append(" left join");
        sql.append(" (");
        if (filtro.getCodMuro() != null) {
            String aux = this.consultarFormulaSQLIndicador(ParamIndicador.IND_ESPACIOS_AREA_SEGUN_CONDICION_MURO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());
            aux = aux.replace("--filtro_material", "");
            aux = aux.replace("tipo_muro", filtro.getCodMuro());
            sql.append(aux);
        } else {
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ESPACIOS_AREA_SEGUN_CONDICION_MURO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
        }
        sql.append(" ) area_muro on area_muro.id_dig_instrumento = aux.id_dig_instrumento and area_muro.id_predio = aux.id_predio");

        //# de espacios según condición de acabado muro
        sql.append(" left join");
        sql.append(" (");
        if (filtro.getCodAcaboMuro() != null) {
            String aux = this.consultarFormulaSQLIndicador(ParamIndicador.IND_ESPACIOS_NUMERO_ESPACIOS_SEGUN_CONDICION_ACABADO_MURO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());
            aux = aux.replace("--filtro_material", "");
            aux = aux.replace("tipo_acabado_muro", filtro.getCodAcaboMuro());
            sql.append(aux);
        } else {
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ESPACIOS_NUMERO_ESPACIOS_SEGUN_CONDICION_ACABADO_MURO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
        }
        sql.append(" ) espacios_acabado_muro on espacios_acabado_muro.id_dig_instrumento = aux.id_dig_instrumento and espacios_acabado_muro.id_predio = aux.id_predio");

        // Área (m2), según condición de acabado muro
        sql.append(" left join");
        sql.append(" (");
        if (filtro.getCodAcaboMuro() != null) {
            String aux = this.consultarFormulaSQLIndicador(ParamIndicador.IND_ESPACIOS_AREA_SEGUN_CONDICION_ACABADO_MURO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());
            aux = aux.replace("--filtro_material", "");
            aux = aux.replace("tipo_acabado_muro", filtro.getCodAcaboMuro());
            sql.append(aux);
        } else {
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ESPACIOS_AREA_SEGUN_CONDICION_ACABADO_MURO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
        }
        sql.append(" ) area_acabado_muro on area_acabado_muro.id_dig_instrumento = aux.id_dig_instrumento and area_acabado_muro.id_predio = aux.id_predio");

        //# de espacios según condición de ventana
        sql.append(" left join");
        sql.append(" (");
        if (filtro.getCodVentana() != null) {
            String aux = this.consultarFormulaSQLIndicador(ParamIndicador.IND_ESPACIOS_NUMERO_ESPACIOS_SEGUN_CONDICION_VENTANA, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());
            aux = aux.replace("--filtro_material", "");
            aux = aux.replace("tipo_ventana", filtro.getCodVentana());
            sql.append(aux);
        } else {
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ESPACIOS_NUMERO_ESPACIOS_SEGUN_CONDICION_VENTANA, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
        }
        sql.append(" ) espacios_ventana on espacios_ventana.id_dig_instrumento = aux.id_dig_instrumento and espacios_ventana.id_predio = aux.id_predio");

        //# de espacios según condición de puerta
        sql.append(" left join");
        sql.append(" (");
        if (filtro.getCodPuerta() != null) {
            String aux = this.consultarFormulaSQLIndicador(ParamIndicador.IND_ESPACIOS_NUMERO_ESPACIOS_SEGUN_CONDICION_PUERTA, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());
            aux = aux.replace("--filtro_material", "");
            aux = aux.replace("tipo_puerta", filtro.getCodPuerta());
            sql.append(aux);
        } else {
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ESPACIOS_NUMERO_ESPACIOS_SEGUN_CONDICION_PUERTA, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
        }
        sql.append(" ) espacios_puerta on espacios_puerta.id_dig_instrumento = aux.id_dig_instrumento and espacios_puerta.id_predio = aux.id_predio");

        //# de espacios según condición de techo
        sql.append(" left join");
        sql.append(" (");
        if (filtro.getCodTecho() != null) {
            String aux = this.consultarFormulaSQLIndicador(ParamIndicador.IND_ESPACIOS_NUMERO_ESPACIOS_SEGUN_CONDICION_TECHO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());
            aux = aux.replace("--filtro_material", "");
            aux = aux.replace("tipo_techo", filtro.getCodTecho());
            sql.append(aux);
        } else {
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ESPACIOS_NUMERO_ESPACIOS_SEGUN_CONDICION_TECHO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
        }
        sql.append(" ) espacios_techo on espacios_techo.id_dig_instrumento = aux.id_dig_instrumento and espacios_techo.id_predio = aux.id_predio");

        // Área (m2), según condición techo
        sql.append(" left join");
        sql.append(" (");
        if (filtro.getCodTecho() != null) {
            String aux = this.consultarFormulaSQLIndicador(ParamIndicador.IND_ESPACIOS_AREA_SEGUN_CONDICION_TECHO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());
            aux = aux.replace("--filtro_material", "");
            aux = aux.replace("tipo_techo", filtro.getCodTecho());
            sql.append(aux);
        } else {
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ESPACIOS_AREA_SEGUN_CONDICION_TECHO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
        }
        sql.append(" ) area_techo on area_techo.id_dig_instrumento = aux.id_dig_instrumento and area_techo.id_predio = aux.id_predio");

        //Area horizontal
        sql.append(" left join");
        sql.append(" (");
        sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ESPACIOS_AREA_TOTAL_HORIZONTAL, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
        sql.append(" ) area_horizontal on area_horizontal.id_dig_instrumento = aux.id_dig_instrumento and area_horizontal.id_predio = aux.id_predio");

        //Area total para techo (Cielo Rasos)
        sql.append(" left join");
        sql.append(" (");
        sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ESPACIOS_AREA_TOTAL_TECHO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
        sql.append(" ) area_total_techo on area_total_techo.id_dig_instrumento = aux.id_dig_instrumento and area_total_techo.id_predio = aux.id_predio");

        //Area vertical
        sql.append(" left join");
        sql.append(" (");
        sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ESPACIOS_AREA_TOTAL_VERTICAL, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
        sql.append(" ) area_vertical on area_vertical.id_dig_instrumento = aux.id_dig_instrumento and area_vertical.id_predio = aux.id_predio");

        // total espacios con puerta
        sql.append(" left join");
        sql.append(" (");
        sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ESPACIOS_TOTAL_ESPACIOS_CON_PUERTA, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
        sql.append(" ) total_espacios_con_puerta on total_espacios_con_puerta.id_dig_instrumento = aux.id_dig_instrumento and total_espacios_con_puerta.id_predio = aux.id_predio");

        // total espacios con ventana
        sql.append(" left join");
        sql.append(" (");
        sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ESPACIOS_TOTAL_ESPACIOS_CON_VENTANA, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
        sql.append(" ) total_espacios_con_ventana on total_espacios_con_ventana.id_dig_instrumento = aux.id_dig_instrumento and total_espacios_con_ventana.id_predio = aux.id_predio");

// WHERE
        sql.append(" where aux.id_tnt = ?id_tnt and aux.periodo = ?periodo");
        if (filtro.isAgrupamientoPredio()) {
            sql.append(" and n.principal_establecimiento = 1");
        }
        if (filtro.getIdNivel0() != null) {
            sql.append(" and n.id_nivel0 = ?id_nivel0");
        }
        if (filtro.getIdNivel1() != null) {
            sql.append(" and n.id_nivel1 = ?id_nivel1");
        }
        if (filtro.getIdNivel2() != null) {
            sql.append(" and n.id_nivel2 = ?id_nivel2");
        }
        if (filtro.getIdNivel3() != null) {
            sql.append(" and n.id_nivel3 = ?id_nivel3");
        }
        if (filtro.getIdNivel4() != null) {
            sql.append(" and n.id_nivel4 = ?id_nivel4");
        }
        if (filtro.getIdNivel5() != null) {
            sql.append(" and n.id_nivel5 = ?id_nivel5");
        }
        if (filtro.getIdEstablecimiento() != null) {
            sql.append(" and n.id_establecimiento = ?id_establecimiento");
        }
        if (filtro.getIdSede() != null) {
            sql.append(" and n.id_sede = ?id_sede");
        }
        if (filtro.getIdPredio() != null) {
            sql.append(" and n.id_predio = ?id_predio");
        }
        // otros filtros
        if (filtro.getCodZona() != null) {
            sql.append(" and n.codigo_zona = ?cod_zona");
        }
        if (filtro.getCodSector() != null) {
            sql.append(" and n.codigo_sector = ?cod_sector");
        }

        // GROUP BY 
        if (!filtro.isAgrupamientoPredio()) {
            sql.append(" group by ");
            sql.append(agrupamiento.toString());
        }

        String auxSql = sql.toString();
        auxSql = auxSql.replaceAll("\\?start", "");
        auxSql = auxSql.replaceAll("\\?end", "");

        if (filtro.getCondicionMaterial() != null) {
            auxSql = auxSql.replaceAll("\\?condicion_material", "'" + filtro.getCondicionMaterial().toString() + "'");
        }

        Query query = tpm.getEm().createNativeQuery(auxSql);
        query.setParameter("id_tnt", tpm.getCurrentTenant());
        query.setParameter("periodo", filtro.getPeriodo());
        query.setParameter("idioma", filtro.getIdioma());
        query.setParameter("id_nivel0", filtro.getIdNivel0());
        if (filtro.getIdNivel1() != null) {
            query.setParameter("id_nivel1", filtro.getIdNivel1());
        }
        if (filtro.getIdNivel2() != null) {
            query.setParameter("id_nivel2", filtro.getIdNivel2());
        }
        if (filtro.getIdNivel3() != null) {
            query.setParameter("id_nivel3", filtro.getIdNivel3());
        }
        if (filtro.getIdNivel4() != null) {
            query.setParameter("id_nivel4", filtro.getIdNivel4());
        }
        if (filtro.getIdNivel5() != null) {
            query.setParameter("id_nivel5", filtro.getIdNivel5());
        }
        if (filtro.getIdEstablecimiento() != null) {
            query.setParameter("id_establecimiento", filtro.getIdEstablecimiento());
        }
        if (filtro.getIdSede() != null) {
            query.setParameter("id_sede", filtro.getIdSede());
        }
        if (filtro.getIdPredio() != null) {
            query.setParameter("id_predio", filtro.getIdPredio());
        }
        // otros filtros
        if (filtro.getCodZona() != null) {
            query.setParameter("cod_zona", filtro.getCodZona());
        }
        if (filtro.getCodSector() != null) {
            query.setParameter("cod_sector", filtro.getCodSector());
        }
        return query.getResultList();
    }

    private List<Object[]> consultarEspaciosTiempoRealOracle(FiltroAmbitoEspacio filtro) {
        String codInstrumento = this.consultarCodInstrumentoPorPeriodo(filtro.getPeriodo());
        StringBuilder sql = new StringBuilder();
        StringBuilder agrupamiento = new StringBuilder();
//SELECT
        sql.append(" select ");
        if (filtro.isAgrupamientoPredio()) {
            sql.append(" distinct ");
            sql.append(" n.codigo_nivel1,n.nombre_nivel1");
            sql.append(",n.codigo_nivel2,n.nombre_nivel2");
            sql.append(",n.codigo_nivel3,n.nombre_nivel3");
            sql.append(",n.codigo_nivel4,n.nombre_nivel4");
            sql.append(",n.codigo_nivel5,n.nombre_nivel5");
            sql.append(", n.codigo_establecimiento, n.nombre_establecimiento");
            sql.append(", n.codigo_sede, n.nombre_sede");
            sql.append(", n.codigo_predio, n.nombre_predio");
            //*otros
            sql.append(" , n.direccion_predio direccion_predio, n.nombre_zona zona");
            sql.append(" , n.nombre_sector sector, n.nombre_clima clima");
            //condicion accesibilidad
            sql.append(" ,tbl_accesibilidad.accesibilidad");
            // Condicion de Riesgo Antropico
            sql.append(" ,tbl_cond_ra.condicion_riesgo");
            // Condicion de Riesgo Natural
            sql.append(" ,tbl_cond_rn.condicion_riesgo");
            // *indicadores        
            //# de espacios según condición de piso
            sql.append(" ,coalesce(espacios_piso.valor,0)");
            // Área (m2), según condición piso
            sql.append(" ,coalesce(area_piso.valor,0)");
            //Proporción área (m2) piso
            sql.append(" ,coalesce(area_piso.valor,0)/case when area_horizontal.valor = 0 then 1 else area_horizontal.valor end ");
            //# de espacios según condición de muro
            sql.append(" ,coalesce(espacios_muro.valor,0)");
            // Área (m2), según condición de muro
            sql.append(" ,coalesce(area_muro.valor,0)");
            //Proporción área (m2) muro
            sql.append(" ,coalesce(area_muro.valor,0)/case when area_vertical.valor = 0 then 1 else area_vertical.valor end ");
            //# de espacios según condición de acabado muro
            sql.append(" ,coalesce(espacios_acabado_muro.valor,0)");
            // Área (m2), según condición de acabado muro
            sql.append(" ,coalesce(area_acabado_muro.valor,0)");
            //Proporción área (m2) acabado muro
            sql.append(" ,coalesce(area_acabado_muro.valor,0)/case when area_vertical.valor = 0 then 1 else area_vertical.valor end ");
            //# de espacios según condición de ventana
            sql.append(" ,coalesce(espacios_ventana.valor,0)");
            //Proporción ventana
            sql.append(" ,coalesce(espacios_ventana.valor,0)/case when total_espacios_con_ventana.valor = 0 then 1 else total_espacios_con_ventana.valor end ");
            //# de espacios según condición de puerta
            sql.append(" ,coalesce(espacios_puerta.valor,0)");
            //Proporción puerta
            sql.append(" ,coalesce(espacios_puerta.valor,0)/case when total_espacios_con_puerta.valor = 0 then 1 else total_espacios_con_puerta.valor end ");
            //# de espacios según condición de techo
            sql.append(" ,coalesce(espacios_techo.valor,0)");
            // Área (m2), según condición techo
            sql.append(" ,coalesce(area_techo.valor,0)");
            //Proporción área (m2) techo
            sql.append(" ,coalesce(area_techo.valor,0)/case when area_total_techo.valor = 0 then 1 else area_total_techo.valor end ");
            //Área total
            sql.append(" ,coalesce(area_piso.valor,0)+coalesce(area_muro.valor,0)+coalesce(area_acabado_muro.valor,0)+coalesce(area_techo.valor,0)");

        } else {
            if (filtro.isAgrupamientoNivel0()) {
                agrupamiento.append(" n.nombre_nivel0");
            }
            if (filtro.isAgrupamientoNivel1()) {
                agrupamiento.append(" n.codigo_nivel1,n.nombre_nivel1");
            }
            if (filtro.isAgrupamientoNivel2()) {
                agrupamiento.append("n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
            }
            if (filtro.isAgrupamientoNivel3()) {
                agrupamiento.append("n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
            }
            if (filtro.isAgrupamientoNivel4()) {
                agrupamiento.append("n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
            }
            if (filtro.isAgrupamientoNivel5()) {
                agrupamiento.append("n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
                agrupamiento.append(",n.codigo_nivel5,n.nombre_nivel5");
            }
            if (filtro.isAgrupamientoEstablecimiento()) {
                agrupamiento.append(" n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
                agrupamiento.append(",n.codigo_nivel5,n.nombre_nivel5");
                agrupamiento.append(", n.codigo_establecimiento, n.nombre_establecimiento");
            }
            if (filtro.isAgrupamientoSede()) {
                agrupamiento.append(" n.codigo_nivel1,n.nombre_nivel1");
                agrupamiento.append(",n.codigo_nivel2,n.nombre_nivel2");
                agrupamiento.append(",n.codigo_nivel3,n.nombre_nivel3");
                agrupamiento.append(",n.codigo_nivel4,n.nombre_nivel4");
                agrupamiento.append(",n.codigo_nivel5,n.nombre_nivel5");
                agrupamiento.append(", n.codigo_establecimiento, n.nombre_establecimiento");
                agrupamiento.append(", n.codigo_sede, n.nombre_sede");
            }

            // select
            sql.append(agrupamiento.toString());
            // *indicadores        
            //# de espacios según condición de piso
            sql.append(" ,sum(coalesce(espacios_piso.valor,0))");
            // Área (m2), según condición piso
            sql.append(" ,sum(coalesce(area_piso.valor,0))");
            //Proporción área (m2) piso
            sql.append(" ,sum(coalesce(area_piso.valor,0))/case when sum(area_horizontal.valor) = 0 then 1 else sum(area_horizontal.valor) end ");
            //# de espacios según condición de muro
            sql.append(" ,sum(coalesce(espacios_muro.valor,0))");
            // Área (m2), según condición de muro
            sql.append(" ,sum(coalesce(area_muro.valor,0))");
            //Proporción área (m2) muro
            sql.append(" ,sum(coalesce(area_muro.valor,0))/case when sum(area_vertical.valor) = 0 then 1 else sum(area_vertical.valor) end ");
            //# de espacios según condición de acabado muro
            sql.append(" ,sum(coalesce(espacios_acabado_muro.valor,0))");
            // Área (m2), según condición de acabado muro
            sql.append(" ,sum(coalesce(area_acabado_muro.valor,0))");
            //Proporción área (m2) acabado muro
            sql.append(" ,sum(coalesce(area_acabado_muro.valor,0))/case when sum(area_vertical.valor) = 0 then 1 else sum(area_vertical.valor) end ");
            //# de espacios según condición de ventana
            sql.append(" ,sum(coalesce(espacios_ventana.valor,0))");
            //Proporción ventana
            sql.append(" ,sum(coalesce(espacios_ventana.valor,0))/case when sum(total_espacios_con_ventana.valor) = 0 then 1 else sum(total_espacios_con_ventana.valor) end ");
            //# de espacios según condición de puerta
            sql.append(" ,sum(coalesce(espacios_puerta.valor,0))");
            //Proporción puerta
            sql.append(" ,sum(coalesce(espacios_puerta.valor,0))/case when sum(total_espacios_con_puerta.valor) = 0 then 1 else sum(total_espacios_con_puerta.valor) end ");
            //# de espacios según condición de techo
            sql.append(" ,sum(coalesce(espacios_techo.valor,0))");
            // Área (m2), según condición techo
            sql.append(" ,sum(coalesce(area_techo.valor,0))");
            //Proporción área (m2) techo
            sql.append(" ,sum(coalesce(area_techo.valor,0))/case when sum(area_total_techo.valor) = 0 then 1 else sum(area_total_techo.valor) end ");
            //Área total
            sql.append(" ,sum(coalesce(area_piso.valor,0))+sum(coalesce(area_muro.valor,0))+sum(coalesce(area_acabado_muro.valor,0))+sum(coalesce(area_techo.valor,0))");
        }

// FROM 
        sql.append(" from ind_auxiliar_indicador aux");
        sql.append(" inner join ind_auxiliar_consultas n on n.id_predio = aux.id_predio and n.periodo = aux.periodo and n.id_tnt = aux.id_tnt");

        if (filtro.isAgrupamientoPredio()) {
            //condicion accesibilidad
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ACCESIBILIDAD_CONDICION_ACCESIBILIDAD, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) tbl_accesibilidad on tbl_accesibilidad.id_predio = aux.id_predio");

            //condicion riesgo Antropico
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_RIESGO_ANTROPICO_CONDICION_RIESGO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) tbl_cond_ra on tbl_cond_ra.id_predio = aux.id_predio");

            //condicion riesgo Natural            
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_RIESGO_NATURAL_CONDICION_RIESGO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) tbl_cond_rn on tbl_cond_rn.id_predio = aux.id_predio");
        }

        //# de espacios según condición de piso
        sql.append(" left join");
        sql.append(" (");
        if (filtro.getCodPiso() != null) {
            String aux = this.consultarFormulaSQLIndicador(ParamIndicador.IND_ESPACIOS_NUMERO_ESPACIOS_SEGUN_CONDICION_PISO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());
            aux = aux.replace("--filtro_material", "");
            aux = aux.replace("tipo_piso", filtro.getCodPiso());
            sql.append(aux);
        } else {
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ESPACIOS_NUMERO_ESPACIOS_SEGUN_CONDICION_PISO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
        }
        sql.append(" ) espacios_piso on espacios_piso.id_predio = aux.id_predio");

        // Área (m2), según condición piso
        sql.append(" left join");
        sql.append(" (");
        if (filtro.getCodPiso() != null) {
            String aux = this.consultarFormulaSQLIndicador(ParamIndicador.IND_ESPACIOS_AREA_SEGUN_CONDICION_PISO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());
            aux = aux.replace("--filtro_material", "");
            aux = aux.replace("tipo_piso", filtro.getCodPiso());
            sql.append(aux);
        } else {
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ESPACIOS_AREA_SEGUN_CONDICION_PISO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
        }
        sql.append(" ) area_piso on area_piso.id_predio = aux.id_predio");

        //# de espacios según condición de muro
        sql.append(" left join");
        sql.append(" (");
        if (filtro.getCodMuro() != null) {
            String aux = this.consultarFormulaSQLIndicador(ParamIndicador.IND_ESPACIOS_NUMERO_ESPACIOS_SEGUN_CONDICION_MURO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());
            aux = aux.replace("--filtro_material", "");
            aux = aux.replace("tipo_muro", filtro.getCodMuro());
            sql.append(aux);
        } else {
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ESPACIOS_NUMERO_ESPACIOS_SEGUN_CONDICION_MURO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
        }
        sql.append(" ) espacios_muro on espacios_muro.id_predio = aux.id_predio");

        // Área (m2), según condición de muro
        sql.append(" left join");
        sql.append(" (");
        if (filtro.getCodMuro() != null) {
            String aux = this.consultarFormulaSQLIndicador(ParamIndicador.IND_ESPACIOS_AREA_SEGUN_CONDICION_MURO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());
            aux = aux.replace("--filtro_material", "");
            aux = aux.replace("tipo_muro", filtro.getCodMuro());
            sql.append(aux);
        } else {
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ESPACIOS_AREA_SEGUN_CONDICION_MURO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
        }
        sql.append(" ) area_muro on area_muro.id_predio = aux.id_predio");

        //# de espacios según condición de acabado muro
        sql.append(" left join");
        sql.append(" (");
        if (filtro.getCodAcaboMuro() != null) {
            String aux = this.consultarFormulaSQLIndicador(ParamIndicador.IND_ESPACIOS_NUMERO_ESPACIOS_SEGUN_CONDICION_ACABADO_MURO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());
            aux = aux.replace("--filtro_material", "");
            aux = aux.replace("tipo_acabado_muro", filtro.getCodAcaboMuro());
            sql.append(aux);
        } else {
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ESPACIOS_NUMERO_ESPACIOS_SEGUN_CONDICION_ACABADO_MURO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
        }
        sql.append(" ) espacios_acabado_muro on espacios_acabado_muro.id_predio = aux.id_predio");

        // Área (m2), según condición de acabado muro
        sql.append(" left join");
        sql.append(" (");
        if (filtro.getCodAcaboMuro() != null) {
            String aux = this.consultarFormulaSQLIndicador(ParamIndicador.IND_ESPACIOS_AREA_SEGUN_CONDICION_ACABADO_MURO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());
            aux = aux.replace("--filtro_material", "");
            aux = aux.replace("tipo_acabado_muro", filtro.getCodAcaboMuro());
            sql.append(aux);
        } else {
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ESPACIOS_AREA_SEGUN_CONDICION_ACABADO_MURO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
        }
        sql.append(" ) area_acabado_muro on area_acabado_muro.id_predio = aux.id_predio");

        //# de espacios según condición de ventana
        sql.append(" left join");
        sql.append(" (");
        if (filtro.getCodVentana() != null) {
            String aux = this.consultarFormulaSQLIndicador(ParamIndicador.IND_ESPACIOS_NUMERO_ESPACIOS_SEGUN_CONDICION_VENTANA, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());
            aux = aux.replace("--filtro_material", "");
            aux = aux.replace("tipo_ventana", filtro.getCodVentana());
            sql.append(aux);
        } else {
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ESPACIOS_NUMERO_ESPACIOS_SEGUN_CONDICION_VENTANA, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
        }
        sql.append(" ) espacios_ventana on espacios_ventana.id_predio = aux.id_predio");

        //# de espacios según condición de puerta
        sql.append(" left join");
        sql.append(" (");
        if (filtro.getCodPuerta() != null) {
            String aux = this.consultarFormulaSQLIndicador(ParamIndicador.IND_ESPACIOS_NUMERO_ESPACIOS_SEGUN_CONDICION_PUERTA, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());
            aux = aux.replace("--filtro_material", "");
            aux = aux.replace("tipo_puerta", filtro.getCodPuerta());
            sql.append(aux);
        } else {
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ESPACIOS_NUMERO_ESPACIOS_SEGUN_CONDICION_PUERTA, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
        }
        sql.append(" ) espacios_puerta on espacios_puerta.id_predio = aux.id_predio");

        //# de espacios según condición de techo
        sql.append(" left join");
        sql.append(" (");
        if (filtro.getCodTecho() != null) {
            String aux = this.consultarFormulaSQLIndicador(ParamIndicador.IND_ESPACIOS_NUMERO_ESPACIOS_SEGUN_CONDICION_TECHO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());
            aux = aux.replace("--filtro_material", "");
            aux = aux.replace("tipo_techo", filtro.getCodTecho());
            sql.append(aux);
        } else {
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ESPACIOS_NUMERO_ESPACIOS_SEGUN_CONDICION_TECHO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
        }
        sql.append(" ) espacios_techo on espacios_techo.id_predio = aux.id_predio");

        // Área (m2), según condición techo
        sql.append(" left join");
        sql.append(" (");
        if (filtro.getCodTecho() != null) {
            String aux = this.consultarFormulaSQLIndicador(ParamIndicador.IND_ESPACIOS_AREA_SEGUN_CONDICION_TECHO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo());
            aux = aux.replace("--filtro_material", "");
            aux = aux.replace("tipo_techo", filtro.getCodTecho());
            sql.append(aux);
        } else {
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ESPACIOS_AREA_SEGUN_CONDICION_TECHO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
        }
        sql.append(" ) area_techo on area_techo.id_predio = aux.id_predio");

        //Area horizontal
        sql.append(" left join");
        sql.append(" (");
        sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ESPACIOS_AREA_TOTAL_HORIZONTAL, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
        sql.append(" ) area_horizontal on area_horizontal.id_predio = aux.id_predio");

        //Area total para techo (Cielo Rasos)
        sql.append(" left join");
        sql.append(" (");
        sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ESPACIOS_AREA_TOTAL_TECHO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
        sql.append(" ) area_total_techo on area_total_techo.id_predio = aux.id_predio");

        //Area vertical
        sql.append(" left join");
        sql.append(" (");
        sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ESPACIOS_AREA_TOTAL_VERTICAL, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
        sql.append(" ) area_vertical on area_vertical.id_predio = aux.id_predio");

        // total espacios con puerta
        sql.append(" left join");
        sql.append(" (");
        sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ESPACIOS_TOTAL_ESPACIOS_CON_PUERTA, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
        sql.append(" ) total_espacios_con_puerta on total_espacios_con_puerta.id_predio = aux.id_predio");

        // total espacios con ventana
        sql.append(" left join");
        sql.append(" (");
        sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ESPACIOS_TOTAL_ESPACIOS_CON_VENTANA, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
        sql.append(" ) total_espacios_con_ventana on total_espacios_con_ventana.id_predio = aux.id_predio");

// WHERE
        sql.append(" where aux.id_tnt = ?id_tnt and aux.periodo = ?periodo");
        if (filtro.isAgrupamientoPredio()) {
            sql.append(" and n.principal_establecimiento = 1");
        }
        if (filtro.getIdNivel0() != null) {
            sql.append(" and n.id_nivel0 = ?id_nivel0");
        }
        if (filtro.getIdNivel1() != null) {
            sql.append(" and n.id_nivel1 = ?id_nivel1");
        }
        if (filtro.getIdNivel2() != null) {
            sql.append(" and n.id_nivel2 = ?id_nivel2");
        }
        if (filtro.getIdNivel3() != null) {
            sql.append(" and n.id_nivel3 = ?id_nivel3");
        }
        if (filtro.getIdNivel4() != null) {
            sql.append(" and n.id_nivel4 = ?id_nivel4");
        }
        if (filtro.getIdNivel5() != null) {
            sql.append(" and n.id_nivel5 = ?id_nivel5");
        }
        if (filtro.getIdEstablecimiento() != null) {
            sql.append(" and n.id_establecimiento = ?id_establecimiento");
        }
        if (filtro.getIdSede() != null) {
            sql.append(" and n.id_sede = ?id_sede");
        }
        if (filtro.getIdPredio() != null) {
            sql.append(" and n.id_predio = ?id_predio");
        }
        // otros filtros
        if (filtro.getCodZona() != null) {
            sql.append(" and n.codigo_zona = ?cod_zona");
        }
        if (filtro.getCodSector() != null) {
            sql.append(" and n.codigo_sector = ?cod_sector");
        }

        // GROUP BY 
        if (!filtro.isAgrupamientoPredio()) {
            sql.append(" group by ");
            sql.append(agrupamiento.toString());
        }

        String auxSql = sql.toString();
        auxSql = auxSql.replaceAll("\\?condicion_material", filtro.getCondicionMaterial().toString());

        Query query = tpm.getEm().createNativeQuery(auxSql);
        query.setParameter("id_tnt", tpm.getCurrentTenant());
        query.setParameter("periodo", filtro.getPeriodo());
        query.setParameter("idioma", filtro.getIdioma());
        query.setParameter("id_nivel0", filtro.getIdNivel0());
        if (filtro.getIdNivel1() != null) {
            query.setParameter("id_nivel1", filtro.getIdNivel1());
        }
        if (filtro.getIdNivel2() != null) {
            query.setParameter("id_nivel2", filtro.getIdNivel2());
        }
        if (filtro.getIdNivel3() != null) {
            query.setParameter("id_nivel3", filtro.getIdNivel3());
        }
        if (filtro.getIdNivel4() != null) {
            query.setParameter("id_nivel4", filtro.getIdNivel4());
        }
        if (filtro.getIdNivel5() != null) {
            query.setParameter("id_nivel5", filtro.getIdNivel5());
        }
        if (filtro.getIdEstablecimiento() != null) {
            query.setParameter("id_establecimiento", filtro.getIdEstablecimiento());
        }
        if (filtro.getIdSede() != null) {
            query.setParameter("id_sede", filtro.getIdSede());
        }
        if (filtro.getIdPredio() != null) {
            query.setParameter("id_predio", filtro.getIdPredio());
        }
        // otros filtros
        if (filtro.getCodZona() != null) {
            query.setParameter("cod_zona", filtro.getCodZona());
        }
        if (filtro.getCodSector() != null) {
            query.setParameter("cod_sector", filtro.getCodSector());
        }

        return query.getResultList();
    }

    @Override
    public List<Object[]> consultarComplementarios(FiltroAmbitoComplementarios filtro) {
        if (ParamBaseDatos.POSTGRE.equals(UtilProperties.getDbMotor())) {
            return this.consultarComplementariosPredioPostgre(filtro);
        } else {
            return this.consultarComplementariosPredioOracle(filtro);
        }
        /*else {
         return consultarComplementariosIndicadores(filtro);
         }*/
    }

    private List<Object[]> consultarComplementariosPredioOracle(FiltroAmbitoComplementarios filtro) {
        String codInstrumento = this.consultarCodInstrumentoPorPeriodo(filtro.getPeriodo());
        StringBuilder sql = new StringBuilder();
//SELECT
        sql.append(" select distinct ");
        if (filtro.isAgrupamientoPredio()) {
            sql.append(" n.codigo_nivel1,n.nombre_nivel1");
            sql.append(",n.codigo_nivel2,n.nombre_nivel2");
            sql.append(",n.codigo_nivel3,n.nombre_nivel3");
            sql.append(",n.codigo_nivel4,n.nombre_nivel4");
            sql.append(",n.codigo_nivel5,n.nombre_nivel5");
            sql.append(" ,n.codigo_establecimiento, n.nombre_establecimiento");
            sql.append(" ,n.codigo_sede, n.nombre_sede");
            sql.append(" ,n.codigo_predio, n.nombre_predio");
            //otros
            sql.append(" ,n.direccion_predio, n.nombre_zona");
            sql.append(" ,n.nombre_sector, n.nombre_clima");
            //etnias
            sql.append(" ,etnias.etnias");


            sql.append(", (select id from INS_TIPOLOGIA_VALORES t where t.COD_TIPOLOGIA='UDEA' and t.codigo=RESP_276_01)");
            sql.append(", (select id from INS_TIPOLOGIA_VALORES t where t.COD_TIPOLOGIA='TDP' and t.codigo=RESP_278_01)");
            sql.append(", RESP_279_01");
            sql.append(", RESP_280_01");
            sql.append(", (select id from INS_TIPOLOGIA_VALORES t where t.COD_TIPOLOGIA='TL' and t.codigo=RESP_281_01)");
            sql.append(", RESP_282_01");
            sql.append(", RESP_283_01");
            sql.append(", RESP_284_01");
            sql.append(", decode(resp_285_01,'1','sql.ind.general.si','0','sql.ind.general.no',null)");
            sql.append(", (select id from INS_TIPOLOGIA_VALORES t where t.COD_TIPOLOGIA='TSC' and t.codigo=RESP_286_01)");
            sql.append(", RESP_287_01");
            sql.append(", (select id from INS_TIPOLOGIA_VALORES t where t.COD_TIPOLOGIA='CQ' and t.codigo=RESP_288_01)");
            sql.append(", RESP_289_01");
            sql.append(", RESP_290_01");
        } else {
            if (filtro.isAgrupamientoNivel0()) {
                sql.append(" n.nombre_nivel0");
            }
            if (filtro.isAgrupamientoNivel1()) {
                sql.append(" n.codigo_nivel1,n.nombre_nivel1");
            }
            if (filtro.isAgrupamientoNivel2()) {
                sql.append("n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
            }
            if (filtro.isAgrupamientoNivel3()) {
                sql.append("n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
            }
            if (filtro.isAgrupamientoNivel4()) {
                sql.append("n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
                sql.append(",n.codigo_nivel4,n.nombre_nivel4");
            }
            if (filtro.isAgrupamientoNivel5()) {
                sql.append("n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
                sql.append(",n.codigo_nivel4,n.nombre_nivel4");
                sql.append(",n.codigo_nivel5,n.nombre_nivel5");
            }
            if (filtro.isAgrupamientoEstablecimiento()) {
                sql.append(" n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
                sql.append(",n.codigo_nivel4,n.nombre_nivel4");
                sql.append(",n.codigo_nivel5,n.nombre_nivel5");
                sql.append(", n.codigo_establecimiento, n.nombre_establecimiento");
            }
            if (filtro.isAgrupamientoSede()) {
                sql.append(" n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
                sql.append(",n.codigo_nivel4,n.nombre_nivel4");
                sql.append(",n.codigo_nivel5,n.nombre_nivel5");
                sql.append(", n.codigo_establecimiento, n.nombre_establecimiento");
                sql.append(", n.codigo_sede, n.nombre_sede");
            }

            //campos
            sql.append(", total_predio.total");
            if (!UtilCadena.isNullOVacio(filtro.getCodUsoSuelo())) {
                sql.append(", DIVIDIR(UDEA.total,total_predio.total)*100");
            }
            if (!UtilCadena.isNullOVacio(filtro.getCodTipoDocPropiedad())) {
                sql.append(", DIVIDIR(TDP.total,total_predio.total)*100");
            }
            if (!UtilCadena.isNullOVacio(filtro.getCodTenenciaLote())) {
                sql.append(", DIVIDIR(TL.total,total_predio.total)*100"); // TL.valor formula null     
            }
            if (!UtilCadena.isNullOVacio(filtro.getTieneSaneamiento())) {
                sql.append(", DIVIDIR(acc_sanea.total,total_predio.total)*100");
            }
            if (!UtilCadena.isNullOVacio(filtro.getCodTipoSaneamiento())) {
                sql.append(", DIVIDIR(tipo_sanea.total,total_predio.total)*100");
            }
            sql.append(", num_tanque.total");
            sql.append(", litros_tanque.total");
        }
        sql.append(", tot_poblacion.valor");


// FROM 
        sql.append(" from ind_auxiliar_indicador aux");
        sql.append(" inner join ind_auxiliar_consultas n on n.id_predio = aux.id_predio and n.periodo = aux.periodo and n.id_tnt = aux.id_tnt");
        String strSQLNivelAgrupamiento = this.getSQLNivelAgrupamiento(filtro);

        if (filtro.isAgrupamientoPredio()) {
            //RESPUESTAS
            sql.append(" inner join ind_aux_respuesta_ins respins on respins.id_predio = aux.id_predio and respins.periodo = aux.periodo and respins.id_tnt = aux.id_tnt");

            //etnias
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ETNIAS_PREDIO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) etnias on etnias.id_predio = aux.id_predio and etnias.id_tnt = aux.id_tnt and etnias.periodo = aux.periodo");
        } else {
            //TotalPredios
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_TOTAL_PREDIOS, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
            sql.append(String.format(" ) total_predio on total_predio.%1$s = n.%1$s", strSQLNivelAgrupamiento));
            sql.append(" and total_predio.periodo = n.periodo and total_predio.id_tnt = n.id_tnt");

            //Num de predios según uso o destinación económica actual determinada en el filtro
            if (!UtilCadena.isNullOVacio(filtro.getCodUsoSuelo())) {
                String formula = this.consultarFormulaSQLIndicador(ParamIndicador.IND_COMPLEMENTARIO_NUM_PRED_USO_SUELO, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo());
                formula = formula.replaceAll("usoNormativo_", filtro.getCodUsoSuelo());
                sql.append(" left join (");
                sql.append(formula);
                sql.append(String.format(" ) UDEA on UDEA.%1$s = n.%1$s", strSQLNivelAgrupamiento));
                sql.append(" and UDEA.periodo = n.periodo and UDEA.id_tnt = n.id_tnt");
            }

            //total predios por tipo documento
            if (!UtilCadena.isNullOVacio(filtro.getCodTipoDocPropiedad())) {
                String formula = this.consultarFormulaSQLIndicador(ParamIndicador.IND_COMPLEMENTARIO_NUM_PRED_SEGUN_TIPO_DOC_PROPIEDAD, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo());
                formula = formula.replaceAll("tipoDocumento_", filtro.getCodTipoDocPropiedad());
                sql.append(" left join (");
                sql.append(formula);
                sql.append(String.format(" ) TDP on TDP.%1$s = n.%1$s", strSQLNivelAgrupamiento));
                sql.append(" and TDP.periodo = n.periodo and TDP.id_tnt = n.id_tnt");
            }

            //total predios por tenencia de lote
            if (!UtilCadena.isNullOVacio(filtro.getCodTenenciaLote())) {
                String formula = this.consultarFormulaSQLIndicador(ParamIndicador.IND_COMPLEMENTARIO_NUM_PRED_SEGUN_TENENCIA_LOTE, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo());
                formula = formula.replaceAll("tenenciaLote_", filtro.getCodTenenciaLote());
                sql.append(" left join (");
                sql.append(formula);
                sql.append(String.format(" ) TL on TL.%1$s = n.%1$s", strSQLNivelAgrupamiento));
                sql.append(" and TL.periodo = n.periodo and TL.id_tnt = n.id_tnt");
            }

            //Num de predios según Acción de Saniamiento determinanda en el filtro
            if (!UtilCadena.isNullOVacio(filtro.getTieneSaneamiento())) {
                String formula = this.consultarFormulaSQLIndicador(ParamIndicador.IND_COMPLEMENTARIO_NUM_PRED_SEGUN_ACC_SANIAMIENTO, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo());
                formula = formula.replaceAll("accionSaniamiento_", "'" + filtro.getTieneSaneamiento().getValorEntero() + "'");
                sql.append(" left join (");
                sql.append(formula);
                sql.append(String.format(" ) acc_sanea on acc_sanea.%1$s = n.%1$s", strSQLNivelAgrupamiento));
                sql.append(" and acc_sanea.periodo = n.periodo and acc_sanea.id_tnt = n.id_tnt");
            }

            //proporcion tipo saniamiento
            if (!UtilCadena.isNullOVacio(filtro.getCodTipoSaneamiento())) {
                String formula = this.consultarFormulaSQLIndicador(ParamIndicador.IND_COMPLEMENTARIO_NUM_PRED_SEGUN_TIPO_SANIAMIENTO, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo());
                formula = formula.replaceAll("tipoSaniamiento_", filtro.getCodTipoDocPropiedad());
                sql.append(" left join (");
                sql.append(formula);
                sql.append(String.format(" ) tipo_sanea on tipo_sanea.%1$s = n.%1$s", strSQLNivelAgrupamiento));
                sql.append(" and tipo_sanea.periodo = n.periodo and tipo_sanea.id_tnt = n.id_tnt");
            }

            //numeros tanques
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_COMPLEMENTARIO_NUM_TANQUE_SEGUN_NIV_CONS, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
            sql.append(String.format(" ) num_tanque on num_tanque.%1$s = n.%1$s", strSQLNivelAgrupamiento));
            sql.append(" and num_tanque.periodo = n.periodo and num_tanque.id_tnt = n.id_tnt");

            //cantidad litros
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_COMPLEMENTARIO_CANT_LITROS_TANQUES, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
            sql.append(String.format(" ) litros_tanque on litros_tanque.%1$s = n.%1$s", strSQLNivelAgrupamiento));
            sql.append(" and litros_tanque.periodo = n.periodo and litros_tanque.id_tnt = n.id_tnt");

        }

        //total poblacion
        sql.append(" left join (");
        sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_TOTAL_POBLACION, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
        sql.append(String.format(" ) tot_poblacion on tot_poblacion.%1$s = n.%1$s", strSQLNivelAgrupamiento));
        sql.append(" and tot_poblacion.periodo = n.periodo and tot_poblacion.id_tnt = n.id_tnt");


// WHERE
        sql.append(" where aux.id_tnt = ?1 and aux.periodo = ?2");
        sql.append(" and n.principal_establecimiento = 1");
        sql.append(" and n.id_nivel0 = ?3");

        if (filtro.getIdNivel1() != null) {
            sql.append(" and n.id_nivel1 = ?4");
        }
        if (filtro.getIdNivel2() != null) {
            sql.append(" and n.id_nivel2 = ?5");
        }
        if (filtro.getIdNivel3() != null) {
            sql.append(" and n.id_nivel3 = ?6");
        }
        if (filtro.getIdNivel4() != null) {
            sql.append(" and n.id_nivel4 = ?7");
        }
        if (filtro.getIdNivel5() != null) {
            sql.append(" and n.id_nivel5 = ?8");
        }
        if (filtro.getIdEstablecimiento() != null) {
            sql.append(" and n.id_establecimiento = ?9");
        }
        if (filtro.getIdSede() != null) {
            sql.append(" and n.id_sede = ?10");
        }
        if (filtro.getIdPredio() != null) {
            sql.append(" and n.id_predio = ?11");
        }
        // otros filtros
        if (filtro.getCodZona() != null) {
            sql.append(" and n.codigo_zona = ?12");
        }
        if (filtro.getCodSector() != null) {
            sql.append(" and n.codigo_sector = ?13");
        }

        if (filtro.isAgrupamientoPredio()) {
            if (filtro.getCodUsoSuelo() != null) {
                sql.append(" and RESP_276_01 = ?14");
            }
            if (filtro.getCodTenenciaLote() != null) {
                sql.append(" and RESP_281_01 = ?15");
            }
            if (filtro.getCodTipoDocPropiedad() != null) {
                sql.append(" and RESP_278_01 = ?16");
            }
            if (filtro.getCodTipoSaneamiento() != null) {
                sql.append(" and RESP_286_01 = ?17");
            }
        }

        Query query = tpm.getEm().createNativeQuery(sql.toString());
        query.setParameter(1, tpm.getCurrentTenant());
        query.setParameter(2, filtro.getPeriodo());
        query.setParameter(3, filtro.getIdNivel0());
        if (filtro.getIdNivel1() != null) {
            query.setParameter(4, filtro.getIdNivel1());
        }
        if (filtro.getIdNivel2() != null) {
            query.setParameter(5, filtro.getIdNivel2());
        }
        if (filtro.getIdNivel3() != null) {
            query.setParameter(6, filtro.getIdNivel3());
        }
        if (filtro.getIdNivel4() != null) {
            query.setParameter(7, filtro.getIdNivel4());
        }
        if (filtro.getIdNivel5() != null) {
            query.setParameter(8, filtro.getIdNivel5());
        }
        if (filtro.getIdEstablecimiento() != null) {
            query.setParameter(9, filtro.getIdEstablecimiento());
        }
        if (filtro.getIdSede() != null) {
            query.setParameter(10, filtro.getIdSede());
        }
        if (filtro.getIdPredio() != null) {
            query.setParameter(11, filtro.getIdPredio());
        }
        // otros filtros
        if (filtro.getCodZona() != null) {
            query.setParameter(12, filtro.getCodZona());
        }
        if (filtro.getCodSector() != null) {
            query.setParameter(13, filtro.getCodSector());
        }


        if (filtro.getCodUsoSuelo() != null) {
            query.setParameter(14, filtro.getCodUsoSuelo());
        }
        if (filtro.getCodTenenciaLote() != null) {
            query.setParameter(15, filtro.getCodTenenciaLote());
        }
        if (filtro.getCodTipoDocPropiedad() != null) {
            query.setParameter(16, filtro.getCodTipoDocPropiedad());
        }
        if (filtro.getCodTipoSaneamiento() != null) {
            query.setParameter(17, filtro.getCodTipoSaneamiento());
        }
        return query.getResultList();
    }

    private List<Object[]> consultarComplementariosPredioPostgre(FiltroAmbitoComplementarios filtro) {
        String codInstrumento = this.consultarCodInstrumentoPorPeriodo(filtro.getPeriodo());
        StringBuilder sql = new StringBuilder();
//SELECT
        sql.append(" select distinct ");
        if (filtro.isAgrupamientoPredio()) {
            sql.append(" n.codigo_nivel1,n.nombre_nivel1");
            sql.append(",n.codigo_nivel2,n.nombre_nivel2");
            sql.append(",n.codigo_nivel3,n.nombre_nivel3");
            sql.append(",n.codigo_nivel4,n.nombre_nivel4");
            sql.append(",n.codigo_nivel5,n.nombre_nivel5");
            sql.append(" ,n.codigo_establecimiento, n.nombre_establecimiento");
            sql.append(" ,n.codigo_sede, n.nombre_sede");
            sql.append(" ,n.codigo_predio, n.nombre_predio");
            //otros
            sql.append(" ,n.direccion_predio, n.nombre_zona");
            sql.append(" ,n.nombre_sector, n.nombre_clima");
            //etnias
            sql.append(" ,etnias.etnias");


            sql.append(", (select id from INS_TIPOLOGIA_VALORES t where t.COD_TIPOLOGIA='UDEA' and t.codigo=RESP_276_01)");
            sql.append(", (select id from INS_TIPOLOGIA_VALORES t where t.COD_TIPOLOGIA='TDP' and t.codigo=RESP_278_01)");
            sql.append(", RESP_279_01");
            sql.append(", RESP_280_01");
            sql.append(", RESP_281_01");
            sql.append(", RESP_282_01");
            sql.append(", RESP_283_01");
            sql.append(", RESP_284_01");
            sql.append(", case when resp_285_01 = '1' then 'sql.ind.general.si'");
            sql.append("  when resp_285_01 = '0' then 'sql.ind.general.no'");
            sql.append("  else null end");
            sql.append(", (select id from INS_TIPOLOGIA_VALORES t where t.COD_TIPOLOGIA='TSC' and t.codigo=RESP_286_01)");
            sql.append(", RESP_287_01");
            sql.append(", (select id from INS_TIPOLOGIA_VALORES t where t.COD_TIPOLOGIA='CQ' and t.codigo=RESP_288_01)");
            sql.append(", RESP_289_01");
            sql.append(", RESP_290_01");
        } else {
            if (filtro.isAgrupamientoNivel0()) {
                sql.append(" n.nombre_nivel0");
            }
            if (filtro.isAgrupamientoNivel1()) {
                sql.append(" n.codigo_nivel1,n.nombre_nivel1");
            }
            if (filtro.isAgrupamientoNivel2()) {
                sql.append("n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
            }
            if (filtro.isAgrupamientoNivel3()) {
                sql.append("n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
            }
            if (filtro.isAgrupamientoNivel4()) {
                sql.append("n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
                sql.append(",n.codigo_nivel4,n.nombre_nivel4");
            }
            if (filtro.isAgrupamientoNivel5()) {
                sql.append("n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
                sql.append(",n.codigo_nivel4,n.nombre_nivel4");
                sql.append(",n.codigo_nivel5,n.nombre_nivel5");
            }
            if (filtro.isAgrupamientoEstablecimiento()) {
                sql.append(" n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
                sql.append(",n.codigo_nivel4,n.nombre_nivel4");
                sql.append(",n.codigo_nivel5,n.nombre_nivel5");
                sql.append(", n.codigo_establecimiento, n.nombre_establecimiento");
            }
            if (filtro.isAgrupamientoSede()) {
                sql.append(" n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
                sql.append(",n.codigo_nivel4,n.nombre_nivel4");
                sql.append(",n.codigo_nivel5,n.nombre_nivel5");
                sql.append(", n.codigo_establecimiento, n.nombre_establecimiento");
                sql.append(", n.codigo_sede, n.nombre_sede");
            }

            //campos
            sql.append(", total_predio.total");
            if (!UtilCadena.isNullOVacio(filtro.getCodUsoSuelo())) {
                sql.append(", DIVIDIR(UDEA.total,total_predio.total)*100");
            }
            if (!UtilCadena.isNullOVacio(filtro.getCodTipoDocPropiedad())) {
                sql.append(", DIVIDIR(TDP.total,total_predio.total)*100");
            }
            if (!UtilCadena.isNullOVacio(filtro.getCodTenenciaLote())) {
                sql.append(", DIVIDIR(TL.total,total_predio.total)*100"); // TL.valor formula null     
            }
            if (!UtilCadena.isNullOVacio(filtro.getTieneSaneamiento())) {
                sql.append(", DIVIDIR(acc_sanea.total,total_predio.total)*100");
            }
            if (!UtilCadena.isNullOVacio(filtro.getCodTipoSaneamiento())) {
                sql.append(", DIVIDIR(tipo_sanea.total,total_predio.total)*100");
            }
            sql.append(", num_tanque.total");
            sql.append(", litros_tanque.total");
        }
        sql.append(", tot_poblacion.valor");


// FROM 
        sql.append(" from ind_auxiliar_respuesta aux");
        sql.append(" inner join ind_auxiliar_consultas n on n.id_predio = aux.id_predio and n.periodo = aux.periodo and n.id_tnt = aux.id_tnt");
        String strSQLNivelAgrupamiento = this.getSQLNivelAgrupamiento(filtro);

        if (filtro.isAgrupamientoPredio()) {
            //REspuestas adicionales
            sql.append(" left join (select id_tnt,periodo,id_predio,VALOR RESP_276_01");
            sql.append(" from cier.ind_auxiliar_respuesta where cod_respuesta = 'RESP_276_01'");
            sql.append(" ) t1 ON t1.id_tnt = n.id_tnt AND t1.periodo = n.periodo AND t1.ID_PREDIO = n.ID_PREDIO");

            sql.append(" left join (select id_tnt,periodo,id_predio,VALOR RESP_278_01");
            sql.append(" from cier.ind_auxiliar_respuesta where cod_respuesta = 'RESP_278_01'");
            sql.append(" ) t2 ON t2.id_tnt = n.id_tnt AND t2.periodo = n.periodo AND t2.ID_PREDIO = n.ID_PREDIO");

            sql.append(" left join (select id_tnt,periodo,id_predio,VALOR RESP_279_01");
            sql.append(" from cier.ind_auxiliar_respuesta where cod_respuesta = 'RESP_279_01'");
            sql.append(" ) t3 ON t3.id_tnt = n.id_tnt AND t3.periodo = n.periodo AND t3.ID_PREDIO = n.ID_PREDIO");

            sql.append(" left join (select id_tnt,periodo,id_predio,VALOR RESP_280_01");
            sql.append(" from cier.ind_auxiliar_respuesta where cod_respuesta = 'RESP_280_01'");
            sql.append(" ) t4 ON t4.id_tnt = n.id_tnt AND t4.periodo = n.periodo AND t4.ID_PREDIO = n.ID_PREDIO");

            sql.append(" left join (select id_tnt,periodo,id_predio,VALOR RESP_281_01");
            sql.append(" from cier.ind_auxiliar_respuesta where cod_respuesta = 'RESP_281_01'");
            sql.append(" ) t5 ON t5.id_tnt = n.id_tnt AND t5.periodo = n.periodo AND t5.ID_PREDIO = n.ID_PREDIO");

            sql.append(" left join (select id_tnt,periodo,id_predio,VALOR RESP_282_01");
            sql.append(" from cier.ind_auxiliar_respuesta where cod_respuesta = 'RESP_282_01'");
            sql.append(" ) t6 ON t6.id_tnt = n.id_tnt AND t6.periodo = n.periodo AND t6.ID_PREDIO = n.ID_PREDIO");

            sql.append(" left join (select id_tnt,periodo,id_predio,VALOR RESP_283_01");
            sql.append(" from cier.ind_auxiliar_respuesta where cod_respuesta = 'RESP_283_01'");
            sql.append(" ) t7 ON t7.id_tnt = n.id_tnt AND t7.periodo = n.periodo AND t7.ID_PREDIO = n.ID_PREDIO");

            sql.append(" left join (select id_tnt,periodo,id_predio,VALOR RESP_284_01");
            sql.append(" from cier.ind_auxiliar_respuesta where cod_respuesta = 'RESP_284_01'");
            sql.append(" ) t8 ON t8.id_tnt = n.id_tnt AND t8.periodo = n.periodo AND t8.ID_PREDIO = n.ID_PREDIO");

            sql.append(" left join (select id_tnt,periodo,id_predio,VALOR RESP_285_01");
            sql.append(" from cier.ind_auxiliar_respuesta where cod_respuesta = 'RESP_285_01'");
            sql.append(" ) t9 ON t9.id_tnt = n.id_tnt AND t9.periodo = n.periodo AND t9.ID_PREDIO = n.ID_PREDIO");

            sql.append(" left join (select id_tnt,periodo,id_predio,VALOR RESP_286_01");
            sql.append(" from cier.ind_auxiliar_respuesta where cod_respuesta = 'RESP_286_01'");
            sql.append(" ) t10 ON t10.id_tnt = n.id_tnt AND t10.periodo = n.periodo AND t10.ID_PREDIO = n.ID_PREDIO");

            sql.append(" left join (select id_tnt,periodo,id_predio,VALOR RESP_287_01");
            sql.append(" from cier.ind_auxiliar_respuesta where cod_respuesta = 'RESP_287_01'");
            sql.append(" ) t11 ON t11.id_tnt = n.id_tnt AND t11.periodo = n.periodo AND t11.ID_PREDIO = n.ID_PREDIO");

            sql.append(" left join (select id_tnt,periodo,id_predio,VALOR RESP_288_01");
            sql.append(" from cier.ind_auxiliar_respuesta where cod_respuesta = 'RESP_288_01'");
            sql.append(" ) t12 ON t12.id_tnt = n.id_tnt AND t12.periodo = n.periodo AND t12.ID_PREDIO = n.ID_PREDIO");

            sql.append(" left join (select id_tnt,periodo,id_predio,VALOR RESP_289_01");
            sql.append(" from cier.ind_auxiliar_respuesta where cod_respuesta = 'RESP_289_01'");
            sql.append(" ) t13 ON t13.id_tnt = n.id_tnt AND t13.periodo = n.periodo AND t13.ID_PREDIO = n.ID_PREDIO");

            sql.append(" left join (select id_tnt,periodo,id_predio,VALOR RESP_290_01");
            sql.append(" from cier.ind_auxiliar_respuesta where cod_respuesta = 'RESP_290_01'");
            sql.append(" ) t14 ON t14.id_tnt = n.id_tnt AND t14.periodo = n.periodo AND t14.ID_PREDIO = n.ID_PREDIO");

            //etnias
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_ETNIAS_PREDIO, ParamNivelConsul.PREDIO, codInstrumento, filtro.getPeriodo()));
            sql.append(" ) etnias on etnias.id_predio = aux.id_predio and etnias.id_tnt = aux.id_tnt and etnias.periodo = aux.periodo");
        } else {
            //TotalPredios
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_TOTAL_PREDIOS, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
            sql.append(String.format(" ) total_predio on total_predio.%1$s = n.%1$s", strSQLNivelAgrupamiento));
            sql.append(" and total_predio.periodo = n.periodo and total_predio.id_tnt = n.id_tnt");

            //Num de predios según uso o destinación económica actual determinada en el filtro
            if (!UtilCadena.isNullOVacio(filtro.getCodUsoSuelo())) {
                String formula = this.consultarFormulaSQLIndicador(ParamIndicador.IND_COMPLEMENTARIO_NUM_PRED_USO_SUELO, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo());
                formula = formula.replaceAll("usoNormativo_", filtro.getCodUsoSuelo());
                sql.append(" left join (");
                sql.append(formula);
                sql.append(String.format(" ) UDEA on UDEA.%1$s = n.%1$s", strSQLNivelAgrupamiento));
                sql.append(" and UDEA.periodo = n.periodo and UDEA.id_tnt = n.id_tnt");
            }

            //total predios por tipo documento
            if (!UtilCadena.isNullOVacio(filtro.getCodTipoDocPropiedad())) {
                String formula = this.consultarFormulaSQLIndicador(ParamIndicador.IND_COMPLEMENTARIO_NUM_PRED_SEGUN_TIPO_DOC_PROPIEDAD, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo());
                formula = formula.replaceAll("tipoDocumento_", filtro.getCodTipoDocPropiedad());
                sql.append(" left join (");
                sql.append(formula);
                sql.append(String.format(" ) TDP on TDP.%1$s = n.%1$s", strSQLNivelAgrupamiento));
                sql.append(" and TDP.periodo = n.periodo and TDP.id_tnt = n.id_tnt");
            }

            //total predios por tenencia de lote
            if (!UtilCadena.isNullOVacio(filtro.getCodTenenciaLote())) {
                String formula = this.consultarFormulaSQLIndicador(ParamIndicador.IND_COMPLEMENTARIO_NUM_PRED_SEGUN_TENENCIA_LOTE, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo());
                formula = formula.replaceAll("tenenciaLote_", filtro.getCodTenenciaLote());
                sql.append(" left join (");
                sql.append(formula);
                sql.append(String.format(" ) TL on TL.%1$s = n.%1$s", strSQLNivelAgrupamiento));
                sql.append(" and TL.periodo = n.periodo and TL.id_tnt = n.id_tnt");
            }

            //Num de predios según Acción de Saniamiento determinanda en el filtro
            if (!UtilCadena.isNullOVacio(filtro.getTieneSaneamiento())) {
                String formula = this.consultarFormulaSQLIndicador(ParamIndicador.IND_COMPLEMENTARIO_NUM_PRED_SEGUN_ACC_SANIAMIENTO, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo());
                formula = formula.replaceAll("accionSaniamiento_", "'" + filtro.getTieneSaneamiento().getValorEntero() + "'");
                sql.append(" left join (");
                sql.append(formula);
                sql.append(String.format(" ) acc_sanea on acc_sanea.%1$s = n.%1$s", strSQLNivelAgrupamiento));
                sql.append(" and acc_sanea.periodo = n.periodo and acc_sanea.id_tnt = n.id_tnt");
            }

            //proporcion tipo saniamiento
            if (!UtilCadena.isNullOVacio(filtro.getCodTipoSaneamiento())) {
                String formula = this.consultarFormulaSQLIndicador(ParamIndicador.IND_COMPLEMENTARIO_NUM_PRED_SEGUN_TIPO_SANIAMIENTO, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo());
                formula = formula.replaceAll("tipoSaniamiento_", filtro.getCodTipoDocPropiedad());
                sql.append(" left join (");
                sql.append(formula);
                sql.append(String.format(" ) tipo_sanea on tipo_sanea.%1$s = n.%1$s", strSQLNivelAgrupamiento));
                sql.append(" and tipo_sanea.periodo = n.periodo and tipo_sanea.id_tnt = n.id_tnt");
            }

            //numeros tanques
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_COMPLEMENTARIO_NUM_TANQUE_SEGUN_NIV_CONS, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
            sql.append(String.format(" ) num_tanque on num_tanque.%1$s = n.%1$s", strSQLNivelAgrupamiento));
            sql.append(" and num_tanque.periodo = n.periodo and num_tanque.id_tnt = n.id_tnt");

            //cantidad litros
            sql.append(" left join (");
            sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_COMPLEMENTARIO_CANT_LITROS_TANQUES, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
            sql.append(String.format(" ) litros_tanque on litros_tanque.%1$s = n.%1$s", strSQLNivelAgrupamiento));
            sql.append(" and litros_tanque.periodo = n.periodo and litros_tanque.id_tnt = n.id_tnt");

        }

        //total poblacion
        sql.append(" left join (");
        sql.append(this.consultarFormulaSQLIndicador(ParamIndicador.IND_TOTAL_POBLACION, filtro.getAgrupamiento(), codInstrumento, filtro.getPeriodo()));
        sql.append(String.format(" ) tot_poblacion on tot_poblacion.%1$s = n.%1$s", strSQLNivelAgrupamiento));
        sql.append(" and tot_poblacion.periodo = n.periodo and tot_poblacion.id_tnt = n.id_tnt");


// WHERE
        sql.append(" where aux.id_tnt = ?1 and aux.periodo = ?2");
        sql.append(" and n.principal_establecimiento = 1");
        sql.append(" and n.id_nivel0 = ?3");

        if (filtro.getIdNivel1() != null) {
            sql.append(" and n.id_nivel1 = ?4");
        }
        if (filtro.getIdNivel2() != null) {
            sql.append(" and n.id_nivel2 = ?5");
        }
        if (filtro.getIdNivel3() != null) {
            sql.append(" and n.id_nivel3 = ?6");
        }
        if (filtro.getIdNivel4() != null) {
            sql.append(" and n.id_nivel4 = ?7");
        }
        if (filtro.getIdNivel5() != null) {
            sql.append(" and n.id_nivel5 = ?8");
        }
        if (filtro.getIdEstablecimiento() != null) {
            sql.append(" and n.id_establecimiento = ?9");
        }
        if (filtro.getIdSede() != null) {
            sql.append(" and n.id_sede = ?10");
        }
        if (filtro.getIdPredio() != null) {
            sql.append(" and n.id_predio = ?11");
        }
        // otros filtros
        if (filtro.getCodZona() != null) {
            sql.append(" and n.codigo_zona = ?12");
        }
        if (filtro.getCodSector() != null) {
            sql.append(" and n.codigo_sector = ?13");
        }

        if (filtro.isAgrupamientoPredio()) {
            if (filtro.getCodUsoSuelo() != null) {
                sql.append(" and RESP_276_01 = ?14");
            }
            if (filtro.getCodTenenciaLote() != null) {
                sql.append(" and RESP_281_01 = ?15");
            }
            if (filtro.getCodTipoDocPropiedad() != null) {
                sql.append(" and RESP_278_01 = ?16");
            }
            if (filtro.getCodTipoSaneamiento() != null) {
                sql.append(" and RESP_286_01 = ?17");
            }
        }

        String auxSql = sql.toString();
        auxSql = auxSql.replaceAll("\\?start", "");
        auxSql = auxSql.replaceAll("\\?end", "");

        Query query = tpm.getEm().createNativeQuery(auxSql);
        query.setParameter(1, tpm.getCurrentTenant());
        query.setParameter(2, filtro.getPeriodo());
        query.setParameter(3, filtro.getIdNivel0());
        if (filtro.getIdNivel1() != null) {
            query.setParameter(4, filtro.getIdNivel1());
        }
        if (filtro.getIdNivel2() != null) {
            query.setParameter(5, filtro.getIdNivel2());
        }
        if (filtro.getIdNivel3() != null) {
            query.setParameter(6, filtro.getIdNivel3());
        }
        if (filtro.getIdNivel4() != null) {
            query.setParameter(7, filtro.getIdNivel4());
        }
        if (filtro.getIdNivel5() != null) {
            query.setParameter(8, filtro.getIdNivel5());
        }
        if (filtro.getIdEstablecimiento() != null) {
            query.setParameter(9, filtro.getIdEstablecimiento());
        }
        if (filtro.getIdSede() != null) {
            query.setParameter(10, filtro.getIdSede());
        }
        if (filtro.getIdPredio() != null) {
            query.setParameter(11, filtro.getIdPredio());
        }
        // otros filtros
        if (filtro.getCodZona() != null) {
            query.setParameter(12, filtro.getCodZona());
        }
        if (filtro.getCodSector() != null) {
            query.setParameter(13, filtro.getCodSector());
        }


        if (filtro.getCodUsoSuelo() != null) {
            query.setParameter(14, filtro.getCodUsoSuelo());
        }
        if (filtro.getCodTenenciaLote() != null) {
            query.setParameter(15, filtro.getCodTenenciaLote());
        }
        if (filtro.getCodTipoDocPropiedad() != null) {
            query.setParameter(16, filtro.getCodTipoDocPropiedad());
        }
        if (filtro.getCodTipoSaneamiento() != null) {
            query.setParameter(17, filtro.getCodTipoSaneamiento());
        }
        return query.getResultList();
    }

    private List<Object[]> consultarComplementariosIndicadores(FiltroAmbitoComplementarios filtro) {
        StringBuilder sql = new StringBuilder();
// consulta por nivel de agrupamiento superior a predio
// SELECT
        sql.append(" select distinct");

        if (filtro.isAgrupamientoNivel0()) {
            sql.append(" n.nombre_nivel0");
        }
        if (filtro.isAgrupamientoNivel1()) {
            sql.append(" n.nombre_nivel1");
        }
        if (filtro.isAgrupamientoNivel2()) {
            sql.append(" n.nombre_nivel1, n.nombre_nivel2");
        }
        if (filtro.isAgrupamientoNivel3()) {
            sql.append(" n.nombre_nivel1, n.nombre_nivel2, n.nombre_nivel3");
        }
        if (filtro.isAgrupamientoNivel4()) {
            sql.append(" n.nombre_nivel1, n.nombre_nivel2, n.nombre_nivel3, n.nombre_nivel4");
        }
        if (filtro.isAgrupamientoNivel5()) {
            sql.append(" n.nombre_nivel1, n.nombre_nivel2, n.nombre_nivel3, n.nombre_nivel4, n.nombre_nivel5");
        }
        if (filtro.isAgrupamientoEstablecimiento()) {
            sql.append(" n.nombre_nivel1, n.nombre_nivel2, n.nombre_nivel3, n.nombre_nivel4, n.nombre_nivel5");
            sql.append(", n.codigo_establecimiento, n.nombre_establecimiento");
        }
        if (filtro.isAgrupamientoSede()) {
            sql.append(" n.nombre_nivel1, n.nombre_nivel2, n.nombre_nivel3, n.nombre_nivel4, n.nombre_nivel5");
            sql.append(", n.codigo_establecimiento, n.nombre_establecimiento");
            sql.append(", n.codigo_sede, n.nombre_sede");
        }
        //Total Predios
        sql.append(", total_predio.valor");
        sql.append(", UDEA.valor");
        sql.append(", TDP.valor");
        sql.append(", TL.valor");
        sql.append(", acc_sanea.valor");
        sql.append(", tipo_sanea.valor");
        sql.append(", num_tanque.valor");
        sql.append(", litros_tanque.valor");
        sql.append(", tot_poblacion.valor");



// FROM 
        sql.append(" from ind_auxiliar_indicador aux");
        sql.append(" inner join ind_auxiliar_consultas n on n.id_predio = aux.id_predio and n.periodo = aux.periodo and n.id_tnt = aux.id_tnt");

        String strSQLNivelAgrupamiento = this.getSQLNivelAgrupamiento(filtro);
        String strSQLConsultarIndicador = this.getSQLConsultarIndicadorAlmacenado();

        //Total Predios 
        sql.append(" left join (");
        sql.append(strSQLConsultarIndicador);
        sql.append(" ) total_predio on total_predio.id_tnt = aux.id_tnt and total_predio.periodo = aux.periodo");
        sql.append(String.format(" and total_predio.cod_indicador = '%s'", ParamIndicador.IND_TOTAL_PREDIOS));
        sql.append(" and total_predio.nivel_agrupamiento = ?nivel_agrupamiento");
        sql.append(" and total_predio.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

        //Proporción de predios según uso o destinación económica actual determinada en el filtro
        sql.append(" left join (");
        sql.append(strSQLConsultarIndicador);
        sql.append(" ) UDEA on UDEA.id_tnt = aux.id_tnt and UDEA.periodo = aux.periodo");
        sql.append(String.format(" and UDEA.cod_indicador = '%s'", ParamIndicador.IND_COMPLEMENTARIO_NUM_PRED_USO_SUELO));
        sql.append(" and UDEA.nivel_agrupamiento = ?nivel_agrupamiento");
        sql.append(" and UDEA.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

        //proporción de predios según Tipo de Documento de Propiedad determinada en el filtro
        sql.append(" left join (");
        sql.append(strSQLConsultarIndicador);
        sql.append(" ) TDP on TDP.id_tnt = aux.id_tnt and TDP.periodo = aux.periodo");
        sql.append(String.format(" and TDP.cod_indicador = '%s'", ParamIndicador.IND_COMPLEMENTARIO_NUM_PRED_SEGUN_TIPO_DOC_PROPIEDAD));
        sql.append(" and TDP.nivel_agrupamiento = ?nivel_agrupamiento");
        sql.append(" and TDP.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

        //proporción de predios según Tenencia del Lote determinada en el filtro
        sql.append(" left join (");
        sql.append(strSQLConsultarIndicador);
        sql.append(" ) TL on TL.id_tnt = aux.id_tnt and TL.periodo = aux.periodo");
        sql.append(String.format(" and TL.cod_indicador = '%s'", ParamIndicador.IND_COMPLEMENTARIO_NUM_PRED_SEGUN_TENENCIA_LOTE));
        sql.append(" and TL.nivel_agrupamiento = ?nivel_agrupamiento");
        sql.append(" and TL.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

        //proporción de predios según Acción de Saniamiento determinanda en el filtro
        sql.append(" left join (");
        sql.append(strSQLConsultarIndicador);
        sql.append(" ) acc_sanea on acc_sanea.id_tnt = aux.id_tnt and acc_sanea.periodo = aux.periodo");
        sql.append(String.format(" and acc_sanea.cod_indicador = '%s'", ParamIndicador.IND_COMPLEMENTARIO_NUM_PRED_SEGUN_ACC_SANIAMIENTO));
        sql.append(" and acc_sanea.nivel_agrupamiento = ?nivel_agrupamiento");
        sql.append(" and acc_sanea.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

        //proporción de predios según Tipo de Saniamiento en Curso determinanda en el filtro
        sql.append(" left join (");
        sql.append(strSQLConsultarIndicador);
        sql.append(" ) tipo_sanea on tipo_sanea.id_tnt = aux.id_tnt and tipo_sanea.periodo = aux.periodo");
        sql.append(String.format(" and tipo_sanea.cod_indicador = '%s'", ParamIndicador.IND_COMPLEMENTARIO_NUM_PRED_SEGUN_TIPO_SANIAMIENTO));
        sql.append(" and tipo_sanea.nivel_agrupamiento = ?nivel_agrupamiento");
        sql.append(" and tipo_sanea.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

        //El número de tanques existentes según el nivel de consulta
        sql.append(" left join (");
        sql.append(strSQLConsultarIndicador);
        sql.append(" ) num_tanque on num_tanque.id_tnt = aux.id_tnt and num_tanque.periodo = aux.periodo");
        sql.append(String.format(" and num_tanque.cod_indicador = '%s'", ParamIndicador.IND_COMPLEMENTARIO_NUM_TANQUE_SEGUN_NIV_CONS));
        sql.append(" and num_tanque.nivel_agrupamiento = ?nivel_agrupamiento");
        sql.append(" and num_tanque.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

        //Cantidad de litros de los tanques existentes según el nivel de consulta
        sql.append(" left join (");
        sql.append(strSQLConsultarIndicador);
        sql.append(" ) litros_tanque on litros_tanque.id_tnt = aux.id_tnt and litros_tanque.periodo = aux.periodo");
        sql.append(String.format(" and litros_tanque.cod_indicador = '%s'", ParamIndicador.IND_COMPLEMENTARIO_CANT_LITROS_TANQUES));
        sql.append(" and litros_tanque.nivel_agrupamiento = ?nivel_agrupamiento");
        sql.append(" and litros_tanque.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

        //IND_TOTAL_POBLACION
        sql.append(" left join (");
        sql.append(strSQLConsultarIndicador);
        sql.append(" ) tot_poblacion on tot_poblacion.id_tnt = aux.id_tnt and tot_poblacion.periodo = aux.periodo");
        sql.append(String.format(" and tot_poblacion.cod_indicador = '%s'", ParamIndicador.IND_TOTAL_POBLACION));
        sql.append(" and tot_poblacion.nivel_agrupamiento = ?nivel_agrupamiento");
        sql.append(" and tot_poblacion.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);





// WHERE
        sql.append(" where aux.id_tnt = ?id_tnt and aux.periodo = ?periodo");

        if (filtro.getIdNivel0() != null) {
            sql.append(" and n.id_nivel0 = ?id_nivel0");
        }
        if (filtro.getIdNivel1() != null) {
            sql.append(" and n.id_nivel1 = ?id_nivel1");
        }
        if (filtro.getIdNivel2() != null) {
            sql.append(" and n.id_nivel2 = ?id_nivel2");
        }
        if (filtro.getIdNivel3() != null) {
            sql.append(" and n.id_nivel3 = ?id_nivel3");
        }
        if (filtro.getIdNivel4() != null) {
            sql.append(" and n.id_nivel4 = ?id_nivel4");
        }
        if (filtro.getIdNivel5() != null) {
            sql.append(" and n.id_nivel5 = ?id_nivel5");
        }
        if (filtro.getIdEstablecimiento() != null) {
            sql.append(" and n.id_establecimiento = ?id_establecimiento");
        }
        if (filtro.getIdSede() != null) {
            sql.append(" and n.id_sede = ?id_sede");
        }
        if (filtro.getIdPredio() != null) {
            sql.append(" and n.id_predio = ?id_predio");
        }


        Query query = tpm.getEm().createNativeQuery(sql.toString());
        query.setParameter("id_tnt", tpm.getCurrentTenant());
        query.setParameter("periodo", filtro.getPeriodo());
        query.setParameter("idioma", filtro.getIdioma());
        query.setParameter("id_nivel0", filtro.getIdNivel0());
        query.setParameter("nivel_agrupamiento", filtro.getAgrupamiento());
        if (filtro.getIdNivel1() != null) {
            query.setParameter("id_nivel1", filtro.getIdNivel1());
        }
        if (filtro.getIdNivel2() != null) {
            query.setParameter("id_nivel2", filtro.getIdNivel2());
        }
        if (filtro.getIdNivel3() != null) {
            query.setParameter("id_nivel3", filtro.getIdNivel3());
        }
        if (filtro.getIdNivel4() != null) {
            query.setParameter("id_nivel4", filtro.getIdNivel4());
        }
        if (filtro.getIdNivel5() != null) {
            query.setParameter("id_nivel5", filtro.getIdNivel5());
        }
        if (filtro.getIdEstablecimiento() != null) {
            query.setParameter("id_establecimiento", filtro.getIdEstablecimiento());
        }
        if (filtro.getIdSede() != null) {
            query.setParameter("id_sede", filtro.getIdSede());
        }
        if (filtro.getIdPredio() != null) {
            query.setParameter("id_predio", filtro.getIdPredio());
        }
        return query.getResultList();
    }

    @Override
    public List<Object[]> consultarMigracion(FiltroAmbitoMigracion filtro) {

        StringBuilder sql = new StringBuilder();
        sql.append(" select distinct");
        sql.append(" n.nombre_nivel1, n.nombre_nivel2, n.nombre_nivel3, n.nombre_nivel4, n.nombre_nivel5");
        sql.append(" ,n.codigo_establecimiento, n.nombre_establecimiento");
        sql.append(" ,n.codigo_sede, n.nombre_sede");
        sql.append(" ,n.codigo_predio, n.nombre_predio");
        //otros
        sql.append(" ,n.direccion_predio, n.nombre_zona");
        sql.append(" ,n.nombre_sector, n.nombre_clima");
        //etnias
        sql.append(" ,etnias.valor etnias");

        if (filtro.isGeneralidades()) {
            // numero de jornadas educativas por predio
            sql.append(" ,num_jor.valor");
            //total de estudiantes por predio  
            sql.append(" ,tot_estud.valor");
            //total area construccion por predio
            sql.append(" ,tot_area.valor");
            //area real del predio
            sql.append(" ,area_predio.valor");
        }
        if (filtro.isPropiedad()) {
            //propiedad_predio
            sql.append(" ,propiedad_predio.valor propiedad_predio");
            //tipo_propietario_predio
            sql.append(" ,coalesce(tipo_propietario.valor,'sql.ind.general.noAplica') tipo_propietario_predio");
            //propiedad_verificable_predio
            sql.append(" ,verf_propiedad.valor propiedad_verificable_predio");
        }
        if (filtro.isRiesgos()) {
            // Tipo de Riesgo Natural 1
            sql.append(" ,tbl_tipo1_rn.valor");
            // Condicion del Riesgo Natural 1
            sql.append(" ,tbl_cond1_rn.valor");
            // Tipo de Riesgo Natural 2
            sql.append(" ,tbl_tipo2_rn.valor");
            // Condicion del Riesgo Natural 2
            sql.append(" ,tbl_cond2_rn.valor");
            // Tipo de Riesgo Natural 3
            sql.append(" ,tbl_tipo3_rn.valor");
            // Condicion del Riesgo Natural 3
            sql.append(" ,tbl_cond3_rn.valor");
            //Poblacion Afectada
            sql.append(" ,coalesce(poblacion_afectada_rn.valor,'0')");

            // Tipo de Riesgo Antropico 1
            sql.append(" ,tbl_tipo1_ra.valor");
            // Condicion del Riesgo Antropico 1
            sql.append(" ,tbl_cond1_ra.valor");
            // Tipo de Riesgo Antropico 2
            sql.append(" ,tbl_tipo2_ra.valor");
            // Condicion del Riesgo Antropico 2
            sql.append(" ,tbl_cond2_ra.valor");
            // Tipo de Riesgo Antropico 3
            sql.append(" ,tbl_tipo3_ra.valor");
            // Condicion del Riesgo Antropico 3
            sql.append(" ,tbl_cond3_ra.valor");
            //Poblacion Afectada
            sql.append(" ,coalesce(poblacion_afectada_ra.valor,'0')");
        }
        if (filtro.isOferta()) {
            //posibilidad_construccion_primer_piso
            sql.append(" ,inf_constr2.valor");
            //posibilidad_construccion_altura
            sql.append(" ,inf_constr3.valor");
            //posibilidad_construccion_total
            sql.append(" ,inf_constr4.valor");
        }
        if (filtro.isCtrlVigilancia()) {
            //tipo cerramiento
            sql.append(", tbl_cerramiento.valor");
            //condicion cerramiento
            sql.append(", tbl_cond_cerramiento.valor");
            //condicion orden publico
            sql.append(", coalesce(tbl_cond_orden_publico.valor,'sql.ind.general.noTiene')");
            //vulnerabilidad
            sql.append(", tbl_vulnerabilidad.valor");
            //total Edificios
            sql.append(", tbl_edificios.valor");
        }
        if (filtro.isSeguridad()) {
            sql.append(" , tb_estado_estructura.valor");
            //AnalisisRutaEvacuacion
            sql.append(" , tb_ruta_evacuacion.valor");
            //ReactivoIncendios
            sql.append(" , tb_reactivo_incendio.valor");
            //SenalizacionEvacuacion
            sql.append(" , tb_senalizacion_evacuacion.valor");
        }
        if (filtro.isAccesibilidad()) {
            // Tipo de Acceso 1
            sql.append(" ,tbl_tipo1.valor");
            // Condicion de Acceso 1
            sql.append(" ,tbl_cond1.valor");
            // Tipo de Acceso 2
            sql.append(" ,tbl_tipo2.valor");
            // Condicion de Acceso 2
            sql.append(" ,tbl_cond2.valor");
            // Tipo de Acceso 3
            sql.append(" ,tbl_tipo3.valor");
            // Condicion de Acceso 3
            sql.append(" ,tbl_cond3.valor");
        }
        if (filtro.isConfort()) {
            // # espacios con aislamiento termico en piso
            sql.append(" ,coalesce(tb_espacios_aisterm_piso.valor,'0')");
            // # espacios con aislamiento termico en techo
            sql.append(" ,coalesce(tb_espacios_aisterm_techo.valor,'0')");
            // # espacios con aislamiento termico en pared
            sql.append(" ,coalesce(tb_espacios_aisterm_pared.valor,'0')");
            // # espacios con aislamiento termico en ventana
            sql.append(" ,coalesce(tb_espacios_aisterm_ventana.valor,'0')");
            // Total Inodoro 
            sql.append(" ,coalesce(tb_total_inodoros.valor,'0')");
            // Total Ducha 
            sql.append(" ,coalesce(tb_total_duchas.valor,'0')");
            // Total lavamano 
            sql.append(" ,coalesce(tb_total_lavamanos.valor,'0')");
            // Total orinales 
            sql.append(" ,coalesce(tb_total_orinales.valor,'0')");
        }

// FROM 
        sql.append(" from ind_auxiliar_indicador aux");
        sql.append(" inner join ind_auxiliar_consultas n on n.id_predio = aux.id_predio and n.periodo = aux.periodo and n.id_tnt = aux.id_tnt");

        String strSQLNivelAgrupamiento = "id_predio";
        String strSQLConsultarIndicador = this.getSQLConsultarIndicadorAlmacenado();

        sql.append(" left join (");
        sql.append(strSQLConsultarIndicador);
        sql.append(" ) etnias on etnias.id_tnt = aux.id_tnt and etnias.periodo = aux.periodo");
        sql.append(String.format(" and etnias.cod_indicador = '%s'", ParamIndicador.IND_ETNIAS_PREDIO));
        sql.append(" and etnias.nivel_agrupamiento = ?nivel_agrupamiento");
        sql.append(" and etnias.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

        if (filtro.isGeneralidades()) {
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) num_jor on num_jor.id_tnt = aux.id_tnt and num_jor.periodo = aux.periodo");
            sql.append(String.format(" and num_jor.cod_indicador = '%s'", ParamIndicador.IND_NUMERO_JORNADAS_PREDIO));
            sql.append(" and num_jor.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and num_jor.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            //total de estudiantes por predio  
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tot_estud on tot_estud.id_tnt = aux.id_tnt and tot_estud.periodo = aux.periodo");
            sql.append(String.format(" and tot_estud.cod_indicador = '%s'", ParamIndicador.IND_TOTAL_ESTUDIANTES));
            sql.append(" and tot_estud.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tot_estud.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            sql.append(" left join (");
            //total area construccion
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tot_area on tot_area.id_tnt = aux.id_tnt and tot_area.periodo = aux.periodo");
            sql.append(String.format(" and tot_area.cod_indicador = '%s'", ParamIndicador.IND_TOTAL_AREA_CONSTRUCCION_PREDIO));
            sql.append(" and tot_area.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tot_area.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            //area real del predio          
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) area_predio on area_predio.id_tnt = aux.id_tnt and area_predio.periodo = aux.periodo");
            sql.append(String.format(" and area_predio.cod_indicador = '%s'", ParamIndicador.IND_AREA_REAL_PREDIO));
            sql.append(" and area_predio.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and area_predio.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
        }

        if (filtro.isPropiedad()) {
            //propiedad_predio
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) propiedad_predio on propiedad_predio.id_tnt = aux.id_tnt and propiedad_predio.periodo = aux.periodo");
            sql.append(String.format(" and propiedad_predio.cod_indicador = '%s'", ParamIndicador.IND_PROPIEDAD_PREDIO));
            sql.append(" and propiedad_predio.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and propiedad_predio.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            //tipo_propietario_predio
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tipo_propietario on tipo_propietario.id_tnt = aux.id_tnt and tipo_propietario.periodo = aux.periodo");
            sql.append(String.format(" and tipo_propietario.cod_indicador = '%s'", ParamIndicador.IND_TIPO_PROPIETARIO_PREDIO));
            sql.append(" and tipo_propietario.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tipo_propietario.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            //propiedad_verificable_predio
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) verf_propiedad on verf_propiedad.id_tnt = aux.id_tnt and verf_propiedad.periodo = aux.periodo");
            sql.append(String.format(" and verf_propiedad.cod_indicador = '%s'", ParamIndicador.IND_PROPIEDAD_VERIFICABLE_PREDIO));
            sql.append(" and verf_propiedad.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and verf_propiedad.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
        }

        if (filtro.isRiesgos()) {
            // tipo de riesgo natural 1
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_tipo1_rn on tbl_tipo1_rn.id_tnt = aux.id_tnt and tbl_tipo1_rn.periodo = aux.periodo");
            sql.append(String.format(" and tbl_tipo1_rn.cod_indicador = '%s'", ParamIndicador.IND_RIESGO_NATURAL_TIPO_RIESGO_1));
            sql.append(" and tbl_tipo1_rn.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_tipo1_rn.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            // condicion del riesgo natural 1
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_cond1_rn on tbl_cond1_rn.id_tnt = aux.id_tnt and tbl_cond1_rn.periodo = aux.periodo");
            sql.append(String.format(" and tbl_cond1_rn.cod_indicador = '%s'", ParamIndicador.IND_RIESGO_NATURAL_CONDICION_RIESGO_1));
            sql.append(" and tbl_cond1_rn.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_cond1_rn.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            // tipo de riesgo natural 2
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_tipo2_rn on tbl_tipo2_rn.id_tnt = aux.id_tnt and tbl_tipo2_rn.periodo = aux.periodo");
            sql.append(String.format(" and tbl_tipo2_rn.cod_indicador = '%s'", ParamIndicador.IND_RIESGO_NATURAL_TIPO_RIESGO_2));
            sql.append(" and tbl_tipo2_rn.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_tipo2_rn.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            // condicion del riesgo natural 2
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_cond2_rn on tbl_cond2_rn.id_tnt = aux.id_tnt and tbl_cond2_rn.periodo = aux.periodo");
            sql.append(String.format(" and tbl_cond2_rn.cod_indicador = '%s'", ParamIndicador.IND_RIESGO_NATURAL_CONDICION_RIESGO_2));
            sql.append(" and tbl_cond2_rn.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_cond2_rn.id_entidad_nivel =  n.").append(strSQLNivelAgrupamiento);
            // tipo de riesgo natural 3
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_tipo3_rn on tbl_tipo3_rn.id_tnt = aux.id_tnt and tbl_tipo3_rn.periodo = aux.periodo");
            sql.append(String.format(" and tbl_tipo3_rn.cod_indicador = '%s'", ParamIndicador.IND_RIESGO_NATURAL_TIPO_RIESGO_3));
            sql.append(" and tbl_tipo3_rn.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_tipo3_rn.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            // condicion del riesgo natural 3
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_cond3_rn on tbl_cond3_rn.id_tnt = aux.id_tnt and tbl_cond3_rn.periodo = aux.periodo");
            sql.append(String.format(" and tbl_cond3_rn.cod_indicador = '%s'", ParamIndicador.IND_RIESGO_NATURAL_CONDICION_RIESGO_3));
            sql.append(" and tbl_cond3_rn.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_cond3_rn.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            //Poblacion Afectada
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) poblacion_afectada_rn on poblacion_afectada_rn.id_tnt = aux.id_tnt and poblacion_afectada_rn.periodo = aux.periodo");
            sql.append(String.format(" and poblacion_afectada_rn.cod_indicador = '%s'", ParamIndicador.IND_RIESGO_NATURAL_POBLACION_AFECTADA));
            sql.append(" and poblacion_afectada_rn.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and poblacion_afectada_rn.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            // tipo de riesgo antropico 1
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_tipo1_ra on tbl_tipo1_ra.id_tnt = aux.id_tnt and tbl_tipo1_ra.periodo = aux.periodo");
            sql.append(String.format(" and tbl_tipo1_ra.cod_indicador = '%s'", ParamIndicador.IND_RIESGO_ANTROPICO_TIPO_RIESGO_1));
            sql.append(" and tbl_tipo1_ra.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_tipo1_ra.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            // condicion del riesgo antropico 1
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_cond1_ra on tbl_cond1_ra.id_tnt = aux.id_tnt and tbl_cond1_ra.periodo = aux.periodo");
            sql.append(String.format(" and tbl_cond1_ra.cod_indicador = '%s'", ParamIndicador.IND_RIESGO_ANTROPICO_CONDICION_RIESGO_1));
            sql.append(" and tbl_cond1_ra.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_cond1_ra.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            // tipo de riesgo antropico 2
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_tipo2_ra on tbl_tipo2_ra.id_tnt = aux.id_tnt and tbl_tipo2_ra.periodo = aux.periodo");
            sql.append(String.format(" and tbl_tipo2_ra.cod_indicador = '%s'", ParamIndicador.IND_RIESGO_ANTROPICO_TIPO_RIESGO_2));
            sql.append(" and tbl_tipo2_ra.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_tipo2_ra.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            // condicion del riesgo antropico 2
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_cond2_ra on tbl_cond2_ra.id_tnt = aux.id_tnt and tbl_cond2_ra.periodo = aux.periodo");
            sql.append(String.format(" and tbl_cond2_ra.cod_indicador = '%s'", ParamIndicador.IND_RIESGO_ANTROPICO_CONDICION_RIESGO_2));
            sql.append(" and tbl_cond2_ra.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_cond2_ra.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            // tipo de riesgo antropico 3
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_tipo3_ra on tbl_tipo3_ra.id_tnt = aux.id_tnt and tbl_tipo3_ra.periodo = aux.periodo");
            sql.append(String.format(" and tbl_tipo3_ra.cod_indicador = '%s'", ParamIndicador.IND_RIESGO_ANTROPICO_TIPO_RIESGO_3));
            sql.append(" and tbl_tipo3_ra.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_tipo3_ra.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            // condicion del riesgo antropico 3
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_cond3_ra on tbl_cond3_ra.id_tnt = aux.id_tnt and tbl_cond3_ra.periodo = aux.periodo");
            sql.append(String.format(" and tbl_cond3_ra.cod_indicador = '%s'", ParamIndicador.IND_RIESGO_ANTROPICO_CONDICION_RIESGO_3));
            sql.append(" and tbl_cond3_ra.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_cond3_ra.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            //Poblacion Afectada
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) poblacion_afectada_ra on poblacion_afectada_ra.id_tnt = aux.id_tnt and poblacion_afectada_ra.periodo = aux.periodo");
            sql.append(String.format(" and poblacion_afectada_ra.cod_indicador = '%s'", ParamIndicador.IND_RIESGO_ANTROPICO_POBLACION_AFECTADA));
            sql.append(" and poblacion_afectada_ra.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and poblacion_afectada_ra.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
        }
        if (filtro.isOferta()) {
            //posibilidad_construccion_primer_piso
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) inf_constr2 on inf_constr2.id_tnt = aux.id_tnt and inf_constr2.periodo = aux.periodo");
            sql.append(String.format(" and inf_constr2.cod_indicador = '%s'", ParamIndicador.IND_AMPLIACION_POSIBILIDAD_CONSTRUCCION_PRIMER_PISO));
            sql.append(" and inf_constr2.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and inf_constr2.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            //posibilidad_construccion_altura
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) inf_constr3 on inf_constr3.id_tnt = aux.id_tnt and inf_constr3.periodo = aux.periodo");
            sql.append(String.format(" and inf_constr3.cod_indicador = '%s'", ParamIndicador.IND_AMPLIACION_POSIBILIDAD_CONSTRUCCION_ALTURA));
            sql.append(" and inf_constr3.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and inf_constr3.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            //posibilidad_construccion_total
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) inf_constr4 on inf_constr4.id_tnt = aux.id_tnt and inf_constr4.periodo = aux.periodo");
            sql.append(String.format(" and inf_constr4.cod_indicador = '%s'", ParamIndicador.IND_AMPLIACION_POSIBILIDAD_CONSTRUCCION_TOTAL));
            sql.append(" and inf_constr4.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and inf_constr4.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
        }
        if (filtro.isCtrlVigilancia()) {
            //tipo cerramiento
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_cerramiento on tbl_cerramiento.id_tnt = aux.id_tnt and tbl_cerramiento.periodo = aux.periodo");
            sql.append(String.format(" and tbl_cerramiento.cod_indicador = '%s'", ParamIndicador.IND_CONTROL_VIGILANCIA_TIPO_CERRAMIENTO));
            sql.append(" and tbl_cerramiento.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_cerramiento.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            //condicion cerramiento
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_cond_cerramiento on tbl_cond_cerramiento.id_tnt = aux.id_tnt and tbl_cond_cerramiento.periodo = aux.periodo");
            sql.append(String.format(" and tbl_cond_cerramiento.cod_indicador = '%s'", ParamIndicador.IND_CONTROL_VIGILANCIA_CONDICION_CERRAMIENTO));
            sql.append(" and tbl_cond_cerramiento.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_cond_cerramiento.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            //condicion orden publico
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_cond_orden_publico on tbl_cond_orden_publico.id_tnt = aux.id_tnt and tbl_cond_orden_publico.periodo = aux.periodo");
            sql.append(String.format(" and tbl_cond_orden_publico.cod_indicador = '%s'", ParamIndicador.IND_CONTROL_VIGILANCIA_CONDICION_ORDEN_PUBLICO));
            sql.append(" and tbl_cond_orden_publico.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_cond_orden_publico.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            //vulnerabilidad
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_vulnerabilidad on tbl_vulnerabilidad.id_tnt = aux.id_tnt and tbl_vulnerabilidad.periodo = aux.periodo");
            sql.append(String.format(" and tbl_vulnerabilidad.cod_indicador = '%s'", ParamIndicador.IND_CONTROL_VIGILANCIA_VULNERABILIDAD));
            sql.append(" and tbl_vulnerabilidad.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_vulnerabilidad.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            //total Edificios
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_edificios on tbl_edificios.id_tnt = aux.id_tnt and tbl_edificios.periodo = aux.periodo");
            sql.append(String.format(" and tbl_edificios.cod_indicador = '%s'", ParamIndicador.IND_TOTAL_EDIFICIOS));
            sql.append(" and tbl_edificios.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_edificios.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
        }
        if (filtro.isSeguridad()) {
            //EstadoEstructura
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tb_estado_estructura on tb_estado_estructura.id_tnt = aux.id_tnt and tb_estado_estructura.periodo = aux.periodo");
            sql.append(String.format(" and tb_estado_estructura.cod_indicador = '%s'", ParamIndicador.IND_SEGURIDAD_ESTADO_ESTRUCTURA));
            sql.append(" and tb_estado_estructura.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tb_estado_estructura.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            //AnalisisRutaEvacuacion
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tb_ruta_evacuacion on tb_ruta_evacuacion.id_tnt = aux.id_tnt and tb_ruta_evacuacion.periodo = aux.periodo");
            sql.append(String.format(" and tb_ruta_evacuacion.cod_indicador = '%s'", ParamIndicador.IND_SEGURIDAD_ANALISIS_RUTA_EVACUACION));
            sql.append(" and tb_ruta_evacuacion.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tb_ruta_evacuacion.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            //ReactivoIncendios
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tb_reactivo_incendio on tb_reactivo_incendio.id_tnt = aux.id_tnt and tb_reactivo_incendio.periodo = aux.periodo");
            sql.append(String.format(" and tb_reactivo_incendio.cod_indicador = '%s'", ParamIndicador.IND_SEGURIDAD_REACTIVO_CONTRA_INCENDIO));
            sql.append(" and tb_reactivo_incendio.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tb_reactivo_incendio.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            //SenalizacionEvacuacion
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tb_senalizacion_evacuacion on tb_senalizacion_evacuacion.id_tnt = aux.id_tnt and tb_senalizacion_evacuacion.periodo = aux.periodo");
            sql.append(String.format(" and tb_senalizacion_evacuacion.cod_indicador = '%s'", ParamIndicador.IND_SEGURIDAD_SENALIZACION_EVACUACION));
            sql.append(" and tb_senalizacion_evacuacion.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tb_senalizacion_evacuacion.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
        }
        if (filtro.isAccesibilidad()) {
            // tipo de Acceso 1
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_tipo1 on tbl_tipo1.id_tnt = aux.id_tnt and tbl_tipo1.periodo = aux.periodo");
            sql.append(String.format(" and tbl_tipo1.cod_indicador = '%s'", ParamIndicador.IND_ACCESIBILIDAD_TIPO_ACCESO_1));
            sql.append(" and tbl_tipo1.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_tipo1.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            // condicion de Acceso 1
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_cond1 on tbl_cond1.id_tnt = aux.id_tnt and tbl_cond1.periodo = aux.periodo");
            sql.append(String.format(" and tbl_cond1.cod_indicador = '%s'", ParamIndicador.IND_ACCESIBILIDAD_CONDICION_ACCESO_1));
            sql.append(" and tbl_cond1.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_cond1.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            // tipo de Acceso 2
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_tipo2 on tbl_tipo2.id_tnt = aux.id_tnt and tbl_tipo2.periodo = aux.periodo");
            sql.append(String.format(" and tbl_tipo2.cod_indicador = '%s'", ParamIndicador.IND_ACCESIBILIDAD_TIPO_ACCESO_2));
            sql.append(" and tbl_tipo2.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_tipo2.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            // condicion de Acceso 2
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_cond2 on tbl_cond2.id_tnt = aux.id_tnt and tbl_cond2.periodo = aux.periodo");
            sql.append(String.format(" and tbl_cond2.cod_indicador = '%s'", ParamIndicador.IND_ACCESIBILIDAD_CONDICION_ACCESO_2));
            sql.append(" and tbl_cond2.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_cond2.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            // tipo de Acceso 3
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_tipo3 on tbl_tipo3.id_tnt = aux.id_tnt and tbl_tipo3.periodo = aux.periodo");
            sql.append(String.format(" and tbl_tipo3.cod_indicador = '%s'", ParamIndicador.IND_ACCESIBILIDAD_TIPO_ACCESO_3));
            sql.append(" and tbl_tipo3.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_tipo3.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            // condicion de Acceso 3
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tbl_cond3 on tbl_cond3.id_tnt = aux.id_tnt and tbl_cond3.periodo = aux.periodo");
            sql.append(String.format(" and tbl_cond3.cod_indicador = '%s'", ParamIndicador.IND_ACCESIBILIDAD_CONDICION_ACCESO_3));
            sql.append(" and tbl_cond3.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tbl_cond3.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
        }
        if (filtro.isConfort()) {
            // # espacios con aislamiento termico en piso
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tb_espacios_aisterm_piso on tb_espacios_aisterm_piso.id_tnt = aux.id_tnt and tb_espacios_aisterm_piso.periodo = aux.periodo");
            sql.append(String.format(" and tb_espacios_aisterm_piso.cod_indicador = '%s'", ParamIndicador.IND_CONFORT_NUMERO_ESPACIOS_AISLAMIENTO_TERMICO_PISO));
            sql.append(" and tb_espacios_aisterm_piso.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tb_espacios_aisterm_piso.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            // # espacios con aislamiento termico en techo
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tb_espacios_aisterm_techo on tb_espacios_aisterm_techo.id_tnt = aux.id_tnt and tb_espacios_aisterm_techo.periodo = aux.periodo");
            sql.append(String.format(" and tb_espacios_aisterm_techo.cod_indicador = '%s'", ParamIndicador.IND_CONFORT_NUMERO_ESPACIOS_AISLAMIENTO_TERMICO_TECHO));
            sql.append(" and tb_espacios_aisterm_techo.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tb_espacios_aisterm_techo.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            // # espacios con aislamiento termico en pared
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tb_espacios_aisterm_pared on tb_espacios_aisterm_pared.id_tnt = aux.id_tnt and tb_espacios_aisterm_pared.periodo = aux.periodo");
            sql.append(String.format(" and tb_espacios_aisterm_pared.cod_indicador = '%s'", ParamIndicador.IND_CONFORT_NUMERO_ESPACIOS_AISLAMIENTO_TERMICO_PARED));
            sql.append(" and tb_espacios_aisterm_pared.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tb_espacios_aisterm_pared.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            // # espacios con aislamiento termico en ventana
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tb_espacios_aisterm_ventana on tb_espacios_aisterm_ventana.id_tnt = aux.id_tnt and tb_espacios_aisterm_ventana.periodo = aux.periodo");
            sql.append(String.format(" and tb_espacios_aisterm_ventana.cod_indicador = '%s'", ParamIndicador.IND_CONFORT_NUMERO_ESPACIOS_AISLAMIENTO_TERMICO_VENTANA));
            sql.append(" and tb_espacios_aisterm_ventana.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tb_espacios_aisterm_ventana.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            // Total Inodoro 
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tb_total_inodoros on tb_total_inodoros.id_tnt = aux.id_tnt and tb_total_inodoros.periodo = aux.periodo");
            sql.append(String.format(" and tb_total_inodoros.cod_indicador = '%s'", ParamIndicador.IND_CONFORT_NUMERO_INODOROS));
            sql.append(" and tb_total_inodoros.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tb_total_inodoros.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            // Total Ducha 
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tb_total_duchas on tb_total_duchas.id_tnt = aux.id_tnt and tb_total_duchas.periodo = aux.periodo");
            sql.append(String.format(" and tb_total_duchas.cod_indicador = '%s'", ParamIndicador.IND_CONFORT_NUMERO_DUCHAS));
            sql.append(" and tb_total_duchas.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tb_total_duchas.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            // Total lavamano 
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tb_total_lavamanos on tb_total_lavamanos.id_tnt = aux.id_tnt and tb_total_lavamanos.periodo = aux.periodo");
            sql.append(String.format(" and tb_total_lavamanos.cod_indicador = '%s'", ParamIndicador.IND_CONFORT_NUMERO_LAVAMANOS));
            sql.append(" and tb_total_lavamanos.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tb_total_lavamanos.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
            // Total orinales 
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tb_total_orinales on tb_total_orinales.id_tnt = aux.id_tnt and tb_total_orinales.periodo = aux.periodo");
            sql.append(String.format(" and tb_total_orinales.cod_indicador = '%s'", ParamIndicador.IND_CONFORT_NUMERO_ORINALES));
            sql.append(" and tb_total_orinales.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tb_total_orinales.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
        }

// WHERE
        sql.append(" where aux.id_tnt = ?id_tnt and aux.periodo = ?periodo");
        if (filtro.isAgrupamientoPredio()) {
            sql.append(" and n.principal_establecimiento = 1");
        }
        if (filtro.getIdNivel0() != null) {
            sql.append(" and n.id_nivel0 = ?id_nivel0");
        }
        if (filtro.getIdNivel1() != null) {
            sql.append(" and n.id_nivel1 = ?id_nivel1");
        }
        if (filtro.getIdNivel2() != null) {
            sql.append(" and n.id_nivel2 = ?id_nivel2");
        }
        if (filtro.getIdNivel3() != null) {
            sql.append(" and n.id_nivel3 = ?id_nivel3");
        }
        if (filtro.getIdNivel4() != null) {
            sql.append(" and n.id_nivel4 = ?id_nivel4");
        }
        if (filtro.getIdNivel5() != null) {
            sql.append(" and n.id_nivel5 = ?id_nivel5");
        }
        if (filtro.getIdEstablecimiento() != null) {
            sql.append(" and n.id_establecimiento = ?id_establecimiento");
        }
        if (filtro.getIdSede() != null) {
            sql.append(" and n.id_sede = ?id_sede");
        }
        if (filtro.getIdPredio() != null) {
            sql.append(" and n.id_predio = ?id_predio");
        }
        if (filtro.getCodZona() != null) {
            sql.append(" and n.codigo_zona = ?cod_zona");
        }
        if (filtro.getCodSector() != null) {
            sql.append(" and n.codigo_sector = ?cod_sector");
        }

        Query query = tpm.getEm().createNativeQuery(sql.toString());
        query.setParameter("id_tnt", tpm.getCurrentTenant());
        query.setParameter("periodo", filtro.getPeriodo());
        query.setParameter("idioma", filtro.getIdioma());
        query.setParameter("id_nivel0", filtro.getIdNivel0());
        query.setParameter("nivel_agrupamiento", filtro.getAgrupamiento());
        if (filtro.getIdNivel1() != null) {
            query.setParameter("id_nivel1", filtro.getIdNivel1());
        }
        if (filtro.getIdNivel2() != null) {
            query.setParameter("id_nivel2", filtro.getIdNivel2());
        }
        if (filtro.getIdNivel3() != null) {
            query.setParameter("id_nivel3", filtro.getIdNivel3());
        }
        if (filtro.getIdNivel4() != null) {
            query.setParameter("id_nivel4", filtro.getIdNivel4());
        }
        if (filtro.getIdNivel5() != null) {
            query.setParameter("id_nivel5", filtro.getIdNivel5());
        }
        if (filtro.getIdEstablecimiento() != null) {
            query.setParameter("id_establecimiento", filtro.getIdEstablecimiento());
        }
        if (filtro.getIdSede() != null) {
            query.setParameter("id_sede", filtro.getIdSede());
        }
        if (filtro.getIdPredio() != null) {
            query.setParameter("id_predio", filtro.getIdPredio());
        }
        if (filtro.getCodZona() != null) {
            query.setParameter("cod_zona", filtro.getCodZona());
        }
        if (filtro.getCodSector() != null) {
            query.setParameter("cod_sector", filtro.getCodSector());
        }
        return query.getResultList();
    }

    @Override
    public List<Object[]> consultarCocina(FiltroAmbitoAmbiente filtro) {
        return consultarCocinaIndicadores(filtro);
    }

    private List<Object[]> consultarCocinaIndicadores(FiltroAmbitoAmbiente filtro) {
        StringBuilder sql = new StringBuilder();
        sql.append(" select distinct ");
        if (filtro.isAgrupamientoSede()) {
            sql.append(" n.codigo_nivel1,n.nombre_nivel1");
            sql.append(",n.codigo_nivel2,n.nombre_nivel2");
            sql.append(",n.codigo_nivel3,n.nombre_nivel3");
            sql.append(",n.codigo_nivel4,n.nombre_nivel4");
            sql.append(",n.codigo_nivel5,n.nombre_nivel5");
            sql.append(", n.codigo_establecimiento, n.nombre_establecimiento");
            sql.append(", n.codigo_sede, n.nombre_sede");
            // Número de poblacion atendida
            sql.append(" ,poblacion_atendida.valor");
            // area idonea
            sql.append(" ,area_idonea.valor");
            // deficit_estandar
            sql.append(" ,deficit_estandar.valor");
            // cumplimiento_norma
            sql.append(" ,cumplimiento_norma.valor");
        } else {
            if (filtro.isAgrupamientoEstablecimiento()) {
                sql.append(" n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
                sql.append(",n.codigo_nivel4,n.nombre_nivel4");
                sql.append(",n.codigo_nivel5,n.nombre_nivel5");
                sql.append(", n.codigo_establecimiento, n.nombre_establecimiento");
            }
            if (filtro.isAgrupamientoNivel0()) {
                sql.append(" n.nombre_nivel0");
            }
            if (filtro.isAgrupamientoNivel1()) {
                sql.append(" n.codigo_nivel1,n.nombre_nivel1");
            }
            if (filtro.isAgrupamientoNivel2()) {
                sql.append("n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
            }
            if (filtro.isAgrupamientoNivel3()) {
                sql.append("n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
            }
            if (filtro.isAgrupamientoNivel4()) {
                sql.append("n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
                sql.append(",n.codigo_nivel4,n.nombre_nivel4");
            }
            if (filtro.isAgrupamientoNivel5()) {
                sql.append("n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
                sql.append(",n.codigo_nivel4,n.nombre_nivel4");
                sql.append(",n.codigo_nivel5,n.nombre_nivel5");
            }
            //Sedes que incumplen                
            sql.append(" ,coalesce(sedes_incumplen.valor,'0')");
            // proporcion sedes
            sql.append(" ,to_number(coalesce(sedes_incumplen.valor,'0'),'9999999')/to_number(case when tot_sede.valor = '0' then '1' else tot_sede.valor end ,'9999999') proporcion_sedes");
        }
        // #  espacios por tipo
        sql.append(" ,coalesce(tbl_tipo_espacio.valor,'0')");
        // Proporción espacios
        sql.append(" ,to_number(coalesce(tbl_tipo_espacio.valor,'0'),'9999999')/to_number(case when tb_total_espacios.valor = '0' then '1' else tb_total_espacios.valor end ,'9999999') proporcion_espacios");
        // Area tipo espacio  (m2)
        sql.append(" ,coalesce(area_tipo_espacio.valor,'0')");

        // FROM 
        sql.append(" from ind_auxiliar_indicador aux");
        sql.append(" inner join ind_auxiliar_consultas n on n.id_predio = aux.id_predio and n.periodo = aux.periodo and n.id_tnt = aux.id_tnt");

        String strSQLNivelAgrupamiento = this.getSQLNivelAgrupamiento(filtro);
        String strSQLConsultarIndicador = this.getSQLConsultarIndicadorAlmacenado();

        // #  espacios por tipo
        sql.append(" left join (");
        sql.append(strSQLConsultarIndicador);
        sql.append(" ) tbl_tipo_espacio on tbl_tipo_espacio.id_tnt = aux.id_tnt and tbl_tipo_espacio.periodo = aux.periodo");
        sql.append(String.format(" and tbl_tipo_espacio.cod_indicador = '%s'", ParamIndicador.IND_AMBIENTE_ESPACIOS_TIPO));
        sql.append(" and tbl_tipo_espacio.nivel_agrupamiento = ?nivel_agrupamiento");
        sql.append(" and tbl_tipo_espacio.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
        sql.append(" and tbl_tipo_espacio.cod_valor = ?unidad_funcional");

        //total espacios
        sql.append(" left join (");
        sql.append(strSQLConsultarIndicador);
        sql.append(" ) tb_total_espacios on tb_total_espacios.id_tnt = aux.id_tnt and tb_total_espacios.periodo = aux.periodo");
        sql.append(String.format(" and tb_total_espacios.cod_indicador = '%s'", ParamIndicador.IND_TOTAL_ESPACIOS));
        sql.append(" and tb_total_espacios.nivel_agrupamiento = ?nivel_agrupamiento");
        sql.append(" and tb_total_espacios.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

        //area tipo de espacio
        sql.append(" left join (");
        sql.append(strSQLConsultarIndicador);
        sql.append(" ) area_tipo_espacio on area_tipo_espacio.id_tnt = aux.id_tnt and area_tipo_espacio.periodo = aux.periodo");
        sql.append(String.format(" and area_tipo_espacio.cod_indicador = '%s'", ParamIndicador.IND_AMBIENTE_AREA_TIPO_ESPACIO));
        sql.append(" and area_tipo_espacio.nivel_agrupamiento = ?nivel_agrupamiento");
        sql.append(" and area_tipo_espacio.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
        sql.append(" and area_tipo_espacio.cod_valor = ?unidad_funcional");

        if (filtro.isAgrupamientoSede()) {
            //poblacion atendida
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) poblacion_atendida on poblacion_atendida.id_tnt = aux.id_tnt and poblacion_atendida.periodo = aux.periodo");
            sql.append(String.format(" and poblacion_atendida.cod_indicador = '%s'", ParamIndicador.IND_AMBIENTE_COCINA_TAM_POB_ATENDIDA));
            sql.append(" and poblacion_atendida.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and poblacion_atendida.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            //area idonea
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) area_idonea on area_idonea.id_tnt = aux.id_tnt and area_idonea.periodo = aux.periodo");
            sql.append(String.format(" and area_idonea.cod_indicador = '%s'", ParamIndicador.IND_AMBIENTE_COCINA_AREA_IDONEA));
            sql.append(" and area_idonea.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and area_idonea.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            //total de espacios
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) deficit_estandar on deficit_estandar.id_tnt = aux.id_tnt and deficit_estandar.periodo = aux.periodo");
            sql.append(String.format(" and deficit_estandar.cod_indicador = '%s'", ParamIndicador.IND_AMBIENTE_COCINA_DEFICIT_ESTANDAR));
            sql.append(" and deficit_estandar.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and deficit_estandar.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            //area tipo de espacio
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) cumplimiento_norma on cumplimiento_norma.id_tnt = aux.id_tnt and cumplimiento_norma.periodo = aux.periodo");
            sql.append(String.format(" and cumplimiento_norma.cod_indicador = '%s'", ParamIndicador.IND_AMBIENTE_COCINA_CUMPLIMIENTO_NORMA));
            sql.append(" and cumplimiento_norma.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and cumplimiento_norma.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

        } else {
            //Sedes que incumplen   
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) sedes_incumplen on sedes_incumplen.id_tnt = aux.id_tnt and sedes_incumplen.periodo = aux.periodo");
            sql.append(String.format(" and sedes_incumplen.cod_indicador = '%s'", ParamIndicador.IND_AMBIENTE_COCINA_NUM_SED_INCUMPLEN_NORMA));
            sql.append(" and sedes_incumplen.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and sedes_incumplen.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            // total de sedes
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tot_sede on tot_sede.id_tnt = aux.id_tnt and tot_sede.periodo = aux.periodo");
            sql.append(String.format(" and tot_sede.cod_indicador = '%s'", ParamIndicador.IND_TOTAL_SEDES));
            sql.append(" and tot_sede.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tot_sede.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
        }

        // WHERE
        sql.append(" where aux.id_tnt = ?id_tnt and aux.periodo = ?periodo");
        if (filtro.isAgrupamientoPredio()) {
            sql.append(" and n.principal_establecimiento = 1");
        }
        if (filtro.getIdNivel0() != null) {
            sql.append(" and n.id_nivel0 = ?id_nivel0");
        }
        if (filtro.getIdNivel1() != null) {
            sql.append(" and n.id_nivel1 = ?id_nivel1");
        }
        if (filtro.getIdNivel2() != null) {
            sql.append(" and n.id_nivel2 = ?id_nivel2");
        }
        if (filtro.getIdNivel3() != null) {
            sql.append(" and n.id_nivel3 = ?id_nivel3");
        }
        if (filtro.getIdNivel4() != null) {
            sql.append(" and n.id_nivel4 = ?id_nivel4");
        }
        if (filtro.getIdNivel5() != null) {
            sql.append(" and n.id_nivel5 = ?id_nivel5");
        }
        if (filtro.getIdEstablecimiento() != null) {
            sql.append(" and n.id_establecimiento = ?id_establecimiento");
        }
        if (filtro.getIdSede() != null) {
            sql.append(" and n.id_sede = ?id_sede");
        }

        Query query = tpm.getEm().createNativeQuery(sql.toString());
        query.setParameter("unidad_funcional", filtro.getUnidadFuncional());
        query.setParameter("id_tnt", tpm.getCurrentTenant());
        query.setParameter("periodo", filtro.getPeriodo());
        query.setParameter("idioma", filtro.getIdioma());
        query.setParameter("id_nivel0", filtro.getIdNivel0());
        query.setParameter("nivel_agrupamiento", filtro.getAgrupamiento());
        if (filtro.getIdNivel1() != null) {
            query.setParameter("id_nivel1", filtro.getIdNivel1());
        }
        if (filtro.getIdNivel2() != null) {
            query.setParameter("id_nivel2", filtro.getIdNivel2());
        }
        if (filtro.getIdNivel3() != null) {
            query.setParameter("id_nivel3", filtro.getIdNivel3());
        }
        if (filtro.getIdNivel4() != null) {
            query.setParameter("id_nivel4", filtro.getIdNivel4());
        }
        if (filtro.getIdNivel5() != null) {
            query.setParameter("id_nivel5", filtro.getIdNivel5());
        }
        if (filtro.getIdEstablecimiento() != null) {
            query.setParameter("id_establecimiento", filtro.getIdEstablecimiento());
        }
        if (filtro.getIdSede() != null) {
            query.setParameter("id_sede", filtro.getIdSede());
        }
        if (filtro.getIdPredio() != null) {
            query.setParameter("id_predio", filtro.getIdPredio());
        }
        return query.getResultList();
    }

    @Override
    public List<Object[]> consultarComedor(FiltroAmbitoAmbiente filtro) {
        return consultarComedorIndicadores(filtro);
    }

    private List<Object[]> consultarComedorIndicadores(FiltroAmbitoAmbiente filtro) {
        StringBuilder sql = new StringBuilder();
        sql.append(" select distinct ");
        if (filtro.isAgrupamientoSede()) {
            sql.append(" n.codigo_nivel1,n.nombre_nivel1");
            sql.append(",n.codigo_nivel2,n.nombre_nivel2");
            sql.append(",n.codigo_nivel3,n.nombre_nivel3");
            sql.append(",n.codigo_nivel4,n.nombre_nivel4");
            sql.append(",n.codigo_nivel5,n.nombre_nivel5");
            sql.append(", n.codigo_establecimiento, n.nombre_establecimiento");
            sql.append(", n.codigo_sede, n.nombre_sede");
            // Número de poblacion atendida
            sql.append(" ,poblacion_atendida.valor");
            // area idonea
            sql.append(" ,area_idonea.valor");
            // deficit_estandar
            sql.append(" ,deficit_estandar.valor");
            // cumplimiento_norma
            sql.append(" ,cumplimiento_norma.valor");
        } else {
            if (filtro.isAgrupamientoEstablecimiento()) {
                sql.append(" n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
                sql.append(",n.codigo_nivel4,n.nombre_nivel4");
                sql.append(",n.codigo_nivel5,n.nombre_nivel5");
                sql.append(", n.codigo_establecimiento, n.nombre_establecimiento");
            }
            if (filtro.isAgrupamientoNivel0()) {
                sql.append(" n.nombre_nivel0");
            }
            if (filtro.isAgrupamientoNivel1()) {
                sql.append(" n.codigo_nivel1,n.nombre_nivel1");
            }
            if (filtro.isAgrupamientoNivel2()) {
                sql.append("n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
            }
            if (filtro.isAgrupamientoNivel3()) {
                sql.append("n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
            }
            if (filtro.isAgrupamientoNivel4()) {
                sql.append("n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
                sql.append(",n.codigo_nivel4,n.nombre_nivel4");
            }
            if (filtro.isAgrupamientoNivel5()) {
                sql.append("n.codigo_nivel1,n.nombre_nivel1");
                sql.append(",n.codigo_nivel2,n.nombre_nivel2");
                sql.append(",n.codigo_nivel3,n.nombre_nivel3");
                sql.append(",n.codigo_nivel4,n.nombre_nivel4");
                sql.append(",n.codigo_nivel5,n.nombre_nivel5");
            }
            //Sedes que incumplen                
            sql.append(" ,coalesce(sedes_incumplen.valor,'0')");
            // proporcion sedes
            sql.append(" ,to_number(coalesce(sedes_incumplen.valor,'0'),'9999999')/to_number(case when tot_sede.valor = '0' then '1' else tot_sede.valor end ,'9999999') proporcion_sedes");
        }
        // #  espacios por tipo
        sql.append(" ,coalesce(tbl_tipo_espacio.valor,'0')");
        // Proporción espacios
        sql.append(" ,to_number(coalesce(tbl_tipo_espacio.valor,'0'),'9999999')/to_number(case when tb_total_espacios.valor = '0' then '1' else tb_total_espacios.valor end ,'9999999') proporcion_espacios");
        // Area tipo espacio  (m2)
        sql.append(" ,coalesce(area_tipo_espacio.valor,'0')");

        // FROM 
        sql.append(" from ind_auxiliar_indicador aux");
        sql.append(" inner join ind_auxiliar_consultas n on n.id_predio = aux.id_predio and n.periodo = aux.periodo and n.id_tnt = aux.id_tnt");

        String strSQLNivelAgrupamiento = this.getSQLNivelAgrupamiento(filtro);
        String strSQLConsultarIndicador = this.getSQLConsultarIndicadorAlmacenado();

        // #  espacios por tipo
        sql.append(" left join (");
        sql.append(strSQLConsultarIndicador);
        sql.append(" ) tbl_tipo_espacio on tbl_tipo_espacio.id_tnt = aux.id_tnt and tbl_tipo_espacio.periodo = aux.periodo");
        sql.append(String.format(" and tbl_tipo_espacio.cod_indicador = '%s'", ParamIndicador.IND_AMBIENTE_ESPACIOS_TIPO));
        sql.append(" and tbl_tipo_espacio.nivel_agrupamiento = ?nivel_agrupamiento");
        sql.append(" and tbl_tipo_espacio.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
        sql.append(" and tbl_tipo_espacio.cod_valor = ?unidad_funcional");

        //total espacios
        sql.append(" left join (");
        sql.append(strSQLConsultarIndicador);
        sql.append(" ) tb_total_espacios on tb_total_espacios.id_tnt = aux.id_tnt and tb_total_espacios.periodo = aux.periodo");
        sql.append(String.format(" and tb_total_espacios.cod_indicador = '%s'", ParamIndicador.IND_TOTAL_ESPACIOS));
        sql.append(" and tb_total_espacios.nivel_agrupamiento = ?nivel_agrupamiento");
        sql.append(" and tb_total_espacios.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

        //area tipo de espacio
        sql.append(" left join (");
        sql.append(strSQLConsultarIndicador);
        sql.append(" ) area_tipo_espacio on area_tipo_espacio.id_tnt = aux.id_tnt and area_tipo_espacio.periodo = aux.periodo");
        sql.append(String.format(" and area_tipo_espacio.cod_indicador = '%s'", ParamIndicador.IND_AMBIENTE_AREA_TIPO_ESPACIO));
        sql.append(" and area_tipo_espacio.nivel_agrupamiento = ?nivel_agrupamiento");
        sql.append(" and area_tipo_espacio.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
        sql.append(" and area_tipo_espacio.cod_valor = ?unidad_funcional");

        if (filtro.isAgrupamientoSede()) {
            //poblacion atendida
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) poblacion_atendida on poblacion_atendida.id_tnt = aux.id_tnt and poblacion_atendida.periodo = aux.periodo");
            sql.append(String.format(" and poblacion_atendida.cod_indicador = '%s'", ParamIndicador.IND_AMBIENTE_COMEDOR_TAM_POB_ATENDIDA));
            sql.append(" and poblacion_atendida.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and poblacion_atendida.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            //area idonea
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) area_idonea on area_idonea.id_tnt = aux.id_tnt and area_idonea.periodo = aux.periodo");
            sql.append(String.format(" and area_idonea.cod_indicador = '%s'", ParamIndicador.IND_AMBIENTE_COMEDOR_AREA_IDONEA));
            sql.append(" and area_idonea.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and area_idonea.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            //total de espacios
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) deficit_estandar on deficit_estandar.id_tnt = aux.id_tnt and deficit_estandar.periodo = aux.periodo");
            sql.append(String.format(" and deficit_estandar.cod_indicador = '%s'", ParamIndicador.IND_AMBIENTE_COMEDOR_DEFICIT_ESTANDAR));
            sql.append(" and deficit_estandar.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and deficit_estandar.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            //area tipo de espacio
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) cumplimiento_norma on cumplimiento_norma.id_tnt = aux.id_tnt and cumplimiento_norma.periodo = aux.periodo");
            sql.append(String.format(" and cumplimiento_norma.cod_indicador = '%s'", ParamIndicador.IND_AMBIENTE_COMEDOR_CUMPLIMIENTO_NORMA));
            sql.append(" and cumplimiento_norma.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and cumplimiento_norma.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

        } else {
            //Sedes que incumplen   
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) sedes_incumplen on sedes_incumplen.id_tnt = aux.id_tnt and sedes_incumplen.periodo = aux.periodo");
            sql.append(String.format(" and sedes_incumplen.cod_indicador = '%s'", ParamIndicador.IND_AMBIENTE_COMEDOR_NUM_SED_INCUMPLEN_NORMA));
            sql.append(" and sedes_incumplen.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and sedes_incumplen.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);

            // total de sedes
            sql.append(" left join (");
            sql.append(strSQLConsultarIndicador);
            sql.append(" ) tot_sede on tot_sede.id_tnt = aux.id_tnt and tot_sede.periodo = aux.periodo");
            sql.append(String.format(" and tot_sede.cod_indicador = '%s'", ParamIndicador.IND_TOTAL_SEDES));
            sql.append(" and tot_sede.nivel_agrupamiento = ?nivel_agrupamiento");
            sql.append(" and tot_sede.id_entidad_nivel = n.").append(strSQLNivelAgrupamiento);
        }

        // WHERE
        sql.append(" where aux.id_tnt = ?id_tnt and aux.periodo = ?periodo");
        if (filtro.isAgrupamientoPredio()) {
            sql.append(" and n.principal_establecimiento = 1");
        }
        if (filtro.getIdNivel0() != null) {
            sql.append(" and n.id_nivel0 = ?id_nivel0");
        }
        if (filtro.getIdNivel1() != null) {
            sql.append(" and n.id_nivel1 = ?id_nivel1");
        }
        if (filtro.getIdNivel2() != null) {
            sql.append(" and n.id_nivel2 = ?id_nivel2");
        }
        if (filtro.getIdNivel3() != null) {
            sql.append(" and n.id_nivel3 = ?id_nivel3");
        }
        if (filtro.getIdNivel4() != null) {
            sql.append(" and n.id_nivel4 = ?id_nivel4");
        }
        if (filtro.getIdNivel5() != null) {
            sql.append(" and n.id_nivel5 = ?id_nivel5");
        }
        if (filtro.getIdEstablecimiento() != null) {
            sql.append(" and n.id_establecimiento = ?id_establecimiento");
        }
        if (filtro.getIdSede() != null) {
            sql.append(" and n.id_sede = ?id_sede");
        }

        Query query = tpm.getEm().createNativeQuery(sql.toString());
        query.setParameter("unidad_funcional", filtro.getUnidadFuncional());
        query.setParameter("id_tnt", tpm.getCurrentTenant());
        query.setParameter("periodo", filtro.getPeriodo());
        query.setParameter("idioma", filtro.getIdioma());
        query.setParameter("id_nivel0", filtro.getIdNivel0());
        query.setParameter("nivel_agrupamiento", filtro.getAgrupamiento());
        if (filtro.getIdNivel1() != null) {
            query.setParameter("id_nivel1", filtro.getIdNivel1());
        }
        if (filtro.getIdNivel2() != null) {
            query.setParameter("id_nivel2", filtro.getIdNivel2());
        }
        if (filtro.getIdNivel3() != null) {
            query.setParameter("id_nivel3", filtro.getIdNivel3());
        }
        if (filtro.getIdNivel4() != null) {
            query.setParameter("id_nivel4", filtro.getIdNivel4());
        }
        if (filtro.getIdNivel5() != null) {
            query.setParameter("id_nivel5", filtro.getIdNivel5());
        }
        if (filtro.getIdEstablecimiento() != null) {
            query.setParameter("id_establecimiento", filtro.getIdEstablecimiento());
        }
        if (filtro.getIdSede() != null) {
            query.setParameter("id_sede", filtro.getIdSede());
        }
        if (filtro.getIdPredio() != null) {
            query.setParameter("id_predio", filtro.getIdPredio());
        }
        return query.getResultList();
    }

    @Override
    public List<Object[]> consultarEspaciosConsolidados(FiltroAmbitoEspacioConsolidado filtro, boolean isDetalladoPredio, List<UnidadFuncional> unidades, List<UnidadFuncional> unidadesBD) {
        if (ParamBaseDatos.ORACLE.equals(UtilProperties.getDbMotor())) {
            return this.consultarEspaciosConsolidadosOracle(filtro, isDetalladoPredio, unidades);
        } else {
            return this.consultarEspaciosConsolidadosPostgres(filtro, isDetalladoPredio, unidades,unidadesBD);
        }
    }

    private List<Object[]> consultarEspaciosConsolidadosPostgres(FiltroAmbitoEspacioConsolidado filtro, boolean isDetalladoPredio, List<UnidadFuncional> unidades, List<UnidadFuncional> unidadesBD) {
        StringBuilder sql = new StringBuilder();
        sql.append("SELECT ");
        if (!isDetalladoPredio) {
            sql.append(" niv1.codigo,niv1.descripcion ");
            if (filtro.getIdNivel1() != null) {
                sql.append(",niv2.codigo,niv2.descripcion ");
            }
            if (filtro.getIdNivel2() != null) {
                sql.append(",niv3.codigo,niv3.descripcion ");
            }
            if (filtro.getIdNivel3() != null) {
                sql.append(",niv4.codigo,niv4.descripcion ");
            }
        } else {
            sql.append(" niv1.codigo,niv1.descripcion, "
                    + " niv2.codigo,niv2.descripcion, "
                    + " niv3.codigo,niv3.descripcion, "
                    + " niv4.codigo,niv4.descripcion, "
                    + " niv5.codigo,niv5.descripcion, "
                    + " cod_establecimiento,nom_establecimiento, "
                    + " cod_sede, nom_sede, "
                    + " cod_predio,nom_predio,"
                    + " sector,zona ");
        }

        for (UnidadFuncional unidad : unidades) {
            if (unidad.equals(unidades.get(0))) {
                sql.append(",");
            }
            sql.append("'").append(unidad.getCodigo()).append("',").append(unidad.getCodigo());
            if (!unidad.equals(unidades.get(unidades.size() - 1))) {
                sql.append(",");
            }
        }

        sql.append(" FROM crosstab('SELECT \n"
                + " dense_rank() OVER (ORDER BY ");

        if (!isDetalladoPredio) {
            sql.append(" id_tnt,id_nivel0,");
            if (filtro.getIdNivel1() != null) {
                sql.append("id_nivel1,id_nivel2 ");
            }
            if (filtro.getIdNivel2() != null) {
                sql.append(", id_nivel3 ");
            }
            if (filtro.getIdNivel3() != null) {
                sql.append(", id_nivel4 ");
            }
            sql.append(") AS row_name,");
        } else {
            sql.append(" id_tnt,id_nivel0,"
                    + " id_nivel1,id_nivel2,"
                    + " id_nivel3,id_nivel4,"
                    + " id_nivel5, "
                    + " cod_establecimiento,nom_establecimiento,"
                    + " cod_sede, nom_sede,"
                    + " cod_predio,nom_predio,"
                    + " sector,zona)::int AS row_name, ");
        }
        
        if (!isDetalladoPredio) {
            sql.append(" id_tnt main_tnt,id_nivel0,");
            if (filtro.getIdNivel1() != null) {
                sql.append("id_nivel1,id_nivel2");
            }
            if (filtro.getIdNivel2() != null) {
                sql.append(", id_nivel3 ");
            }
            if (filtro.getIdNivel3() != null) {
                sql.append(", id_nivel4 ");
            }
        } else {
            sql.append(" id_tnt main_tnt,"
                    + " id_nivel0,id_nivel1,"
                    + " id_nivel2,id_nivel3,"
                    + " id_nivel4,id_nivel5, "
                    + " cod_establecimiento,nom_establecimiento,"
                    + " cod_sede,nom_sede,"
                    + " cod_predio,nom_predio,"
                    + " sector,zona ");
        }
        sql.append(", ambiente,SUM(num_espacios::numeric) espacios FROM");

        sql.append(" (SELECT DISTINCT id_tnt, niv_000 id_nivel0, " + " niv_001 id_nivel1,     niv_002 id_nivel2,     niv_003 id_nivel3,     niv_004 id_nivel4,     "
                + "niv_005 id_nivel5,     gen_003 cod_establecimiento, " + " gen_004 nom_establecimiento,     gen_005 cod_predio,    gen_011 nom_predio,    "
                + "gen_006 cod_sede,     gen_007 nom_sede,     gen_012 sector, " + " gen_013 zona,     bas_002 ambiente,     bas_004, bas_001 num_espacios  "
                + "FROM DIG_GRP_RSP_FACT  WHERE bas_002 IS NOT NULL ) sc1 ");

        if (!isDetalladoPredio) {
            sql.append(" GROUP BY id_tnt,id_nivel0,");
            if (filtro.getIdNivel1() != null) {
                sql.append("id_nivel1,id_nivel2");
            }
            if (filtro.getIdNivel2() != null) {
                sql.append(",id_nivel3 ");
            }
            if (filtro.getIdNivel3() != null) {
                sql.append(",id_nivel4 ");
            }
            sql.append(",ambiente ' ");
        }else{
            sql.append(" GROUP BY id_tnt,id_nivel0,id_nivel1,id_nivel2,"
                    + " id_nivel3,id_nivel4,id_nivel5,"
                    + " cod_establecimiento,nom_establecimiento,"
                    + " cod_sede,nom_sede,\n"
                    + " cod_predio,nom_predio,"
                    + " sector,zona, ambiente ' ");
        }

        sql.append(",'SELECT codigo FROM cier.ins_unidades_funcionales order by codigo')\n"
                + " AS result( ");

        if (!isDetalladoPredio) {
            sql.append("row_name int, main_tnt numeric, ");
            if (filtro.getIdNivel1() != null) {
                sql.append("id_nivel0 numeric, id_nivel1 numeric, id_nivel2 numeric,");
            }
            if (filtro.getIdNivel2() != null) {
                sql.append("id_nivel3 numeric, ");
            }
            if (filtro.getIdNivel3() != null) {
                sql.append("id_nivel4 numeric, ");
            }
        }else{
            sql.append(" row_name int, "
                + "	main_tnt numeric, "
                + "	id_nivel0 numeric, "
                + "	id_nivel1 numeric, "
                + "	id_nivel2 numeric, "
                + "	id_nivel3 numeric, "
                + "	id_nivel4 numeric, "
                + "	id_nivel5 numeric, "
                + "	cod_establecimiento numeric, "
                + "	nom_establecimiento text, "
                + "	cod_sede numeric, "
                + "	nom_sede text, "
                + "	cod_predio numeric, "
                + "	nom_predio text, "
                + "	sector text, "
                + "	zona text, ");
        }

        for (UnidadFuncional unidad : unidadesBD) {
            sql.append(unidad.getCodigo()).append(" text ");
            if (!unidad.equals(unidadesBD.get(unidadesBD.size() - 1))) {
                sql.append(",");
            }
        }
         
        sql.append( ") ");

        if (!isDetalladoPredio) {
            sql.append("LEFT JOIN dpa_niveles niv1 on niv1.id=id_nivel1 ");
            if (filtro.getIdNivel1() != null) {
                sql.append("LEFT JOIN dpa_niveles niv2 on niv2.id=id_nivel2 ");
            }
            if (filtro.getIdNivel2() != null) {
                sql.append("LEFT JOIN dpa_niveles niv3 on niv3.id=id_nivel3 ");
            }
            if (filtro.getIdNivel3() != null) {
                sql.append("LEFT JOIN dpa_niveles niv4 on niv4.id=id_nivel4 ");
            }
        } else {
            sql.append("LEFT JOIN dpa_niveles niv1 on niv1.id= id_nivel1 "
                    + "LEFT JOIN dpa_niveles niv2 on niv2.id= id_nivel2 "
                    + "LEFT JOIN dpa_niveles niv3 on niv3.id= id_nivel3 "
                    + "LEFT JOIN dpa_niveles niv4 on niv4.id= id_nivel4 "
                    + "LEFT JOIN dpa_niveles niv5 on niv5.id= id_nivel5 ");
        }

        sql.append("WHERE main_tnt = ");
        sql.append(tpm.getCurrentTenant());

        if (filtro.getIdNivel1() != null) {
            sql.append("  AND id_nivel1 = ");
            sql.append(filtro.getIdNivel1());
        }
        if (filtro.getIdNivel2() != null) {
            sql.append("   AND id_nivel2 = ");
            sql.append(filtro.getIdNivel2());
        }
        if (filtro.getIdNivel3() != null) {
            sql.append("   AND id_nivel3 = ");
            sql.append(filtro.getIdNivel3());
        }
        if (filtro.getIdNivel4() != null) {
            sql.append("   AND id_nivel4 = ");
            sql.append(filtro.getIdNivel4());
        }
        if (!filtro.getCodEstablecimiento().isEmpty()) {
            sql.append("   AND cod_establecimiento = '");
            sql.append(filtro.getCodEstablecimiento());
            sql.append("'");
        }
        Query query = tpm.getEm().createNativeQuery(sql.toString());
        return query.getResultList();
    }

    private List<Object[]> consultarEspaciosConsolidadosOracle(FiltroAmbitoEspacioConsolidado filtro, boolean isDetalladoPredio, List<UnidadFuncional> unidades) {
        StringBuilder sql = new StringBuilder();
        sql.append("SELECT ");
        if (!isDetalladoPredio) {
            //Preguntar por los diferentes filtros
            sql.append("niv1.codigo,niv1.descripcion ");
            if (filtro.getIdNivel1() != null) {
                sql.append(",niv2.codigo,niv2.descripcion ");
            }
            if (filtro.getIdNivel2() != null) {
                sql.append(",niv3.codigo,niv3.descripcion ");
            }
            if (filtro.getIdNivel3() != null) {
                sql.append(",niv4.codigo,niv4.descripcion ");
            }
        } else {
            sql.append("niv1.codigo,niv1.descripcion, "
                    + "niv2.codigo,niv2.descripcion, "
                    + "niv3.codigo,niv3.descripcion, "
                    + "niv4.codigo,niv4.descripcion, "
                    + "niv5.codigo,niv5.descripcion, "
                    + "cod_establecimiento, "
                    + "nom_establecimiento, "
                    + "cod_sede, "
                    + "nom_sede, "
                    + "cod_predio, "
                    + "nom_predio, "
                    + "sector, "
                    + "zona ");
        }

        for (UnidadFuncional unidad : unidades) {
            if (unidad.equals(unidades.get(0))) {
                sql.append(",");
            }
            sql.append("'").append(unidad.getCodigo()).append("',").append(unidad.getCodigo());
            if (!unidad.equals(unidades.get(unidades.size() - 1))) {
                sql.append(",");
            }
        }

        sql.append(" FROM (\n"
                + "SELECT ");
        if (!isDetalladoPredio) {
            sql.append("id_tnt,"
                    + "id_nivel0,"
                    + "id_nivel1,");
            if (filtro.getIdNivel1() != null) {
                sql.append("id_nivel2,");
            }
            if (filtro.getIdNivel2() != null) {
                sql.append("id_nivel3,");
            }
            if (filtro.getIdNivel3() != null) {
                sql.append("id_nivel4,");
            }
        } else {
            sql.append("id_tnt,"
                    + "id_nivel0,"
                    + "id_nivel1,"
                    + "id_nivel2,"
                    + "id_nivel3,"
                    + "id_nivel4,"
                    + "id_nivel5,"
                    + " cod_establecimiento,nom_establecimiento,"
                    + "cod_sede,nom_sede,cod_predio,nom_predio,sector,zona,");
        }

        sql.append("    ambiente,SUM(num_espacios) espacios "
                + "FROM( "
                + "SELECT DISTINCT id_tnt, "
                + "    niv_000 id_nivel0, "
                + "    niv_001 id_nivel1, "
                + "    niv_002 id_nivel2, "
                + "    niv_003 id_nivel3, "
                + "    niv_004 id_nivel4, "
                + "    niv_005 id_nivel5, "
                + "    gen_003 cod_establecimiento, "
                + "    gen_004 nom_establecimiento, "
                + "    gen_005 cod_predio,"
                + "    gen_011 nom_predio,"
                + "    gen_006 cod_sede, "
                + "    gen_007 nom_sede, "
                + "    gen_012 sector, "
                + "    gen_013 zona, "
                + "    bas_002 ambiente, "
                + "    bas_004, bas_001 num_espacios "
                + " FROM DIG_GRP_RSP_FACT "
                + " WHERE bas_002 IS NOT NULL  "
                + "   AND id_tnt = ?id_tnt  ");
        if (filtro.getIdNivel1() != null) {
            sql.append("   AND niv_001 = ?id_n1  \n");
        }
        if (filtro.getIdNivel2() != null) {
            sql.append("   AND niv_002 = ?id_n2  \n");
        }
        if (filtro.getIdNivel3() != null) {
            sql.append("   AND niv_003 = ?id_n3  \n");
        }
        if (filtro.getIdNivel4() != null) {
            sql.append("   AND niv_004 = ?id_n4  \n");
        }
        if (!filtro.getCodEstablecimiento().isEmpty()) {
            sql.append("   AND gen_003 = ?cod_establecimiento  \n");
        }
        if (!isDetalladoPredio) {
            sql.append(") "
                    + "GROUP BY id_tnt,"
                    + "id_nivel0,"
                    + "id_nivel1, ");
            if (filtro.getIdNivel1() != null) {
                sql.append("id_nivel2,");
            }
            if (filtro.getIdNivel2() != null) {
                sql.append("id_nivel3,");
            }
            if (filtro.getIdNivel3() != null) {
                sql.append("id_nivel4,");
            }
        } else {
            sql.append(") "
                    + "GROUP BY id_tnt,"
                    + "id_nivel0,"
                    + "id_nivel1,"
                    + "id_nivel2,"
                    + "id_nivel3,"
                    + "id_nivel4,"
                    + "id_nivel5,"
                    + "cod_establecimiento,nom_establecimiento,"
                    + "cod_sede,nom_sede,"
                    + "cod_predio,nom_predio,"
                    + "sector,zona,");
        }
        sql.append(" ambiente) tbl PIVOT\n"
                + "   (    \n"
                + "   MIN(espacios)\n"
                + "   for ambiente in (");

        for (UnidadFuncional unidad : unidades) {
            sql.append("'").append(unidad.getCodigo()).append("' ").append(unidad.getCodigo());
            if (!unidad.equals(unidades.get(unidades.size() - 1))) {
                sql.append(",");
            }
        }

        sql.append(" )) tbl2 ");
        if (!isDetalladoPredio) {
            sql.append("LEFT JOIN dpa_niveles niv1 on niv1.id=tbl2.id_nivel1 ");
            if (filtro.getIdNivel1() != null) {
                sql.append("LEFT JOIN dpa_niveles niv2 on niv2.id=tbl2.id_nivel2 ");
            }
            if (filtro.getIdNivel2() != null) {
                sql.append("LEFT JOIN dpa_niveles niv3 on niv3.id=tbl2.id_nivel3 ");
            }
            if (filtro.getIdNivel3() != null) {
                sql.append("LEFT JOIN dpa_niveles niv4 on niv4.id=tbl2.id_nivel4 ");
            }
        } else {
            sql.append("LEFT JOIN dpa_niveles niv1 on niv1.id=tbl2.id_nivel1 "
                    + "LEFT JOIN dpa_niveles niv2 on niv2.id=tbl2.id_nivel2 "
                    + "LEFT JOIN dpa_niveles niv3 on niv3.id=tbl2.id_nivel3 "
                    + "LEFT JOIN dpa_niveles niv4 on niv4.id=tbl2.id_nivel4 "
                    + "LEFT JOIN dpa_niveles niv5 on niv5.id=tbl2.id_nivel5 ");
        }
        Query query = tpm.getEm().createNativeQuery(sql.toString());
        query.setParameter("id_tnt", tpm.getCurrentTenant());
        if (filtro.getIdNivel1() != null) {
            query.setParameter("id_n1", filtro.getIdNivel1());
        }
        if (filtro.getIdNivel2() != null) {
            query.setParameter("id_n2", filtro.getIdNivel2());
        }
        if (filtro.getIdNivel3() != null) {
            query.setParameter("id_n3", filtro.getIdNivel3());
        }
        if (filtro.getIdNivel4() != null) {
            query.setParameter("id_n4", filtro.getIdNivel4());
        }
        if (!filtro.getCodEstablecimiento().isEmpty()) {
            query.setParameter("cod_establecimiento", filtro.getCodEstablecimiento());
        }
        return query.getResultList();
    }
}
